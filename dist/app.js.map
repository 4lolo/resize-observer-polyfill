{"version":3,"file":"app.js","sources":["../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/app.js","../node_modules/randomcolor/randomColor.js"],"sourcesContent":["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map != 'undefined') {\r\n        return Map;\r\n    }\r\n\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return (function () {\r\n        function anonymous() {\r\n            this.__entries__ = [];\r\n        }\r\n\r\n        var prototypeAccessors = { size: {} };\r\n\r\n        /**\r\n         * @returns {boolean}\r\n         */\r\n        prototypeAccessors.size.get = function () {\r\n            return this.__entries__.length;\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        anonymous.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n\r\n            return entry && entry[1];\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            } else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.forEach = function (callback, ctx) {\r\n            if ( ctx === void 0 ) ctx = null;\r\n\r\n            for (var i = 0, list = this.__entries__; i < list.length; i += 1) {\r\n                var entry = list[i];\r\n\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n\r\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\r\n\r\n        return anonymous;\r\n    }());\r\n})();\r\n\r\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window != 'undefined' && typeof document != 'undefined' && window.document === document;\r\n\r\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        return requestAnimationFrame;\r\n    }\r\n\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\r\n\r\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nvar throttle = function (callback, delay) {\r\n    var leadingCall = false,\r\n        trailingCall = false,\r\n        lastCallTime = 0;\r\n\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n\r\n            callback();\r\n        }\r\n\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        } else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n\r\n        lastCallTime = timeStamp;\r\n    }\r\n\r\n    return proxy;\r\n};\r\n\r\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n\r\n// Detect whether running in IE 11 (facepalm).\r\nvar isIE11 = typeof navigator != 'undefined' && /Trident\\/.*rv:11/.test(navigator.userAgent);\r\n\r\n// MutationObserver should not be used if running in Internet Explorer 11 as it's\r\n// implementation is unreliable. Example: https://jsfiddle.net/x2r3jpuz/2/\r\n//\r\n// It's a real bummer that there is no other way to check for this issue but to\r\n// use the UA information.\r\nvar mutationObserverSupported = typeof MutationObserver != 'undefined' && !isIE11;\r\n\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = function() {\r\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\r\n    this.connected_ = false;\r\n\r\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\r\n    this.mutationEventsAdded_ = false;\r\n\r\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\r\n    this.mutationsObserver_ = null;\r\n\r\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\r\n    this.observers_ = [];\r\n\r\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n};\r\n\r\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.addObserver = function (observer) {\r\n    if (!~this.observers_.indexOf(observer)) {\r\n        this.observers_.push(observer);\r\n    }\r\n\r\n    // Add listeners if they haven't been added yet.\r\n    if (!this.connected_) {\r\n        this.connect_();\r\n    }\r\n};\r\n\r\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.removeObserver = function (observer) {\r\n    var observers = this.observers_;\r\n    var index = observers.indexOf(observer);\r\n\r\n    // Remove observer if it's present in registry.\r\n    if (~index) {\r\n        observers.splice(index, 1);\r\n    }\r\n\r\n    // Remove listeners if controller has no connected observers.\r\n    if (!observers.length && this.connected_) {\r\n        this.disconnect_();\r\n    }\r\n};\r\n\r\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.refresh = function () {\r\n    var changesDetected = this.updateObservers_();\r\n\r\n    // Continue running updates if changes have been detected as there might\r\n    // be future ones caused by CSS transitions.\r\n    if (changesDetected) {\r\n        this.refresh();\r\n    }\r\n};\r\n\r\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\r\nResizeObserverController.prototype.updateObservers_ = function () {\r\n    // Collect observers that have active observations.\r\n    var activeObservers = this.observers_.filter(function (observer) {\r\n        return observer.gatherActive(), observer.hasActive();\r\n    });\r\n\r\n    // Deliver notifications in a separate cycle in order to avoid any\r\n    // collisions between observers, e.g. when multiple instances of\r\n    // ResizeObserver are tracking the same element and the callback of one\r\n    // of them changes content dimensions of the observed target. Sometimes\r\n    // this may result in notifications being blocked for the rest of observers.\r\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n\r\n    return activeObservers.length > 0;\r\n};\r\n\r\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.connect_ = function () {\r\n    // Do nothing if running in a non-browser environment or if listeners\r\n    // have been already added.\r\n    if (!isBrowser || this.connected_) {\r\n        return;\r\n    }\r\n\r\n    // Subscription to the \"Transitionend\" event is used as a workaround for\r\n    // delayed transitions. This way it's possible to capture at least the\r\n    // final state of an element.\r\n    document.addEventListener('transitionend', this.onTransitionEnd_);\r\n\r\n    window.addEventListener('resize', this.refresh);\r\n\r\n    if (mutationObserverSupported) {\r\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n\r\n        this.mutationsObserver_.observe(document, {\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true,\r\n            subtree: true\r\n        });\r\n    } else {\r\n        document.addEventListener('DOMSubtreeModified', this.refresh);\r\n\r\n        this.mutationEventsAdded_ = true;\r\n    }\r\n\r\n    this.connected_ = true;\r\n};\r\n\r\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.disconnect_ = function () {\r\n    // Do nothing if running in a non-browser environment or if listeners\r\n    // have been already removed.\r\n    if (!isBrowser || !this.connected_) {\r\n        return;\r\n    }\r\n\r\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n    window.removeEventListener('resize', this.refresh);\r\n\r\n    if (this.mutationsObserver_) {\r\n        this.mutationsObserver_.disconnect();\r\n    }\r\n\r\n    if (this.mutationEventsAdded_) {\r\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n    }\r\n\r\n    this.mutationsObserver_ = null;\r\n    this.mutationEventsAdded_ = false;\r\n    this.connected_ = false;\r\n};\r\n\r\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\r\n        var propertyName = ref.propertyName;\r\n\r\n    // Detect whether transition may affect dimensions of an element.\r\n    var isReflowProperty = transitionKeys.some(function (key) {\r\n        return !!~propertyName.indexOf(key);\r\n    });\r\n\r\n    if (isReflowProperty) {\r\n        this.refresh();\r\n    }\r\n};\r\n\r\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\r\nResizeObserverController.getInstance = function () {\r\n    if (!this.instance_) {\r\n        this.instance_ = new ResizeObserverController();\r\n    }\r\n\r\n    return this.instance_;\r\n};\r\n\r\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\r\nResizeObserverController.instance_ = null;\r\n\r\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\r\n        var key = list[i];\r\n\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n\r\n    return target;\r\n});\r\n\r\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = Array.prototype.slice.call(arguments, 1);\r\n\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n\r\n    for (var i = 0, list = positions; i < list.length; i += 1) {\r\n        var position = list[i];\r\n\r\n        var value = styles['padding-' + position];\r\n\r\n        paddings[position] = toFloat(value);\r\n    }\r\n\r\n    return paddings;\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth;\r\n    var clientHeight = target.clientHeight;\r\n\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n\r\n    var styles = getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width),\r\n        height = toFloat(styles.height);\r\n\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement != 'undefined') {\r\n        return function (target) { return target instanceof SVGGraphicsElement; };\r\n    }\r\n\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return target instanceof SVGElement && typeof target.getBBox === 'function'; };\r\n})();\r\n\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === document.documentElement;\r\n}\r\n\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n\r\n    return getHTMLElementContentRect(target);\r\n}\r\n\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(ref) {\r\n    var x = ref.x;\r\n    var y = ref.y;\r\n    var width = ref.width;\r\n    var height = ref.height;\r\n\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly != 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n\r\n    return rect;\r\n}\r\n\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\r\n\r\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = function(target) {\r\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\r\n    this.broadcastWidth = 0;\r\n\r\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\r\n    this.broadcastHeight = 0;\r\n\r\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\r\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n\r\n    /**\r\n     * Reference to the observed element.\r\n     *\r\n     * @type {Element}\r\n     */\r\n    this.target = target;\r\n};\r\n\r\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\r\nResizeObservation.prototype.isActive = function () {\r\n    var rect = getContentRect(this.target);\r\n\r\n    this.contentRect_ = rect;\r\n\r\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\r\n};\r\n\r\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\r\nResizeObservation.prototype.broadcastRect = function () {\r\n    var rect = this.contentRect_;\r\n\r\n    this.broadcastWidth = rect.width;\r\n    this.broadcastHeight = rect.height;\r\n\r\n    return rect;\r\n};\r\n\r\nvar ResizeObserverEntry = function(target, rectInit) {\r\n    var contentRect = createReadOnlyRect(rectInit);\r\n\r\n    // According to the specification following properties are not writable\r\n    // and are also not enumerable in the native implementation.\r\n    //\r\n    // Property accessors are not being used as they'd require to define a\r\n    // private WeakMap storage which may cause memory leaks in browsers that\r\n    // don't support this type of collections.\r\n    defineConfigurable(this, { target: target, contentRect: contentRect });\r\n};\r\n\r\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\r\n    if (typeof callback !== 'function') {\r\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n    }\r\n\r\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\r\n    this.activeObservations_ = [];\r\n\r\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\r\n    this.observations_ = new MapShim();\r\n\r\n    /**\r\n     * Reference to the callback function.\r\n     *\r\n     * @private {ResizeObserverCallback}\r\n     */\r\n    this.callback_ = callback;\r\n\r\n    /**\r\n     * Reference to the associated ResizeObserverController.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    this.controller_ = controller;\r\n\r\n    /**\r\n     * Public ResizeObserver instance which will be passed to the callback\r\n     * function and used as a value of it's \"this\" binding.\r\n     *\r\n     * @private {ResizeObserver}\r\n     */\r\n    this.callbackCtx_ = callbackCtx;\r\n};\r\n\r\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.observe = function (target) {\r\n    if (!arguments.length) {\r\n        throw new TypeError('1 argument required, but only 0 present.');\r\n    }\r\n\r\n    // Do nothing if current environment doesn't have the Element interface.\r\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n        return;\r\n    }\r\n\r\n    if (!(target instanceof Element)) {\r\n        throw new TypeError('parameter 1 is not of type \"Element\".');\r\n    }\r\n\r\n    var observations = this.observations_;\r\n\r\n    // Do nothing if element is already being observed.\r\n    if (observations.has(target)) {\r\n        return;\r\n    }\r\n\r\n    observations.set(target, new ResizeObservation(target));\r\n\r\n    this.controller_.addObserver(this);\r\n\r\n    // Force the update of observations.\r\n    this.controller_.refresh();\r\n};\r\n\r\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.unobserve = function (target) {\r\n    if (!arguments.length) {\r\n        throw new TypeError('1 argument required, but only 0 present.');\r\n    }\r\n\r\n    // Do nothing if current environment doesn't have the Element interface.\r\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n        return;\r\n    }\r\n\r\n    if (!(target instanceof Element)) {\r\n        throw new TypeError('parameter 1 is not of type \"Element\".');\r\n    }\r\n\r\n    var observations = this.observations_;\r\n\r\n    // Do nothing if element is not being observed.\r\n    if (!observations.has(target)) {\r\n        return;\r\n    }\r\n\r\n    observations.delete(target);\r\n\r\n    if (!observations.size) {\r\n        this.controller_.removeObserver(this);\r\n    }\r\n};\r\n\r\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.disconnect = function () {\r\n    this.clearActive();\r\n    this.observations_.clear();\r\n    this.controller_.removeObserver(this);\r\n};\r\n\r\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.gatherActive = function () {\r\n        var this$1 = this;\r\n\r\n    this.clearActive();\r\n\r\n    this.observations_.forEach(function (observation) {\r\n        if (observation.isActive()) {\r\n            this$1.activeObservations_.push(observation);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.broadcastActive = function () {\r\n    // Do nothing if observer doesn't have active observations.\r\n    if (!this.hasActive()) {\r\n        return;\r\n    }\r\n\r\n    var ctx = this.callbackCtx_;\r\n\r\n    // Create ResizeObserverEntry instance for every active observation.\r\n    var entries = this.activeObservations_.map(function (observation) {\r\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n    });\r\n\r\n    this.callback_.call(ctx, entries, ctx);\r\n    this.clearActive();\r\n};\r\n\r\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.clearActive = function () {\r\n    this.activeObservations_.splice(0);\r\n};\r\n\r\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\r\nResizeObserverSPI.prototype.hasActive = function () {\r\n    return this.activeObservations_.length > 0;\r\n};\r\n\r\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap != 'undefined' ? new WeakMap() : new MapShim();\r\n\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver$1 = function(callback) {\r\n    if (!(this instanceof ResizeObserver$1)) {\r\n        throw new TypeError('Cannot call a class as a function');\r\n    }\r\n\r\n    if (!arguments.length) {\r\n        throw new TypeError('1 argument required, but only 0 present.');\r\n    }\r\n\r\n    var controller = ResizeObserverController.getInstance();\r\n    var observer = new ResizeObserverSPI(callback, controller, this);\r\n\r\n    observers.set(this, observer);\r\n};\r\n\r\n// Expose public methods of ResizeObserver.\r\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\r\n    ResizeObserver$1.prototype[method] = function () {\r\n        return (ref = observers.get(this))[method].apply(ref, arguments);\r\n        var ref;\r\n    };\r\n});\r\n\r\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof ResizeObserver != 'undefined') {\r\n        // eslint-disable-next-line no-undef\r\n        return ResizeObserver;\r\n    }\r\n\r\n    return ResizeObserver$1;\r\n})();\r\n\r\nexport default index;\r\n","// We need to use a polyfill itself here,\r\n// not its' possible native implementation.\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport randomColor from 'randomcolor';\r\n\r\nconst hues = [\r\n    'red',\r\n    'pink',\r\n    'blue',\r\n    'orange',\r\n    'purple',\r\n    'monochrome'\r\n];\r\n\r\nlet colorData = {\r\n    luminosity: 'light',\r\n    hue: hues[getRandomInt(0, 5)]\r\n};\r\n\r\nconst observer = new ResizeObserver(entries => {\r\n    for (const entry of entries) {\r\n        const rect = entry.contentRect;\r\n        const dimensionsStr = `${rect.width.toFixed(2)} x ${rect.height.toFixed(2)}`;\r\n\r\n        entry.target.firstElementChild.textContent = dimensionsStr;\r\n    }\r\n});\r\n\r\nlet index = 0;\r\nlet queue = [];\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction updateColorData() {\r\n    colorData.hue = hues[getRandomInt(0, 5)];\r\n}\r\n\r\nfunction generateColor() {\r\n    return randomColor(colorData);\r\n}\r\n\r\nfunction toArray(collection) {\r\n    return Array.prototype.slice.call(collection);\r\n}\r\n\r\nfunction generateElements(container, levels, items = 4) {\r\n    let index = items;\r\n\r\n    levels--;\r\n\r\n    while (index--) {\r\n        let className = 'block';\r\n        const block = document.createElement('div');\r\n\r\n        if (levels) {\r\n            className += ' parent';\r\n\r\n            generateElements(block, levels, items);\r\n        } else {\r\n            className += ' leaf';\r\n\r\n            block.innerHTML = '<span class=\"dimen\"></span>';\r\n            block.style.backgroundColor = generateColor();\r\n        }\r\n\r\n        block.className = className;\r\n\r\n        container.appendChild(block);\r\n    }\r\n}\r\n\r\ngenerateElements(document.getElementById('container'), 2);\r\n\r\nconst blocks = document.querySelectorAll('.block');\r\n\r\nfunction populateQueue() {\r\n    index = 0;\r\n    queue = toArray(blocks);\r\n\r\n    updateColorData();\r\n\r\n    requestAnimationFrame(resolveNextItem);\r\n}\r\n\r\nfunction resolveNextItem() {\r\n    const block = queue.shift();\r\n\r\n    if (!block) {\r\n        setTimeout(populateQueue, 2500)\r\n\r\n        return;\r\n    }\r\n\r\n    if (!index || index === 2) {\r\n        block.style.maxWidth = getRandomInt(30, 50) + '%';\r\n\r\n        if (index === 2) {\r\n            block.style.minHeight = getRandomInt(0, 80) + '%';\r\n        }\r\n    }\r\n\r\n    if (~block.className.indexOf('leaf')) {\r\n        block.style.backgroundColor = generateColor();\r\n    }\r\n\r\n    if (++index === 4) {\r\n        index = 0;\r\n    }\r\n\r\n    requestAnimationFrame(resolveNextItem);\r\n}\r\n\r\n\r\nfor (const leaf of toArray(document.querySelectorAll('.leaf'))) {\r\n    observer.observe(leaf);\r\n}\r\n\r\nsetTimeout(populateQueue, 2000);\r\n","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        const hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    const red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    const cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n"],"names":["toFloat","value","parseFloat","getBordersSize","styles","Array","prototype","slice","call","arguments","reduce","size","position","getPaddings","paddings","i","list","length","getSVGContentRect","target","bbox","getBBox","createRectInit","width","height","getHTMLElementContentRect","clientWidth","clientHeight","emptyRect","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","Math","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","document","documentElement","getContentRect","isBrowser","isSVGGraphicsElement","createReadOnlyRect","ref","x","y","Constr","DOMRectReadOnly","Object","rect","create","defineConfigurable","getRandomInt","min","max","floor","random","updateColorData","colorData","hue","hues","generateColor","randomColor","toArray","collection","generateElements","container","levels","items","let","index","className","block","createElement","innerHTML","style","backgroundColor","appendChild","populateQueue","queue","blocks","requestAnimationFrame","resolveNextItem","const","shift","maxWidth","minHeight","indexOf","setTimeout","MapShim","getIndex","arr","key","result","some","entry","Map","anonymous","this","__entries__","prototypeAccessors","get","set","push","delete","entries","splice","has","clear","forEach","callback","ctx","defineProperties","window","requestAnimationFrame$1","Date","now","trailingTimeout","throttle","delay","resolvePending","leadingCall","trailingCall","proxy","timeoutCallback","timeStamp","lastCallTime","transitionKeys","isIE11","navigator","test","userAgent","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","bind","refresh","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","propertyName","getInstance","instance_","props","keys","defineProperty","enumerable","writable","configurable","SVGGraphicsElement","SVGElement","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","TypeError","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","map","WeakMap","ResizeObserver$1","method","apply","ResizeObserver","root","factory","pickHue","options","randomWithin","getHueRange","pickSaturation","luminosity","saturationRange","getSaturationRange","sMin","sMax","pickBrightness","H","S","bMin","getMinimumBrightness","bMax","setFormat","hsv","format","HSVtoHSL","hsl","hslColor","alpha","HSVtoRGB","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","m","colorInput","parseInt","number","colorDictionary","color","hueRange","match","HexToHSB","colorName","range","seed","rnd","componentToHex","c","hex","toString","rgb","defineColor","name","brightnessRange","h","s","v","h_i","f","p","q","t","r","g","b","replace","red","substr","green","blue","cMax","delta","saturation","k","stringToInteger","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","undefined","B","count","totalColors","colors","module","exports","dimensionsStr","toFixed","firstElementChild","textContent","getElementById","querySelectorAll","leaf"],"mappings":"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"}