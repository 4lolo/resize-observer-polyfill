{"version":3,"file":"app.js","sources":["../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/app.js","../node_modules/randomcolor/randomColor.js"],"sourcesContent":["'use strict';\n\n/**\n * Exports global object for the current environment.\n */\nvar global$1 = (function () {\n    if (typeof global != 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self != 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window != 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\n * A collection of shims that provide minimal functionality of the ES6 collections.\n *\n * These implementations are not meant to be used outside of the ResizeObserver\n * modules as they cover only a limited range of use cases.\n */\n/* eslint-disable require-jsdoc */\nvar Map = (function () {\n    if (typeof global$1.Map === 'function') {\n        return global$1.Map;\n    }\n\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: {} };\n\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\n * Detects whether window and document objects are available in current environment.\n */\nvar isBrowser = global$1.window === global$1 && typeof document != 'undefined';\n\n/**\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\n * first one is not supported.\n *\n * @returns {number} Requests' identifier.\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        return requestAnimationFrame;\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\n * Returns time stamp retrieved either from the \"performance.now\" or from\n * the \"Date.now\" method.\n *\n * @returns {DOMHighResTimeStamp|number}\n */\nvar timeStamp = (function () {\n    var host = Date;\n\n    if (typeof performance === 'object' && typeof performance.now === 'function') {\n        host = performance;\n    }\n\n    return function () { return host.now(); };\n})();\n\n/**\n * Creates a wrapper function which ensures that provided callback will be\n * invoked only once during the specified delay period. It also caches the last\n * call and re-invokes it after pending activation is resolved.\n *\n * @param {Function} callback - Function to be invoked after the delay period.\n * @param {number} delay - Delay after which to invoke callback.\n * @param {boolean} [afterRAF = false] - Whether function needs to be invoked as\n *      a requestAnimationFrame callback.\n * @returns {Function}\n */\nvar throttle = function (callback, delay, afterRAF) {\n    if ( afterRAF === void 0 ) afterRAF = false;\n\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\n     * Invokes the original callback function and schedules a new invocation if\n     * the wrapper was called during current request.\n     *\n     * @returns {void}\n     */\n    function invokeCallback() {\n        leadingCall = false;\n\n        // Invoke original function.\n        callback();\n\n        // Schedule new invocation if there has been a call during delay period.\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\n     * Callback that will be invoked after the specified delay period. It will\n     * delegate invocation of the original function to the requestAnimationFrame\n     * if \"afterRAF\" parameter is set to \"true\".\n     *\n     * @returns {void}\n     */\n    function timeoutCallback() {\n        afterRAF ? requestAnimationFrame$1(invokeCallback) : invokeCallback();\n    }\n\n    /**\n     * Schedules invocation of the initial function.\n     *\n     * @returns {void}\n     */\n    function proxy() {\n        var callTime = timeStamp();\n\n        // Postpone activation if there is already a pending call.\n        if (leadingCall) {\n            // Reject immediately following invocations.\n            if (callTime - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            // Schedule new invocation.\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = callTime;\n    }\n\n    return proxy;\n};\n\n// Define whether the MutationObserver is supported.\n// eslint-disable-next-line no-extra-parens\nvar mutationsSupported = typeof MutationObserver === 'function' &&\n// MutationObserver should not be used if running in IE11 as it's\n// implementation is unreliable. Example: https://jsfiddle.net/x2r3jpuz/2/\n// Unfortunately, there is no other way to check this issue but to use\n// userAgent's information.\ntypeof navigator === 'object' && !(navigator.appName === 'Netscape' && navigator.userAgent.match(/Trident\\/.*rv:11/));\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// Delay before iteration of the continuous cycle.\nvar CONTINUOUS_HANDLER_DELAY = 80;\n\n/**\n * Controller class which handles updates of ResizeObserver instances.\n * It decides when and for how long it's necessary to run updates by listening\n * to the windows \"resize\" event along with a tracking of DOM mutations\n * (nodes removal, changes of attributes, etc.).\n *\n * Transitions and animations are handled by running a repeatable update cycle\n * until the dimensions of observed elements are changing.\n *\n * Continuous update cycle will be used automatically in case MutationObserver\n * is not supported.\n */\nvar ResizeObserverController = function () {\n    /**\n     * Continuous updates must be enabled if MutationObserver is not supported.\n     *\n     * @private {boolean}\n     */\n    this.isCycleContinuous_ = !mutationsSupported;\n\n    /**\n     * Indicates whether DOM listeners have been added.\n     *\n     * @private {boolean}\n     */\n    this.listenersEnabled_ = false;\n\n    /**\n     * A list of connected observers.\n     *\n     * @private {Array<ResizeObserverSPI>}\n     */\n    this.observers_ = [];\n\n    // Make sure that the \"refresh\" method is invoked as a RAF callback and\n    // that it happens only once during the provided period.\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY, true);\n\n    // Additionally postpone invocation of the continuous updates.\n    this.continuousUpdateHandler_ = throttle(this.refresh, CONTINUOUS_HANDLER_DELAY);\n};\n\n/**\n * Adds observer to observers list.\n *\n * @param {ResizeObserverSPI} observer - Observer to be added.\n * @returns {void}\n */\nResizeObserverController.prototype.connect = function (observer) {\n    if (!this.isConnected(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.listenersEnabled_) {\n        this.addListeners_();\n    }\n};\n\n/**\n * Removes observer from observers list.\n *\n * @param {ResizeObserverSPI} observer - Observer to be removed.\n * @returns {void}\n */\nResizeObserverController.prototype.disconnect = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.listenersEnabled_) {\n        this.removeListeners_();\n    }\n};\n\n/**\n * Tells whether the provided observer is connected to controller.\n *\n * @param {ResizeObserverSPI} observer - Observer to be checked.\n * @returns {boolean}\n */\nResizeObserverController.prototype.isConnected = function (observer) {\n    return !!~this.observers_.indexOf(observer);\n};\n\n/**\n * Invokes the update of observers. It will continue running updates insofar\n * it detects changes or if continuous updates are enabled.\n *\n * @returns {void}\n */\nResizeObserverController.prototype.refresh = function () {\n    var hasChanges = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (hasChanges) {\n        this.refresh();\n    } else if (this.isCycleContinuous_ && this.listenersEnabled_) {\n        // Automatically repeat cycle if it's necessary.\n        this.continuousUpdateHandler_();\n    }\n};\n\n/**\n * Updates every observer from observers list and notifies them of queued\n * entries.\n *\n * @private\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\n *  dimensions of it's elements.\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    var hasChanges = false;\n\n    for (var i = 0, list = this.observers_; i < list.length; i += 1) {\n        // Collect active observations.\n        var observer = list[i];\n\n        observer.gatherActive();\n\n        // Broadcast active observations and set the flag that changes have\n        // been detected.\n        if (observer.hasActive()) {\n            hasChanges = true;\n\n            observer.broadcastActive();\n        }\n    }\n\n    return hasChanges;\n};\n\n/**\n * Initializes DOM listeners.\n *\n * @private\n * @returns {void}\n */\nResizeObserverController.prototype.addListeners_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.listenersEnabled_) {\n        return;\n    }\n\n    window.addEventListener('resize', this.refresh);\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way we can capture at least the final state\n    // of an element.\n    document.addEventListener('transitionend', this.refresh);\n\n    // Subscribe to DOM mutations if it's possible as they may lead to\n    // changes in the dimensions of elements.\n    if (mutationsSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    }\n\n    this.listenersEnabled_ = true;\n\n    // Don't wait for a possible event that might trigger the update of\n    // observers and manually initiate the update process.\n    if (this.isCycleContinuous_) {\n        this.refresh();\n    }\n};\n\n/**\n * Removes DOM listeners.\n *\n * @private\n * @returns {void}\n */\nResizeObserverController.prototype.removeListeners_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.listenersEnabled_) {\n        return;\n    }\n\n    window.removeEventListener('resize', this.refresh);\n    document.removeEventListener('transitionend', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    this.mutationsObserver_ = null;\n    this.listenersEnabled_ = false;\n};\n\n/**\n * Defines non-writable/enumerable properties of the provided target object.\n *\n * @param {Object} target - Object for which to define properties.\n * @param {Object} props - Properties to be defined.\n * @returns {Object} Target object.\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerbale: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\n * Converts provided string to a number.\n *\n * @param {number|string} value\n * @returns {number}\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\n * Extracts borders size from provided styles.\n *\n * @param {CSSStyleDeclaration} styles\n * @param {...string} positions - Borders positions (top, right, ...)\n * @returns {number}\n */\nfunction getBordersSize(styles) {\n    var positions = Array.prototype.slice.call(arguments, 1);\n\n    return positions.reduce(function (size, pos) {\n        var value = styles['border-' + pos + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\n * Extracts paddings sizes from provided styles.\n *\n * @param {CSSStyleDeclaration} styles\n * @returns {Object} Paddings box.\n */\nfunction getPaddings(styles) {\n    var boxKeys = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = boxKeys; i < list.length; i += 1) {\n        var key = list[i];\n\n        var value = styles['padding-' + key];\n\n        paddings[key] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\n * Calculates content rectangle of provided SVG element.\n *\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\n *      to be calculated.\n * @returns {DOMRectInit}\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\n * Calculates content rectangle of provided HTMLElement.\n *\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\n * @returns {DOMRectInit}\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and bord when 'border-box' box model is\n    // applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't applied to the document's root element as it's\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\n * Checks whether provided element is an instance of the SVGGraphicsElement.\n *\n * @param {Element} target - Element to be checked.\n * @returns {boolean}\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement === 'function') {\n        return function (target) { return target instanceof SVGGraphicsElement; };\n    }\n\n    // If it's so, than check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method in the prototype chain.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\n * Checks whether provided element is a document element (root element of a document, i.e. <html>).\n *\n * @param {Element} target - Element to be checked.\n * @returns {boolean}\n */\nfunction isDocumentElement(target) {\n    return target === document.documentElement;\n}\n\n/**\n * Calculates an appropriate content rectangle for provided html or svg element.\n *\n * @param {Element} target - Element content rectangle of which needs to be calculated.\n * @returns {DOMRectInit}\n */\nfunction getContentRect(target) {\n    // Return empty rectangle if running in a non-browser environment.\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\n * Creates rectangle with an interface of the DOMRectReadOnly.\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\n *\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\n * @returns {DOMRectReadOnly}\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly === 'function' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y,\n        width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\n *\n * @param {number} x - X coordinate.\n * @param {number} y - Y coordinate.\n * @param {number} width - Rectangle's width.\n * @param {number} height - Rectangle's height.\n * @returns {DOMRectInit}\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\n * Class that is responsible for computations of the content rectangle of\n * provided DOM element and for keeping track of it's changes.\n */\nvar ResizeObservation = function(target) {\n    /**\n     * Reference to the observed element.\n     *\n     * @type {Element}\n     */\n    this.target = target;\n\n    /**\n     * Broadcasted width of content rectangle.\n     *\n     * @type {number}\n     */\n    this.broadcastWidth = 0;\n\n    /**\n     * Broadcasted height of content rectangle.\n     *\n     * @type {number}\n     */\n    this.broadcastHeight = 0;\n\n    /**\n     * Reference to the last observed content rectangle.\n     *\n     * @private {DOMRectInit}\n     */\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n};\n\n/**\n * Updates content rectangle and tells whether it's width or height properties\n * have changed since the last broadcast.\n *\n * @returns {boolean}\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\n * from the corresponding properties of the last observed content rectangle.\n *\n * @returns {DOMRectInit} Last observed content rectangle.\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    /**\n     * Collection of resize observations that have detected changes in dimensions\n     * of elements.\n     *\n     * Spec: https://wicg.github.io/ResizeObserver/#dom-resizeobserver-activetargets\n     *\n     * @private {Array<ResizeObservation>}\n     */\n    this.activeTargets_ = [];\n\n    /**\n     * Registry of the ResizeObservation instances.\n     * Spec: https://wicg.github.io/ResizeObserver/#dom-resizeobserver-observationtargets\n     *\n     * @private {Map<Element, ResizeObservation>}\n     */\n    this.observationTargets_ = new Map();\n\n    /**\n     * Reference to the callback function.\n     * Spec: https://wicg.github.io/ResizeObserver/#resize-observer-callback\n     *\n     * @private {ResizeObserverCallback}\n     */\n    this.callback_ = callback;\n\n    /**\n     * Reference to the associated ResizeObserverController.\n     *\n     * @private {ResizeObserverController}\n     */\n    this.controller_ = controller;\n\n    /**\n     * Public ResizeObserver instance which will be passed to the callback\n     * function and used as a value of it's \"this\" binding.\n     *\n     * @private {ResizeObserver}\n     */\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\n * Starts observing provided element.\n * Spec: https://wicg.github.io/ResizeObserver/#dom-resizeobserver-observe\n *\n * @param {Element} target - Element to be observed.\n * @returns {void}\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (!('Element' in global$1) || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var targets = this.observationTargets_;\n\n    // Do nothing if element is already being observed.\n    if (targets.has(target)) {\n        return;\n    }\n\n    // Register new ResizeObservation instance.\n    targets.set(target, new ResizeObservation(target));\n\n    // Add observer to controller if it hasn't been connected yet.\n    if (!this.controller_.isConnected(this)) {\n        this.controller_.connect(this);\n    }\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\n * Stops observing provided element.\n * Spec: https://wicg.github.io/ResizeObserver/#dom-resizeobserver-unobserve\n *\n * @param {Element} target - Element to stop observing.\n * @returns {void}\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (!('Element' in global$1) || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var targets = this.observationTargets_;\n\n    // Do nothing if element is not being observed.\n    if (!targets.has(target)) {\n        return;\n    }\n\n    // Remove element and associated with it ResizeObsrvation instance from\n    // registry.\n    targets.delete(target);\n\n    // Set back the initial state if there is nothing to observe.\n    if (!targets.size) {\n        this.disconnect();\n    }\n};\n\n/**\n * Stops observing all elements and clears the observations list.\n * Spec: https://wicg.github.io/ResizeObserver/#dom-resizeobserver-disconnect\n *\n * @returns {void}\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observationTargets_.clear();\n    this.controller_.disconnect(this);\n};\n\n/**\n * Clears an array of previously collected active observations and collects\n * observation instances which associated element has changed it's content\n * rectangle.\n *\n * @returns {void}\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n    this.clearActive();\n\n    var activeTargets = this.activeTargets_;\n\n    this.observationTargets_.forEach(function (observation) {\n        if (observation.isActive()) {\n            activeTargets.push(observation);\n        }\n    });\n};\n\n/**\n * Invokes initial callback function with a list of ResizeObserverEntry\n * instances collected from active resize observations.\n *\n * @returns {void}\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeTargets_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\n * Clears the collection of pending/active observations.\n *\n * @returns {void}\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeTargets_.splice(0);\n};\n\n/**\n * Tells whether observer has pending observations.\n *\n * @returns {boolean}\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return !!this.activeTargets_.length;\n};\n\n// Controller that will be assigned to all instances of the ResizeObserver.\nvar controller = new ResizeObserverController();\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// of the Map collection as the former one can't be polyfilled anyway.\nvar observers = typeof WeakMap === 'function' ? new WeakMap() : new Map();\n\n/**\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\n * providing only those methods properties that are define in the spec.\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Create a new instance of an internal ResizeObserver.\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    // Register internal observer.\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        var ref;\n\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if it's available.\n    if (typeof global$1.ResizeObserver === 'function') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n","// We need to use a polyfill itself here,\r\n// not its' possible native implementation.\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport randomColor from 'randomcolor';\r\n\r\nconst hues = [\r\n    'red',\r\n    'pink',\r\n    'blue',\r\n    'orange',\r\n    'purple',\r\n    'monochrome'\r\n];\r\n\r\nlet colorData = {\r\n    luminosity: 'light',\r\n    hue: hues[getRandomInt(0, 5)]\r\n};\r\n\r\nconst observer = new ResizeObserver(entries => {\r\n    for (const entry of entries) {\r\n        const rect = entry.contentRect;\r\n        const dimensionsStr = `${rect.width.toFixed(2)} x ${rect.height.toFixed(2)}`;\r\n\r\n        entry.target.firstElementChild.textContent = dimensionsStr;\r\n    }\r\n});\r\n\r\nlet index = 0;\r\nlet queue = [];\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction updateColorData() {\r\n    colorData.hue = hues[getRandomInt(0, 5)];\r\n}\r\n\r\nfunction generateColor() {\r\n    return randomColor(colorData);\r\n}\r\n\r\nfunction toArray(collection) {\r\n    return Array.prototype.slice.call(collection);\r\n}\r\n\r\nfunction generateElements(container, levels, items = 4) {\r\n    let index = items;\r\n\r\n    levels--;\r\n\r\n    while (index--) {\r\n        let className = 'block';\r\n        const block = document.createElement('div');\r\n\r\n        if (levels) {\r\n            className += ' parent';\r\n\r\n            generateElements(block, levels, items);\r\n        } else {\r\n            className += ' leaf';\r\n\r\n            block.innerHTML = '<span class=\"dimen\"></span>';\r\n            block.style.backgroundColor = generateColor();\r\n        }\r\n\r\n        block.className = className;\r\n\r\n        container.appendChild(block);\r\n    }\r\n}\r\n\r\ngenerateElements(document.getElementById('container'), 2);\r\n\r\nconst blocks = document.querySelectorAll('.block');\r\n\r\nfunction populateQueue() {\r\n    index = 0;\r\n    queue = toArray(blocks);\r\n\r\n    updateColorData();\r\n\r\n    requestAnimationFrame(resolveNextItem);\r\n}\r\n\r\nfunction resolveNextItem() {\r\n    const block = queue.shift();\r\n\r\n    if (!block) {\r\n        setTimeout(populateQueue, 2500)\r\n\r\n        return;\r\n    }\r\n\r\n    if (!index || index === 2) {\r\n        block.style.maxWidth = getRandomInt(30, 50) + '%';\r\n\r\n        if (index === 2) {\r\n            block.style.minHeight = getRandomInt(0, 80) + '%';\r\n        }\r\n    }\r\n\r\n    if (~block.className.indexOf('leaf')) {\r\n        block.style.backgroundColor = generateColor();\r\n    }\r\n\r\n    if (++index === 4) {\r\n        index = 0;\r\n    }\r\n\r\n    requestAnimationFrame(resolveNextItem);\r\n}\r\n\r\n\r\nfor (const leaf of toArray(document.querySelectorAll('.leaf'))) {\r\n    observer.observe(leaf);\r\n}\r\n\r\nsetTimeout(populateQueue, 2000);\r\n","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support AMD\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support CommonJS\n  } else if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + Math.random() + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        return 'rgba(' + rgbColor.join(', ') + ', ' + Math.random() + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n"],"names":["toFloat","value","parseFloat","getBordersSize","styles","positions","Array","prototype","slice","call","arguments","reduce","size","pos","getPaddings","boxKeys","paddings","i","list","length","key","getSVGContentRect","target","bbox","getBBox","createRectInit","width","height","getHTMLElementContentRect","clientWidth","clientHeight","emptyRect","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","Math","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","document","documentElement","getContentRect","isBrowser","isSVGGraphicsElement","createReadOnlyRect","ref","x","y","Constr","DOMRectReadOnly","Object","rect","create","defineConfigurable","getRandomInt","min","max","floor","random","updateColorData","colorData","hue","hues","generateColor","randomColor","toArray","collection","generateElements","container","levels","items","let","index","className","block","createElement","innerHTML","style","backgroundColor","appendChild","populateQueue","queue","blocks","requestAnimationFrame","resolveNextItem","const","shift","maxWidth","minHeight","indexOf","setTimeout","global$1","global","self","window","Function","Map","getIndex","arr","result","some","entry","anonymous","this","__entries__","prototypeAccessors","get","set","push","delete","entries","splice","has","clear","forEach","callback","ctx","this$1","defineProperties","requestAnimationFrame$1","Date","now","trailingTimeout","timeStamp","host","performance","throttle","delay","afterRAF","invokeCallback","leadingCall","trailingCall","proxy","timeoutCallback","callTime","lastCallTime","mutationsSupported","MutationObserver","navigator","appName","userAgent","match","REFRESH_DELAY","CONTINUOUS_HANDLER_DELAY","ResizeObserverController","isCycleContinuous_","listenersEnabled_","observers_","refresh","bind","continuousUpdateHandler_","connect","observer","isConnected","addListeners_","disconnect","observers","removeListeners_","hasChanges","updateObservers_","gatherActive","hasActive","broadcastActive","addEventListener","mutationsObserver_","observe","attributes","childList","characterData","subtree","removeEventListener","props","keys","defineProperty","enumerbale","writable","configurable","SVGGraphicsElement","SVGElement","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","TypeError","activeTargets_","observationTargets_","callback_","controller_","callbackCtx_","Element","targets","unobserve","clearActive","activeTargets","observation","map","WeakMap","ResizeObserver","method","apply","root","factory","module","exports","pickHue","options","hueRange","getHueRange","randomWithin","pickSaturation","luminosity","saturationRange","getSaturationRange","sMin","sMax","pickBrightness","H","S","bMin","getMinimumBrightness","bMax","setFormat","hsv","format","HSVtoHSL","hsl","hslColor","HSVtoRGB","rgb","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","m","b","colorInput","parseInt","number","colorDictionary","color","colorName","range","seed","rnd","componentToHex","c","hex","toString","defineColor","name","brightnessRange","loadColorBounds","h","s","v","h_i","f","p","q","t","r","g","k","stringToInteger","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","undefined","B","count","totalColors","colors","dimensionsStr","toFixed","firstElementChild","textContent","getElementById","querySelectorAll","leaf"],"mappings":"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"}