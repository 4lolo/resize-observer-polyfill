{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///app.js","webpack:///webpack/bootstrap 85af05ba5cd80fe3683e","webpack:///./demo/app.js","webpack:///./~/resize-observer-polyfill/src/ResizeObserver.js","webpack:///./~/resize-observer-polyfill/src/shims/es6-collections.js","webpack:///./~/resize-observer-polyfill/src/ResizeObserverController.js","webpack:///./~/resize-observer-polyfill/src/throttle.js","webpack:///./~/resize-observer-polyfill/src/shims/requestAnimationFrame.js","webpack:///./~/resize-observer-polyfill/src/_ResizeObserver.js","webpack:///./~/resize-observer-polyfill/src/ResizeObservation.js","webpack:///./~/resize-observer-polyfill/src/ResizeObserverEntry.js","webpack:///./~/randomcolor/randomColor.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","getRandomInt","min","max","Math","floor","random","updateColorData","colorData","hue","hues","generateColor","_randomcolor2","toArray","collection","Array","prototype","slice","generateElements","container","levels","items","arguments","length","undefined","index","className","block","document","createElement","innerHTML","style","backgroundColor","appendChild","populateQueue","queue","querySelectorAll","requestAnimationFrame","resolveNextItem","shift","maxWidth","minHeight","indexOf","setTimeout","_ResizeObserver","_ResizeObserver2","_randomcolor","luminosity","observer","entries","_iterator","_isArray","isArray","_i","Symbol","iterator","_ref","next","done","value","entry","rect","contentRect","dimensionsStr","width","toFixed","height","target","firstElementChild","textContent","getElementById","_iterator2","_isArray2","_i2","_ref2","leaf","observe","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","_es6Collections","_ResizeObserverController","_ResizeObserverController2","_ResizeObserver3","controller","observers","WeakMap","ResizeObserver","callback","set","get","continuousUpdates","forEach","method","_observers$get","apply","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","hasNativeCollections","window","Map","getIndex","arr","result","some","matches","_class","__entries__","push","delete","splice","has","_WeakMap","_class2","clear","keys","map","values","ctx","_throttle","_throttle2","mutationsSupported","MutationObserver","ResizeObserverController","_isCycleContinuous","_listenersEnabled","_mutationsObserver","_observers","refresh","bind","_continuousUpdateHandler","connect","isConnected","_addListeners","disconnect","_removeListeners","hasChanges","_updateObservers","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","useContinuous","invokeCallback","leadCall","edgeCall","proxy","timeoutCallback","afterRAF","_requestAnimationFrame2","_len","args","_key","callData","delay","_requestAnimationFrame","Date","now","_ResizeObservation","_ResizeObservation2","_ResizeObserverEntry","_ResizeObserverEntry2","publicObserver","_callback","_targets","_activeTargets","_controller","_publicObserver","Element","targets","unobserve","size","clearActive","activeTargets","observation","isActive","broadcastRect","getStyles","getComputedStyle","pixelsToNumber","parseFloat","getBordersSize","styles","positions","reduce","pos","getPaddings","boxKeys","paddings","createContentRect","top","left","right","bottom","getSVGContentRect","bbox","getBBox","getDocElementRect","documentElement","getHTMLElementContentRect","clientWidth","clientHeight","emptyRect","horizPad","vertPad","boxSizing","round","vertScrollbar","horizScrollbar","abs","isSVGElement","SVGElement","isDocumentElement","getContentRect","ResizeObservation","_contentRect","broadcastWidth","broadcastHeight","descr","ResizeObserverEntry","rectData","rectInterface","ClientRect","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","pickHue","options","hueRange","getHueRange","randomWithin","pickSaturation","saturationRange","getSaturationRange","sMin","sMax","pickBrightness","H","S","bMin","getMinimumBrightness","bMax","setFormat","hsv","format","HSVtoHSL","hsl","hslColor","HSVtoRGB","rgb","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","b","colorInput","parseInt","number","colorDictionary","color","colorName","range","seed","rnd","componentToHex","hex","toString","defineColor","name","brightnessRange","loadColorBounds","h","s","v","h_i","f","q","t","r","g","k","stringToInteger","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","randomColor","B","count","totalColors","colors"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ResizeObserver = __webpack_require__(1);\n\t\n\tvar _ResizeObserver2 = _interopRequireDefault(_ResizeObserver);\n\t\n\tvar _randomcolor = __webpack_require__(9);\n\t\n\tvar _randomcolor2 = _interopRequireDefault(_randomcolor);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// We need to use a polyfill itself here,\n\t// not its' possible native implementation.\n\tvar hues = ['red', 'pink', 'blue', 'orange', 'purple', 'monochrome'];\n\t\n\tvar colorData = {\n\t    luminosity: 'light',\n\t    hue: hues[getRandomInt(0, 5)]\n\t};\n\t\n\tvar observer = new _ResizeObserver2.default(function (entries) {\n\t    for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t        var _ref;\n\t\n\t        if (_isArray) {\n\t            if (_i >= _iterator.length) break;\n\t            _ref = _iterator[_i++];\n\t        } else {\n\t            _i = _iterator.next();\n\t            if (_i.done) break;\n\t            _ref = _i.value;\n\t        }\n\t\n\t        var entry = _ref;\n\t\n\t        var rect = entry.contentRect;\n\t        var dimensionsStr = rect.width.toFixed(2) + ' x ' + rect.height.toFixed(2);\n\t\n\t        entry.target.firstElementChild.textContent = dimensionsStr;\n\t    }\n\t});\n\t\n\tvar index = 0;\n\tvar queue = [];\n\t\n\tfunction getRandomInt(min, max) {\n\t    return Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\t\n\tfunction updateColorData() {\n\t    colorData.hue = hues[getRandomInt(0, 5)];\n\t}\n\t\n\tfunction generateColor() {\n\t    return (0, _randomcolor2.default)(colorData);\n\t}\n\t\n\tfunction toArray(collection) {\n\t    return Array.prototype.slice.call(collection);\n\t}\n\t\n\tfunction generateElements(container, levels) {\n\t    var items = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n\t\n\t    var index = items;\n\t\n\t    levels--;\n\t\n\t    while (index--) {\n\t        var className = 'block';\n\t        var block = document.createElement('div');\n\t\n\t        if (levels) {\n\t            className += ' parent';\n\t\n\t            generateElements(block, levels, items);\n\t        } else {\n\t            className += ' leaf';\n\t\n\t            block.innerHTML = '<span class=\"dimen\"></span>';\n\t            block.style.backgroundColor = generateColor();\n\t        }\n\t\n\t        block.className = className;\n\t\n\t        container.appendChild(block);\n\t    }\n\t}\n\t\n\tgenerateElements(document.getElementById('container'), 2);\n\t\n\tfunction populateQueue() {\n\t    index = 0;\n\t    queue = toArray(document.querySelectorAll('.block'));\n\t\n\t    updateColorData();\n\t\n\t    requestAnimationFrame(resolveNextItem);\n\t}\n\t\n\tfunction resolveNextItem() {\n\t    var block = queue.shift();\n\t\n\t    if (!block) {\n\t        setTimeout(populateQueue, 2500);\n\t\n\t        return;\n\t    }\n\t\n\t    if (!index || index === 2) {\n\t        block.style.maxWidth = getRandomInt(30, 50) + '%';\n\t\n\t        if (index === 2) {\n\t            block.style.minHeight = getRandomInt(0, 80) + '%';\n\t        }\n\t    }\n\t\n\t    if (~block.className.indexOf('leaf')) {\n\t        block.style.backgroundColor = generateColor();\n\t    }\n\t\n\t    if (++index === 4) {\n\t        index = 0;\n\t    }\n\t\n\t    requestAnimationFrame(resolveNextItem);\n\t}\n\t\n\tfor (var _iterator2 = toArray(document.querySelectorAll('.leaf')), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n\t    var _ref2;\n\t\n\t    if (_isArray2) {\n\t        if (_i2 >= _iterator2.length) break;\n\t        _ref2 = _iterator2[_i2++];\n\t    } else {\n\t        _i2 = _iterator2.next();\n\t        if (_i2.done) break;\n\t        _ref2 = _i2.value;\n\t    }\n\t\n\t    var leaf = _ref2;\n\t\n\t    observer.observe(leaf);\n\t}\n\t\n\tsetTimeout(populateQueue, 2000);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _es6Collections = __webpack_require__(2);\n\t\n\tvar _ResizeObserverController = __webpack_require__(3);\n\t\n\tvar _ResizeObserverController2 = _interopRequireDefault(_ResizeObserverController);\n\t\n\tvar _ResizeObserver2 = __webpack_require__(6);\n\t\n\tvar _ResizeObserver3 = _interopRequireDefault(_ResizeObserver2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Controller that will be assigned to all instances of ResizeObserver.\n\tvar controller = new _ResizeObserverController2.default();\n\t\n\t// Registry of the internal observers.\n\tvar observers = new _es6Collections.WeakMap();\n\t\n\t/**\r\n\t * ResizeObservers' \"Proxy\" class which is meant to hide private properties and\r\n\t * methods from public instances.\r\n\t *\r\n\t * Additionally implements the \"continuousUpdates\" static property accessor to\r\n\t * give control over the behavior of the ResizeObserverController instance.\r\n\t * Changes made to this property affect all future and existing observers.\r\n\t */\n\t\n\tvar ResizeObserver = function () {\n\t    /**\r\n\t     * Creates a new instance of ResizeObserver.\r\n\t     *\r\n\t     * @param {Function} callback - Callback that is invoked when dimensions of\r\n\t     *      one of the observed elements change.\r\n\t     */\n\t    function ResizeObserver(callback) {\n\t        _classCallCheck(this, ResizeObserver);\n\t\n\t        if (!arguments.length) {\n\t            throw new TypeError('1 argument required, but only 0 present.');\n\t        }\n\t\n\t        // Create a new instance of the internal ResizeObserver.\n\t        var observer = new _ResizeObserver3.default(callback, controller, this);\n\t\n\t        // Register internal observer.\n\t        observers.set(this, observer);\n\t    }\n\t\n\t    /**\r\n\t     * Tells whether continuous updates are enabled.\r\n\t     *\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    _createClass(ResizeObserver, null, [{\n\t        key: 'continuousUpdates',\n\t        get: function get() {\n\t            return controller.continuousUpdates;\n\t        }\n\t\n\t        /**\r\n\t         * Enables or disables continuous updates.\r\n\t         *\r\n\t         * @param {Boolean} value - Whether to enable or disable continuous updates.\r\n\t         */\n\t        ,\n\t        set: function set(value) {\n\t            if (typeof value !== 'boolean') {\n\t                throw new TypeError('type of \"continuousUpdates\" value must be boolean.');\n\t            }\n\t\n\t            controller.continuousUpdates = value;\n\t        }\n\t    }]);\n\t\n\t    return ResizeObserver;\n\t}();\n\t\n\t// Expose public methods of ResizeObserver.\n\t\n\t\n\t['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n\t    ResizeObserver.prototype[method] = function () {\n\t        var _observers$get;\n\t\n\t        return (_observers$get = observers.get(this))[method].apply(_observers$get, arguments);\n\t    };\n\t});\n\t\n\texports.default = ResizeObserver;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * A collection of shims that provides minimal\r\n\t * support of WeakMap and Map classes.\r\n\t *\r\n\t * These implementations are not meant to be used outside of\r\n\t * ResizeObserver modules as they cover only a limited range\r\n\t * of use cases.\r\n\t */\n\t\n\t/* eslint-disable require-jsdoc */\n\tvar hasNativeCollections = typeof window.WeakMap === 'function' && typeof window.Map === 'function';\n\t\n\tvar WeakMap = function () {\n\t    if (hasNativeCollections) {\n\t        return window.WeakMap;\n\t    }\n\t\n\t    function getIndex(arr, key) {\n\t        var result = -1;\n\t\n\t        arr.some(function (entry, index) {\n\t            var matches = entry[0] === key;\n\t\n\t            if (matches) {\n\t                result = index;\n\t            }\n\t\n\t            return matches;\n\t        });\n\t\n\t        return result;\n\t    }\n\t\n\t    return function () {\n\t        function _class() {\n\t            _classCallCheck(this, _class);\n\t\n\t            this.__entries__ = [];\n\t        }\n\t\n\t        _class.prototype.get = function get(key) {\n\t            var index = getIndex(this.__entries__, key);\n\t\n\t            return this.__entries__[index][1];\n\t        };\n\t\n\t        _class.prototype.set = function set(key, value) {\n\t            var index = getIndex(this.__entries__, key);\n\t\n\t            if (~index) {\n\t                this.__entries__[index][1] = value;\n\t            } else {\n\t                this.__entries__.push([key, value]);\n\t            }\n\t        };\n\t\n\t        _class.prototype.delete = function _delete(key) {\n\t            var entries = this.__entries__,\n\t                index = getIndex(entries, key);\n\t\n\t            if (~index) {\n\t                entries.splice(index, 1);\n\t            }\n\t        };\n\t\n\t        _class.prototype.has = function has(key) {\n\t            return !!~getIndex(this.__entries__, key);\n\t        };\n\t\n\t        return _class;\n\t    }();\n\t}();\n\t\n\tvar Map = function () {\n\t    if (hasNativeCollections) {\n\t        return window.Map;\n\t    }\n\t\n\t    return function (_WeakMap) {\n\t        _inherits(_class2, _WeakMap);\n\t\n\t        function _class2() {\n\t            _classCallCheck(this, _class2);\n\t\n\t            return _possibleConstructorReturn(this, _WeakMap.apply(this, arguments));\n\t        }\n\t\n\t        _class2.prototype.clear = function clear() {\n\t            this.__entries__.splice(0, this.__entries__.length);\n\t        };\n\t\n\t        _class2.prototype.entries = function entries() {\n\t            return this.__entries__.slice();\n\t        };\n\t\n\t        _class2.prototype.keys = function keys() {\n\t            return this.__entries__.map(function (entry) {\n\t                return entry[0];\n\t            });\n\t        };\n\t\n\t        _class2.prototype.values = function values() {\n\t            return this.__entries__.map(function (entry) {\n\t                return entry[1];\n\t            });\n\t        };\n\t\n\t        _class2.prototype.forEach = function forEach(callback) {\n\t            var ctx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t            for (var _iterator = this.__entries__, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t                var _ref;\n\t\n\t                if (_isArray) {\n\t                    if (_i >= _iterator.length) break;\n\t                    _ref = _iterator[_i++];\n\t                } else {\n\t                    _i = _iterator.next();\n\t                    if (_i.done) break;\n\t                    _ref = _i.value;\n\t                }\n\t\n\t                var entry = _ref;\n\t\n\t                callback.call(ctx, entry[1], entry[0]);\n\t            }\n\t        };\n\t\n\t        _createClass(_class2, [{\n\t            key: 'size',\n\t            get: function get() {\n\t                return this.__entries__.length;\n\t            }\n\t        }]);\n\t\n\t        return _class2;\n\t    }(WeakMap);\n\t}();\n\t\n\texports.Map = Map;\n\texports.WeakMap = WeakMap;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _throttle = __webpack_require__(4);\n\t\n\tvar _throttle2 = _interopRequireDefault(_throttle);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Define whether the MutationObserver is supported.\n\tvar mutationsSupported = typeof window.MutationObserver === 'function';\n\t\n\t/**\r\n\t * Controller class which handles updates of ResizeObserver instances.\r\n\t * It decides when and for how long it's necessary to run updates by listening\r\n\t * to the windows \"resize\" event along with a tracking of DOM mutations\r\n\t * (nodes removal, changes of attributes, etc.).\r\n\t *\r\n\t * Transitions and animations are handled by running a repeatable update cycle\r\n\t * until the dimensions of observed elements are changing.\r\n\t *\r\n\t * Continuous update cycle will be used automatically in case MutationObserver\r\n\t * is not supported.\r\n\t */\n\t\n\tvar ResizeObserverController = function () {\n\t    /**\r\n\t     * Creates a new instance of ResizeObserverController.\r\n\t     *\r\n\t     * @param {Boolean} [continuousUpdates = false] - Whether to use a continuous\r\n\t     *      update cycle.\r\n\t     */\n\t    function ResizeObserverController() {\n\t        var continuousUpdates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t        _classCallCheck(this, ResizeObserverController);\n\t\n\t        // Continuous updates must be enabled if MutationObserver is not supported.\n\t        this._isCycleContinuous = !mutationsSupported || continuousUpdates;\n\t\n\t        // Indicates whether DOM listeners have been added.\n\t        this._listenersEnabled = false;\n\t\n\t        // Keeps reference to the instance of MutationObserver.\n\t        this._mutationsObserver = null;\n\t\n\t        // A list of connected observers.\n\t        this._observers = [];\n\t\n\t        // Make sure that the \"refresh\" method is invoked as a RAF callback and\n\t        // that it happens only once during the period of 30 milliseconds.\n\t        this.refresh = (0, _throttle2.default)(this.refresh.bind(this), 30, true);\n\t\n\t        // Additionally postpone invocation of the continuous updates.\n\t        this._continuousUpdateHandler = (0, _throttle2.default)(this.refresh, 70);\n\t    }\n\t\n\t    /**\r\n\t     * Tells whether continuous updates are enabled.\r\n\t     *\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    /**\r\n\t     * Adds observer to observers list.\r\n\t     *\r\n\t     * @param {ResizeObserver} observer - Observer to be added.\r\n\t     */\n\t    ResizeObserverController.prototype.connect = function connect(observer) {\n\t        if (!this.isConnected(observer)) {\n\t            this._observers.push(observer);\n\t        }\n\t\n\t        // Add listeners if they haven't been added yet.\n\t        if (!this._listenersEnabled) {\n\t            this._addListeners();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Removes observer from observers list.\r\n\t     *\r\n\t     * @param {ResizeObserver} observer - Observer to be removed.\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype.disconnect = function disconnect(observer) {\n\t        var observers = this._observers;\n\t        var index = observers.indexOf(observer);\n\t\n\t        // Remove observer if it's present in registry.\n\t        if (~index) {\n\t            observers.splice(index, 1);\n\t        }\n\t\n\t        // Remove listeners if controller has no connected observers.\n\t        if (!observers.length && this._listenersEnabled) {\n\t            this._removeListeners();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Tells whether the provided observer is connected to controller.\r\n\t     *\r\n\t     * @param {ResizeObserver} observer - Observer to be checked.\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype.isConnected = function isConnected(observer) {\n\t        return !!~this._observers.indexOf(observer);\n\t    };\n\t\n\t    /**\r\n\t     * Invokes the update of observers. It will continue running updates insofar\r\n\t     * it detects changes or if continuous updates are enabled.\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype.refresh = function refresh() {\n\t        var hasChanges = this._updateObservers();\n\t\n\t        // Continue running updates if changes have been detected as there might\n\t        // be future ones caused by CSS transitions.\n\t        if (hasChanges) {\n\t            this.refresh();\n\t        } else if (this._isCycleContinuous && this._listenersEnabled) {\n\t            // Automatically repeat cycle if it's necessary.\n\t            this._continuousUpdateHandler();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Updates every observer from observers list and notifies them of queued\r\n\t     * entries.\r\n\t     *\r\n\t     * @private\r\n\t     * @returns {Boolean} Returns \"true\" if any observer has detected changes in\r\n\t     *      dimensions of its' elements.\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._updateObservers = function _updateObservers() {\n\t        var hasChanges = false;\n\t\n\t        for (var _iterator = this._observers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t            var _ref;\n\t\n\t            if (_isArray) {\n\t                if (_i >= _iterator.length) break;\n\t                _ref = _iterator[_i++];\n\t            } else {\n\t                _i = _iterator.next();\n\t                if (_i.done) break;\n\t                _ref = _i.value;\n\t            }\n\t\n\t            var observer = _ref;\n\t\n\t            // Collect active observations.\n\t            observer.gatherActive();\n\t\n\t            // Broadcast active observations and set the flag that changes have\n\t            // been detected.\n\t            if (observer.hasActive()) {\n\t                hasChanges = true;\n\t\n\t                observer.broadcastActive();\n\t            }\n\t        }\n\t\n\t        return hasChanges;\n\t    };\n\t\n\t    /**\r\n\t     * Initializes DOM listeners.\r\n\t     *\r\n\t     * @private\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._addListeners = function _addListeners() {\n\t        // Do nothing if listeners have been already added.\n\t        if (this._listenersEnabled) {\n\t            return;\n\t        }\n\t\n\t        window.addEventListener('resize', this.refresh);\n\t\n\t        // Subscribe to DOM mutations if it's possible as they may lead to\n\t        // changes in the dimensions of elements.\n\t        if (mutationsSupported) {\n\t            this._mutationsObserver = new MutationObserver(this.refresh);\n\t\n\t            this._mutationsObserver.observe(document, {\n\t                attributes: true,\n\t                childList: true,\n\t                characterData: true,\n\t                subtree: true\n\t            });\n\t        }\n\t\n\t        this._listenersEnabled = true;\n\t\n\t        // Don't wait for a possible event that might trigger the update of\n\t        // observers and manually initiate the update process.\n\t        if (this._isCycleContinuous) {\n\t            this.refresh();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Removes DOM listeners.\r\n\t     *\r\n\t     * @private\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._removeListeners = function _removeListeners() {\n\t        // Do nothing if listeners have been already removed.\n\t        if (!this._listenersEnabled) {\n\t            return;\n\t        }\n\t\n\t        window.removeEventListener('resize', this.refresh);\n\t\n\t        if (this._mutationsObserver) {\n\t            this._mutationsObserver.disconnect();\n\t        }\n\t\n\t        this._mutationsObserver = null;\n\t        this._listenersEnabled = false;\n\t    };\n\t\n\t    _createClass(ResizeObserverController, [{\n\t        key: 'continuousUpdates',\n\t        get: function get() {\n\t            return this._isCycleContinuous;\n\t        }\n\t\n\t        /**\r\n\t         * Enables or disables continuous updates.\r\n\t         *\r\n\t         * @param {Boolean} useContinuous - Whether to enable or disable continuous\r\n\t         *      updates. Note that the value won't be applied if MutationObserver is\r\n\t         *      not supported.\r\n\t         */\n\t        ,\n\t        set: function set(useContinuous) {\n\t            // The state of continuous updates should not be modified if\n\t            // MutationObserver is not supported.\n\t            if (!mutationsSupported) {\n\t                return;\n\t            }\n\t\n\t            this._isCycleContinuous = useContinuous;\n\t\n\t            // Immediately start the update cycle in order not to wait for a possible\n\t            // event that might initiate it.\n\t            if (this._listenersEnabled && useContinuous) {\n\t                this.refresh();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return ResizeObserverController;\n\t}();\n\t\n\texports.default = ResizeObserverController;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\texports.default = function (callback) {\n\t    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t    var afterRAF = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t    var leadCall = null,\n\t        edgeCall = null;\n\t\n\t    /**\r\n\t     * Invokes the original callback function and schedules a new invocation if\r\n\t     * the wrapper was called during current request.\r\n\t     */\n\t    function invokeCallback() {\n\t        // Invoke original function.\n\t        callback.apply.apply(callback, leadCall);\n\t\n\t        leadCall = null;\n\t\n\t        // Schedule new invocation if there was a call during delay period.\n\t        if (edgeCall) {\n\t            proxy.apply.apply(proxy, edgeCall);\n\t\n\t            edgeCall = null;\n\t        }\n\t    }\n\t\n\t    /**\r\n\t     * Callback that will be invoked after the specified delay period. It will\r\n\t     * delegate invocation of the original function to the requestAnimationFrame\r\n\t     * if \"afterRAF\" parameter is set to \"true\".\r\n\t     */\n\t    function timeoutCallback() {\n\t        afterRAF ? (0, _requestAnimationFrame2.default)(invokeCallback) : invokeCallback();\n\t    }\n\t\n\t    /**\r\n\t     * Schedules invocation of the initial function.\r\n\t     */\n\t    function proxy() {\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        // eslint-disable-next-line no-invalid-this\n\t        var callData = [this, args];\n\t\n\t        // Cache current call to be re-invoked later if there is already a\n\t        // pending call.\n\t        if (leadCall) {\n\t            edgeCall = callData;\n\t        } else {\n\t            leadCall = callData;\n\t\n\t            // Schedule new invocation.\n\t            setTimeout(timeoutCallback, delay);\n\t        }\n\t    }\n\t\n\t    return proxy;\n\t};\n\t\n\tvar _requestAnimationFrame = __webpack_require__(5);\n\t\n\tvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tmodule.exports = exports['default'];\n\t\n\t/**\r\n\t * Creates a wrapper function that ensures that provided callback will\r\n\t * be invoked only once during the specified delay period. It caches the last\r\n\t * call and re-invokes it after pending activation is resolved.\r\n\t *\r\n\t * @param {Function} callback - Function to be invoked after the delay period.\r\n\t * @param {Number} [delay = 0] - Delay after which to invoke callback.\r\n\t * @param {Boolean} [afterRAF = false] - Whether function needs to be invoked as\r\n\t *      a requestAnimationFrame callback.\r\n\t * @returns {Function}\r\n\t */\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\t/**\r\n\t * A shim for requestAnimationFrame which falls back\r\n\t * to setTimeout if the first one is not supported.\r\n\t *\r\n\t * @returns {Number} Requests' identifier.\r\n\t */\n\texports.default = function () {\n\t    if (typeof window.requestAnimationFrame === 'function') {\n\t        return window.requestAnimationFrame;\n\t    }\n\t\n\t    return function (callback) {\n\t        return setTimeout(function () {\n\t            return callback(Date.now());\n\t        }, 1000 / 60);\n\t    };\n\t}();\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _es6Collections = __webpack_require__(2);\n\t\n\tvar _ResizeObservation = __webpack_require__(7);\n\t\n\tvar _ResizeObservation2 = _interopRequireDefault(_ResizeObservation);\n\t\n\tvar _ResizeObserverEntry = __webpack_require__(8);\n\t\n\tvar _ResizeObserverEntry2 = _interopRequireDefault(_ResizeObserverEntry);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ResizeObserver = function () {\n\t    /**\r\n\t     * Creates a new instance of ResizeObserver.\r\n\t     *\r\n\t     * @param {Function} callback - Callback function that is invoked when one\r\n\t     *      of the observed elements changes it's content rectangle.\r\n\t     * @param {ResizeObsreverController} controller - Controller instance which\r\n\t     *      is responsible for the updates of observer.\r\n\t     * @param {ResizeObserver} publicObserver - Reference to the public\r\n\t     *      ResizeObserver instance which will be passed to callback function.\r\n\t     */\n\t    function ResizeObserver(callback, controller, publicObserver) {\n\t        _classCallCheck(this, ResizeObserver);\n\t\n\t        if (typeof callback !== 'function') {\n\t            throw new TypeError('The callback provided as parameter 1 is not a function.');\n\t        }\n\t\n\t        // Reference to the callback function.\n\t        this._callback = callback;\n\t\n\t        // Registry of ResizeObservation instances.\n\t        this._targets = new _es6Collections.Map();\n\t\n\t        // Collection of resize observations that have detected changes in\n\t        // dimensions of elements.\n\t        this._activeTargets = [];\n\t\n\t        // Reference to the associated ResizeObserverController.\n\t        this._controller = controller;\n\t\n\t        // Public ResizeObserver instance which will be passed to callback function.\n\t        this._publicObserver = publicObserver;\n\t    }\n\t\n\t    /**\r\n\t     * Starts observing provided element.\r\n\t     *\r\n\t     * @param {Element} target - Element to be observed.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.observe = function observe(target) {\n\t        //  Throw the same errors as in a native implementation.\n\t        if (!arguments.length) {\n\t            throw new TypeError('1 argument required, but only 0 present.');\n\t        }\n\t\n\t        if (!(target instanceof Element)) {\n\t            throw new TypeError('parameter 1 is not of type \"Element\".');\n\t        }\n\t\n\t        var targets = this._targets;\n\t\n\t        // Do nothing if element is already being observed.\n\t        if (targets.has(target)) {\n\t            return;\n\t        }\n\t\n\t        // Register new ResizeObservation instance.\n\t        targets.set(target, new _ResizeObservation2.default(target));\n\t\n\t        // Add observer to controller if it hasn't been connected yet.\n\t        if (!this._controller.isConnected(this)) {\n\t            this._controller.connect(this);\n\t        }\n\t\n\t        // Update observations.\n\t        this._controller.refresh();\n\t    };\n\t\n\t    /**\r\n\t     * Stops observing provided element.\r\n\t     *\r\n\t     * @param {Element} target - Element to stop observing.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.unobserve = function unobserve(target) {\n\t        //  Throw the same errors as in a native implementation.\n\t        if (!arguments.length) {\n\t            throw new TypeError('1 argument required, but only 0 present.');\n\t        }\n\t\n\t        if (!(target instanceof Element)) {\n\t            throw new TypeError('parameter 1 is not of type \"Element\".');\n\t        }\n\t\n\t        var targets = this._targets;\n\t\n\t        // Do nothing if element is not being observed.\n\t        if (!targets.has(target)) {\n\t            return;\n\t        }\n\t\n\t        // Remove element and associated with it ResizeObsrvation instance from\n\t        // registry.\n\t        targets.delete(target);\n\t\n\t        // Set back the initial state if there is nothing to observe.\n\t        if (!targets.size) {\n\t            this.disconnect();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Stops observing all elements and clears the observations list.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.disconnect = function disconnect() {\n\t        this.clearActive();\n\t        this._targets.clear();\n\t        this._controller.disconnect(this);\n\t    };\n\t\n\t    /**\r\n\t     * Clears an array of previously collected active observations and collects\r\n\t     * observation instances which associated element has changed its' content\r\n\t     * rectangle.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.gatherActive = function gatherActive() {\n\t        this.clearActive();\n\t\n\t        var activeTargets = this._activeTargets;\n\t\n\t        this._targets.forEach(function (observation) {\n\t            if (observation.isActive()) {\n\t                activeTargets.push(observation);\n\t            }\n\t        });\n\t    };\n\t\n\t    /**\r\n\t     * Invokes initial callback function with a list of ResizeObserverEntry\r\n\t     * instances collected from active resize observations.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.broadcastActive = function broadcastActive() {\n\t        // Do nothing if observer doesn't have active observations.\n\t        if (!this.hasActive()) {\n\t            return;\n\t        }\n\t\n\t        var observer = this._publicObserver;\n\t\n\t        // Create ResizeObserverEntry instance for every active observation.\n\t        var entries = this._activeTargets.map(function (observation) {\n\t            return new _ResizeObserverEntry2.default(observation.target, observation.broadcastRect());\n\t        });\n\t\n\t        this.clearActive();\n\t        this._callback.call(observer, entries, observer);\n\t    };\n\t\n\t    /**\r\n\t     * Clears the collection of pending/active observations.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.clearActive = function clearActive() {\n\t        this._activeTargets.splice(0);\n\t    };\n\t\n\t    /**\r\n\t     * Tells whether observer has pending observations.\r\n\t     *\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.hasActive = function hasActive() {\n\t        return !!this._activeTargets.length;\n\t    };\n\t\n\t    return ResizeObserver;\n\t}();\n\t\n\texports.default = ResizeObserver;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Placeholder of an empty content rectangle.\n\tvar emptyRect = createContentRect(0, 0, 0, 0);\n\t\n\t/**\r\n\t * Extracts computed styles of provided element.\r\n\t *\r\n\t * @param {Element} target\r\n\t * @returns {CSSStyleDeclaration}\r\n\t */\n\tfunction getStyles(target) {\n\t    return window.getComputedStyle(target);\n\t}\n\t\n\t/**\r\n\t * Converts provided string defined in q form of '{{value}}px' to number.\r\n\t *\r\n\t * @param {String} value\r\n\t * @returns {Number}\r\n\t */\n\tfunction pixelsToNumber(value) {\n\t    return parseFloat(value) || 0;\n\t}\n\t\n\t/**\r\n\t * Extracts borders size from provided styles.\r\n\t *\r\n\t * @param {CSSStyleDeclaration} styles\r\n\t * @param {...String} positions - Borders positions (top, right, ...)\r\n\t * @returns {Number}\r\n\t */\n\tfunction getBordersSize(styles) {\n\t    for (var _len = arguments.length, positions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        positions[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    return positions.reduce(function (size, pos) {\n\t        var value = styles['border-' + pos + '-width'];\n\t\n\t        return size + pixelsToNumber(value);\n\t    }, 0);\n\t}\n\t\n\t/**\r\n\t * Extracts paddings sizes from provided styles.\r\n\t *\r\n\t * @param {CSSStyleDeclaration} styles\r\n\t * @returns {Object} Paddings box.\r\n\t */\n\tfunction getPaddings(styles) {\n\t    var boxKeys = ['top', 'right', 'bottom', 'left'];\n\t    var paddings = {};\n\t\n\t    for (var _iterator = boxKeys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t        var _ref;\n\t\n\t        if (_isArray) {\n\t            if (_i >= _iterator.length) break;\n\t            _ref = _iterator[_i++];\n\t        } else {\n\t            _i = _iterator.next();\n\t            if (_i.done) break;\n\t            _ref = _i.value;\n\t        }\n\t\n\t        var key = _ref;\n\t\n\t        var value = styles['padding-' + key];\n\t\n\t        paddings[key] = pixelsToNumber(value);\n\t    }\n\t\n\t    return paddings;\n\t}\n\t\n\t/**\r\n\t * Creates content rectangle based on the provided dimensions\r\n\t * and the top/left positions.\r\n\t *\r\n\t * @param {Number} width - Width of rectangle.\r\n\t * @param {Number} height - Height of rectangle.\r\n\t * @param {Number} top - Top position.\r\n\t * @param {Number} left - Left position.\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction createContentRect(width, height, top, left) {\n\t    return {\n\t        width: width, height: height, top: top,\n\t        right: width + left,\n\t        bottom: height + top,\n\t        left: left\n\t    };\n\t}\n\t\n\t/**\r\n\t * Calculates content rectangle of provided SVG element.\r\n\t *\r\n\t * @param {SVGElement} target - Element whose content\r\n\t *      rectangle needs to be calculated.\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction getSVGContentRect(target) {\n\t    var bbox = target.getBBox();\n\t\n\t    return createContentRect(bbox.width, bbox.height, 0, 0);\n\t}\n\t\n\t/**\r\n\t * Calculates content rectangle of a root element.\r\n\t *\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction getDocElementRect() {\n\t    // Neither scroll[Width/Height] nor offset[Width/Height] can be used to\n\t    // define content dimensions as they give inconsistent results across\n\t    // different browsers. E.g. in the Internet Explorer 10 and lower value of\n\t    // these properties can't be less than the client dimensions (same thing\n\t    // with the \"getBoundingClientRect\" method). And Firefox has the same\n\t    // behavior with its \"scroll\" properties.\n\t    var styles = getStyles(document.documentElement);\n\t\n\t    var width = pixelsToNumber(styles.width);\n\t    var height = pixelsToNumber(styles.height);\n\t\n\t    return createContentRect(width, height, 0, 0);\n\t}\n\t\n\t/**\r\n\t * Calculates content rectangle of provided HTMLElement.\r\n\t *\r\n\t * @param {HTMLElement} target - Element whose content\r\n\t *      rectangle needs to be calculated.\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction getHTMLElementContentRect(target) {\n\t    // Client width & height properties can't be\n\t    // used exclusively as they provide rounded values.\n\t    var clientWidth = target.clientWidth;\n\t    var clientHeight = target.clientHeight;\n\t\n\t    // By this condition we can catch all non-replaced inline, hidden and detached\n\t    // elements. Though elements with width & height properties less than 0.5 will\n\t    // be discarded as well.\n\t    //\n\t    // Without it we would need to implement separate methods for each of\n\t    // those cases and it's not possible to perform a precise and performance\n\t    // effective test for hidden elements. E.g. even jQuerys' ':visible' filter\n\t    // gives wrong results for elements with width & height less than 0.5.\n\t    if (!clientWidth && !clientHeight) {\n\t        return emptyRect;\n\t    }\n\t\n\t    var styles = getStyles(target);\n\t    var paddings = getPaddings(styles);\n\t    var horizPad = paddings.left + paddings.right;\n\t    var vertPad = paddings.top + paddings.bottom;\n\t\n\t    // Computed styles of width & height are being used because they are the\n\t    // only dimensions available to JS that contain non-rounded values. It could\n\t    // be possible to utilize getBoundingClientRect if only its' data wasn't\n\t    // affected by CSS transformations let alone paddings, borders and scroll bars.\n\t    var width = pixelsToNumber(styles.width),\n\t        height = pixelsToNumber(styles.height);\n\t\n\t    // Width & height include paddings and borders\n\t    // when 'border-box' box model is applied (except for IE).\n\t    if (styles.boxSizing === 'border-box') {\n\t        // Following conditions are required to handle Internet Explorer which\n\t        // doesn't include paddings and borders to computed CSS dimensions.\n\t        //\n\t        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n\t        // properties then it's either IE, and thus we don't need to subtract\n\t        // anything, or an element merely doesn't have paddings/borders styles.\n\t        if (Math.round(width + horizPad) !== clientWidth) {\n\t            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n\t        }\n\t\n\t        if (Math.round(height + vertPad) !== clientHeight) {\n\t            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n\t        }\n\t    }\n\t\n\t    // In some browsers (only in Firefox, actually) CSS width & height\n\t    // include scroll bars size which can be removed at this step as scroll bars\n\t    // are the only difference between rounded dimensions + paddings and \"client\"\n\t    // properties, though that is not always true in Chrome.\n\t    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n\t    var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\t\n\t    // Chrome has a rather weird rounding of \"client\" properties.\n\t    // E.g. for an element with content width of 314.2px it sometimes gives the\n\t    // client width of 315px and for the width of 314.7px it may give 314px.\n\t    // And it doesn't happen all the time. Such difference needs to be ignored.\n\t    if (Math.abs(vertScrollbar) !== 1) {\n\t        width -= vertScrollbar;\n\t    }\n\t\n\t    if (Math.abs(horizScrollbar) !== 1) {\n\t        height -= horizScrollbar;\n\t    }\n\t\n\t    return createContentRect(width, height, paddings.top, paddings.left);\n\t}\n\t\n\t/**\r\n\t * Checks whether provided element is an instance of SVGElement.\r\n\t *\r\n\t * @param {Element} target - Element to be checked.\r\n\t * @returns {Boolean}\r\n\t */\n\tfunction isSVGElement(target) {\n\t    return target instanceof window.SVGElement;\n\t}\n\t\n\t/**\r\n\t * Checks whether provided element is a document element (root element of a document).\r\n\t *\r\n\t * @param {Element} target - Element to be checked.\r\n\t * @returns {Boolean}\r\n\t */\n\tfunction isDocumentElement(target) {\n\t    return target === document.documentElement;\n\t}\n\t\n\t/**\r\n\t * Calculates an appropriate content rectangle for provided html or svg element.\r\n\t *\r\n\t * @param {Element} target - Element whose content rectangle\r\n\t *      needs to be calculated.\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction getContentRect(target) {\n\t    if (isSVGElement(target)) {\n\t        return getSVGContentRect(target);\n\t    }\n\t\n\t    if (isDocumentElement(target)) {\n\t        return getDocElementRect();\n\t    }\n\t\n\t    return getHTMLElementContentRect(target);\n\t}\n\t\n\t/**\r\n\t * Class that is responsible for computations of the content rectangle of\r\n\t * provided DOM element and for keeping track of its' changes.\r\n\t */\n\t\n\tvar ResizeObservation = function () {\n\t    /**\r\n\t     * Creates an instance of ResizeObservation.\r\n\t     *\r\n\t     * @param {Element} target - Element to be observed.\r\n\t     */\n\t    function ResizeObservation(target) {\n\t        _classCallCheck(this, ResizeObservation);\n\t\n\t        this.target = target;\n\t\n\t        // Keeps reference to the last observed content rectangle.\n\t        this._contentRect = emptyRect;\n\t\n\t        // Broadcasted width of content rectangle.\n\t        this.broadcastWidth = 0;\n\t\n\t        // Broadcasted height of content rectangle.\n\t        this.broadcastHeight = 0;\n\t    }\n\t\n\t    /**\r\n\t     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n\t     * from the corresponding properties of the last observed content rectangle.\r\n\t     *\r\n\t     * @returns {ClientRect} Last observed content rectangle.\r\n\t     */\n\t\n\t\n\t    ResizeObservation.prototype.broadcastRect = function broadcastRect() {\n\t        var rect = this._contentRect;\n\t\n\t        this.broadcastWidth = rect.width;\n\t        this.broadcastHeight = rect.height;\n\t\n\t        return rect;\n\t    };\n\t\n\t    /**\r\n\t     * Updates content rectangle and tells whether its' width or height properties\r\n\t     * have changed since the last broadcast.\r\n\t     *\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    ResizeObservation.prototype.isActive = function isActive() {\n\t        var rect = getContentRect(this.target);\n\t\n\t        this._contentRect = rect;\n\t\n\t        return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n\t    };\n\t\n\t    return ResizeObservation;\n\t}();\n\t\n\texports.default = ResizeObservation;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * Defines properties of the provided target object.\r\n\t *\r\n\t * @param {Object} target - Object for which to define properties.\r\n\t * @param {Object} props - Properties to be defined.\r\n\t * @param {Object} [descr = {}] - Properties descriptor.\r\n\t * @returns {Object} Target object.\r\n\t */\n\tfunction defineProperties(target, props) {\n\t    var descr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t    var descriptor = {\n\t        configurable: descr.configurable || false,\n\t        writable: descr.writable || false,\n\t        enumerable: descr.enumerable || false\n\t    };\n\t\n\t    for (var _iterator = Object.keys(props), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t        var _ref;\n\t\n\t        if (_isArray) {\n\t            if (_i >= _iterator.length) break;\n\t            _ref = _iterator[_i++];\n\t        } else {\n\t            _i = _iterator.next();\n\t            if (_i.done) break;\n\t            _ref = _i.value;\n\t        }\n\t\n\t        var key = _ref;\n\t\n\t        descriptor.value = props[key];\n\t\n\t        Object.defineProperty(target, key, descriptor);\n\t    }\n\t\n\t    return target;\n\t}\n\t\n\tvar ResizeObserverEntry =\n\t/**\r\n\t * Creates an instance of ResizeObserverEntry.\r\n\t *\r\n\t * @param {Element} target - Element that is being observed.\r\n\t * @param {ClientRect} rectData - Data of the elements' content rectangle.\r\n\t */\n\tfunction ResizeObserverEntry(target, rectData) {\n\t    _classCallCheck(this, ResizeObserverEntry);\n\t\n\t    // Content rectangle needs to be an instance of ClientRect if it's\n\t    // available.\n\t    var rectInterface = window.ClientRect || Object;\n\t    var contentRect = Object.create(rectInterface.prototype);\n\t\n\t    // According to the specification following properties are not writable\n\t    // and are also not enumerable in the native implementation.\n\t    //\n\t    // Property accessors are not being used as they'd require to define a\n\t    // private WeakMap storage which may cause memory leaks in browsers that\n\t    // don't support this type of collections.\n\t    defineProperties(contentRect, rectData, { configurable: true });\n\t\n\t    defineProperties(this, {\n\t        target: target, contentRect: contentRect\n\t    }, { configurable: true });\n\t};\n\t\n\texports.default = ResizeObserverEntry;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t// randomColor by David Merfield under the CC0 license\n\t// https://github.com/davidmerfield/randomColor/\n\t\n\t;(function (root, factory) {\n\t\n\t  // Support AMD\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t    // Support CommonJS\n\t  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n\t    var randomColor = factory();\n\t\n\t    // Support NodeJS & Component, which allow module.exports to be a function\n\t    if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module && module.exports) {\n\t      exports = module.exports = randomColor;\n\t    }\n\t\n\t    // Support CommonJS 1.1.1 spec\n\t    exports.randomColor = randomColor;\n\t\n\t    // Support vanilla script loading\n\t  } else {\n\t    root.randomColor = factory();\n\t  }\n\t})(undefined, function () {\n\t\n\t  // Seed to get repeatable colors\n\t  var seed = null;\n\t\n\t  // Shared color dictionary\n\t  var colorDictionary = {};\n\t\n\t  // Populate the color dictionary\n\t  loadColorBounds();\n\t\n\t  var randomColor = function randomColor(options) {\n\t\n\t    options = options || {};\n\t\n\t    // Check if there is a seed and ensure it's an\n\t    // integer. Otherwise, reset the seed value.\n\t    if (options.seed && options.seed === parseInt(options.seed, 10)) {\n\t      seed = options.seed;\n\t\n\t      // A string was passed as a seed\n\t    } else if (typeof options.seed === 'string') {\n\t      seed = stringToInteger(options.seed);\n\t\n\t      // Something was passed as a seed but it wasn't an integer or string\n\t    } else if (options.seed !== undefined && options.seed !== null) {\n\t      throw new TypeError('The seed value must be an integer or string');\n\t\n\t      // No seed, reset the value outside.\n\t    } else {\n\t      seed = null;\n\t    }\n\t\n\t    var H, S, B;\n\t\n\t    // Check if we need to generate multiple colors\n\t    if (options.count !== null && options.count !== undefined) {\n\t\n\t      var totalColors = options.count,\n\t          colors = [];\n\t\n\t      options.count = null;\n\t\n\t      while (totalColors > colors.length) {\n\t\n\t        // Since we're generating multiple colors,\n\t        // incremement the seed. Otherwise we'd just\n\t        // generate the same color each time...\n\t        if (seed && options.seed) options.seed += 1;\n\t\n\t        colors.push(randomColor(options));\n\t      }\n\t\n\t      options.count = totalColors;\n\t\n\t      return colors;\n\t    }\n\t\n\t    // First we pick a hue (H)\n\t    H = pickHue(options);\n\t\n\t    // Then use H to determine saturation (S)\n\t    S = pickSaturation(H, options);\n\t\n\t    // Then use S and H to determine brightness (B).\n\t    B = pickBrightness(H, S, options);\n\t\n\t    // Then we return the HSB color in the desired format\n\t    return setFormat([H, S, B], options);\n\t  };\n\t\n\t  function pickHue(options) {\n\t\n\t    var hueRange = getHueRange(options.hue),\n\t        hue = randomWithin(hueRange);\n\t\n\t    // Instead of storing red as two seperate ranges,\n\t    // we group them, using negative numbers\n\t    if (hue < 0) {\n\t      hue = 360 + hue;\n\t    }\n\t\n\t    return hue;\n\t  }\n\t\n\t  function pickSaturation(hue, options) {\n\t\n\t    if (options.luminosity === 'random') {\n\t      return randomWithin([0, 100]);\n\t    }\n\t\n\t    if (options.hue === 'monochrome') {\n\t      return 0;\n\t    }\n\t\n\t    var saturationRange = getSaturationRange(hue);\n\t\n\t    var sMin = saturationRange[0],\n\t        sMax = saturationRange[1];\n\t\n\t    switch (options.luminosity) {\n\t\n\t      case 'bright':\n\t        sMin = 55;\n\t        break;\n\t\n\t      case 'dark':\n\t        sMin = sMax - 10;\n\t        break;\n\t\n\t      case 'light':\n\t        sMax = 55;\n\t        break;\n\t    }\n\t\n\t    return randomWithin([sMin, sMax]);\n\t  }\n\t\n\t  function pickBrightness(H, S, options) {\n\t\n\t    var bMin = getMinimumBrightness(H, S),\n\t        bMax = 100;\n\t\n\t    switch (options.luminosity) {\n\t\n\t      case 'dark':\n\t        bMax = bMin + 20;\n\t        break;\n\t\n\t      case 'light':\n\t        bMin = (bMax + bMin) / 2;\n\t        break;\n\t\n\t      case 'random':\n\t        bMin = 0;\n\t        bMax = 100;\n\t        break;\n\t    }\n\t\n\t    return randomWithin([bMin, bMax]);\n\t  }\n\t\n\t  function setFormat(hsv, options) {\n\t\n\t    switch (options.format) {\n\t\n\t      case 'hsvArray':\n\t        return hsv;\n\t\n\t      case 'hslArray':\n\t        return HSVtoHSL(hsv);\n\t\n\t      case 'hsl':\n\t        var hsl = HSVtoHSL(hsv);\n\t        return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\n\t\n\t      case 'hsla':\n\t        var hslColor = HSVtoHSL(hsv);\n\t        return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + Math.random() + ')';\n\t\n\t      case 'rgbArray':\n\t        return HSVtoRGB(hsv);\n\t\n\t      case 'rgb':\n\t        var rgb = HSVtoRGB(hsv);\n\t        return 'rgb(' + rgb.join(', ') + ')';\n\t\n\t      case 'rgba':\n\t        var rgbColor = HSVtoRGB(hsv);\n\t        return 'rgba(' + rgbColor.join(', ') + ', ' + Math.random() + ')';\n\t\n\t      default:\n\t        return HSVtoHex(hsv);\n\t    }\n\t  }\n\t\n\t  function getMinimumBrightness(H, S) {\n\t\n\t    var lowerBounds = getColorInfo(H).lowerBounds;\n\t\n\t    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\t\n\t      var s1 = lowerBounds[i][0],\n\t          v1 = lowerBounds[i][1];\n\t\n\t      var s2 = lowerBounds[i + 1][0],\n\t          v2 = lowerBounds[i + 1][1];\n\t\n\t      if (S >= s1 && S <= s2) {\n\t\n\t        var m = (v2 - v1) / (s2 - s1),\n\t            b = v1 - m * s1;\n\t\n\t        return m * S + b;\n\t      }\n\t    }\n\t\n\t    return 0;\n\t  }\n\t\n\t  function getHueRange(colorInput) {\n\t\n\t    if (typeof parseInt(colorInput) === 'number') {\n\t\n\t      var number = parseInt(colorInput);\n\t\n\t      if (number < 360 && number > 0) {\n\t        return [number, number];\n\t      }\n\t    }\n\t\n\t    if (typeof colorInput === 'string') {\n\t\n\t      if (colorDictionary[colorInput]) {\n\t        var color = colorDictionary[colorInput];\n\t        if (color.hueRange) {\n\t          return color.hueRange;\n\t        }\n\t      }\n\t    }\n\t\n\t    return [0, 360];\n\t  }\n\t\n\t  function getSaturationRange(hue) {\n\t    return getColorInfo(hue).saturationRange;\n\t  }\n\t\n\t  function getColorInfo(hue) {\n\t\n\t    // Maps red colors to make picking hue easier\n\t    if (hue >= 334 && hue <= 360) {\n\t      hue -= 360;\n\t    }\n\t\n\t    for (var colorName in colorDictionary) {\n\t      var color = colorDictionary[colorName];\n\t      if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n\t        return colorDictionary[colorName];\n\t      }\n\t    }return 'Color not found';\n\t  }\n\t\n\t  function randomWithin(range) {\n\t    if (seed === null) {\n\t      return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\n\t    } else {\n\t      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n\t      var max = range[1] || 1;\n\t      var min = range[0] || 0;\n\t      seed = (seed * 9301 + 49297) % 233280;\n\t      var rnd = seed / 233280.0;\n\t      return Math.floor(min + rnd * (max - min));\n\t    }\n\t  }\n\t\n\t  function HSVtoHex(hsv) {\n\t\n\t    var rgb = HSVtoRGB(hsv);\n\t\n\t    function componentToHex(c) {\n\t      var hex = c.toString(16);\n\t      return hex.length == 1 ? '0' + hex : hex;\n\t    }\n\t\n\t    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\t\n\t    return hex;\n\t  }\n\t\n\t  function defineColor(name, hueRange, lowerBounds) {\n\t\n\t    var sMin = lowerBounds[0][0],\n\t        sMax = lowerBounds[lowerBounds.length - 1][0],\n\t        bMin = lowerBounds[lowerBounds.length - 1][1],\n\t        bMax = lowerBounds[0][1];\n\t\n\t    colorDictionary[name] = {\n\t      hueRange: hueRange,\n\t      lowerBounds: lowerBounds,\n\t      saturationRange: [sMin, sMax],\n\t      brightnessRange: [bMin, bMax]\n\t    };\n\t  }\n\t\n\t  function loadColorBounds() {\n\t\n\t    defineColor('monochrome', null, [[0, 0], [100, 0]]);\n\t\n\t    defineColor('red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\n\t\n\t    defineColor('orange', [19, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\n\t\n\t    defineColor('yellow', [47, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\n\t\n\t    defineColor('green', [63, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\n\t\n\t    defineColor('blue', [179, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\n\t\n\t    defineColor('purple', [258, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\n\t\n\t    defineColor('pink', [283, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\n\t  }\n\t\n\t  function HSVtoRGB(hsv) {\n\t\n\t    // this doesn't work for the values of 0 and 360\n\t    // here's the hacky fix\n\t    var h = hsv[0];\n\t    if (h === 0) {\n\t      h = 1;\n\t    }\n\t    if (h === 360) {\n\t      h = 359;\n\t    }\n\t\n\t    // Rebase the h,s,v values\n\t    h = h / 360;\n\t    var s = hsv[1] / 100,\n\t        v = hsv[2] / 100;\n\t\n\t    var h_i = Math.floor(h * 6),\n\t        f = h * 6 - h_i,\n\t        p = v * (1 - s),\n\t        q = v * (1 - f * s),\n\t        t = v * (1 - (1 - f) * s),\n\t        r = 256,\n\t        g = 256,\n\t        b = 256;\n\t\n\t    switch (h_i) {\n\t      case 0:\n\t        r = v;g = t;b = p;break;\n\t      case 1:\n\t        r = q;g = v;b = p;break;\n\t      case 2:\n\t        r = p;g = v;b = t;break;\n\t      case 3:\n\t        r = p;g = q;b = v;break;\n\t      case 4:\n\t        r = t;g = p;b = v;break;\n\t      case 5:\n\t        r = v;g = p;b = q;break;\n\t    }\n\t\n\t    var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n\t    return result;\n\t  }\n\t\n\t  function HSVtoHSL(hsv) {\n\t    var h = hsv[0],\n\t        s = hsv[1] / 100,\n\t        v = hsv[2] / 100,\n\t        k = (2 - s) * v;\n\t\n\t    return [h, Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100, k / 2 * 100];\n\t  }\n\t\n\t  function stringToInteger(string) {\n\t    var total = 0;\n\t    for (var i = 0; i !== string.length; i++) {\n\t      if (total >= Number.MAX_SAFE_INTEGER) break;\n\t      total += string.charCodeAt(i);\n\t    }\n\t    return total;\n\t  }\n\t\n\t  return randomColor;\n\t});\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// app.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 85af05ba5cd80fe3683e","// We need to use a polyfill itself here,\r\n// not its' possible native implementation.\r\nimport ResizeObserver from 'resize-observer-polyfill/src/ResizeObserver';\r\n\r\nimport randomColor from 'randomcolor';\r\n\r\nconst hues = [\r\n    'red',\r\n    'pink',\r\n    'blue',\r\n    'orange',\r\n    'purple',\r\n    'monochrome'\r\n];\r\n\r\nlet colorData = {\r\n    luminosity: 'light',\r\n    hue: hues[getRandomInt(0, 5)]\r\n};\r\n\r\nconst observer = new ResizeObserver(entries => {\r\n    for (const entry of entries) {\r\n        const rect = entry.contentRect;\r\n        const dimensionsStr = `${rect.width.toFixed(2)} x ${rect.height.toFixed(2)}`;\r\n\r\n        entry.target.firstElementChild.textContent = dimensionsStr;\r\n    }\r\n});\r\n\r\nlet index = 0;\r\nlet queue = [];\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction updateColorData() {\r\n    colorData.hue = hues[getRandomInt(0, 5)];\r\n}\r\n\r\nfunction generateColor() {\r\n    return randomColor(colorData);\r\n}\r\n\r\nfunction toArray(collection) {\r\n    return Array.prototype.slice.call(collection);\r\n}\r\n\r\nfunction generateElements(container, levels, items = 4) {\r\n    let index = items;\r\n\r\n    levels--;\r\n\r\n    while (index--) {\r\n        let className = 'block';\r\n        const block = document.createElement('div');\r\n\r\n        if (levels) {\r\n            className += ' parent';\r\n\r\n            generateElements(block, levels, items);\r\n        } else {\r\n            className += ' leaf';\r\n\r\n            block.innerHTML = '<span class=\"dimen\"></span>';\r\n            block.style.backgroundColor = generateColor();\r\n        }\r\n\r\n        block.className = className;\r\n\r\n        container.appendChild(block);\r\n    }\r\n}\r\n\r\ngenerateElements(document.getElementById('container'), 2);\r\n\r\nfunction populateQueue() {\r\n    index = 0;\r\n    queue = toArray(document.querySelectorAll('.block'));\r\n\r\n    updateColorData();\r\n\r\n    requestAnimationFrame(resolveNextItem);\r\n}\r\n\r\nfunction resolveNextItem() {\r\n    const block = queue.shift();\r\n\r\n    if (!block) {\r\n        setTimeout(populateQueue, 2500)\r\n\r\n        return;\r\n    }\r\n\r\n    if (!index || index === 2) {\r\n        block.style.maxWidth = getRandomInt(30, 50) + '%';\r\n\r\n        if (index === 2) {\r\n            block.style.minHeight = getRandomInt(0, 80) + '%';\r\n        }\r\n    }\r\n\r\n    if (~block.className.indexOf('leaf')) {\r\n        block.style.backgroundColor = generateColor();\r\n    }\r\n\r\n    if (++index === 4) {\r\n        index = 0;\r\n    }\r\n\r\n    requestAnimationFrame(resolveNextItem);\r\n}\r\n\r\n\r\nfor (const leaf of toArray(document.querySelectorAll('.leaf'))) {\r\n    observer.observe(leaf);\r\n}\r\n\r\nsetTimeout(populateQueue, 2000);\r\n\n\n\n// WEBPACK FOOTER //\n// ./demo/app.js","import {WeakMap} from './shims/es6-collections';\r\nimport ResizeObserverController from './ResizeObserverController';\r\nimport _ResizeObserver from './_ResizeObserver';\r\n\r\n// Controller that will be assigned to all instances of ResizeObserver.\r\nconst controller = new ResizeObserverController();\r\n\r\n// Registry of the internal observers.\r\nconst observers = new WeakMap();\r\n\r\n/**\r\n * ResizeObservers' \"Proxy\" class which is meant to hide private properties and\r\n * methods from public instances.\r\n *\r\n * Additionally implements the \"continuousUpdates\" static property accessor to\r\n * give control over the behavior of the ResizeObserverController instance.\r\n * Changes made to this property affect all future and existing observers.\r\n */\r\nclass ResizeObserver {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {Function} callback - Callback that is invoked when dimensions of\r\n     *      one of the observed elements change.\r\n     */\r\n    constructor(callback) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n\r\n        // Create a new instance of the internal ResizeObserver.\r\n        const observer = new _ResizeObserver(callback, controller, this);\r\n\r\n        // Register internal observer.\r\n        observers.set(this, observer);\r\n    }\r\n\r\n    /**\r\n     * Tells whether continuous updates are enabled.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    static get continuousUpdates() {\r\n        return controller.continuousUpdates;\r\n    }\r\n\r\n    /**\r\n     * Enables or disables continuous updates.\r\n     *\r\n     * @param {Boolean} value - Whether to enable or disable continuous updates.\r\n     */\r\n    static set continuousUpdates(value) {\r\n        if (typeof value !== 'boolean') {\r\n            throw new TypeError('type of \"continuousUpdates\" value must be boolean.');\r\n        }\r\n\r\n        controller.continuousUpdates = value;\r\n    }\r\n}\r\n\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(method => {\r\n    ResizeObserver.prototype[method] = function () {\r\n        return observers.get(this)[method](...arguments);\r\n    };\r\n});\r\n\r\nexport default ResizeObserver;\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/resize-observer-polyfill/src/ResizeObserver.js","/**\r\n * A collection of shims that provides minimal\r\n * support of WeakMap and Map classes.\r\n *\r\n * These implementations are not meant to be used outside of\r\n * ResizeObserver modules as they cover only a limited range\r\n * of use cases.\r\n */\r\n\r\n/* eslint-disable require-jsdoc */\r\nconst hasNativeCollections =\r\n    typeof window.WeakMap === 'function' &&\r\n    typeof window.Map === 'function';\r\n\r\nconst WeakMap = (() => {\r\n    if (hasNativeCollections) {\r\n        return window.WeakMap;\r\n    }\r\n\r\n    function getIndex(arr, key) {\r\n        let result = -1;\r\n\r\n        arr.some((entry, index) => {\r\n            let matches = entry[0] === key;\r\n\r\n            if (matches) {\r\n                result = index;\r\n            }\r\n\r\n            return matches;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return class {\r\n        constructor() {\r\n            this.__entries__ = [];\r\n        }\r\n\r\n        get(key) {\r\n            let index = getIndex(this.__entries__, key);\r\n\r\n            return this.__entries__[index][1];\r\n        }\r\n\r\n        set(key, value) {\r\n            let index = getIndex(this.__entries__, key);\r\n\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            } else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        }\r\n\r\n        delete(key) {\r\n            let entries = this.__entries__,\r\n                index = getIndex(entries, key);\r\n\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        has(key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        }\r\n    };\r\n})();\r\n\r\nconst Map = (() => {\r\n    if (hasNativeCollections) {\r\n        return window.Map;\r\n    }\r\n\r\n    return class extends WeakMap {\r\n        get size() {\r\n            return this.__entries__.length;\r\n        }\r\n\r\n        clear() {\r\n            this.__entries__.splice(0, this.__entries__.length);\r\n        }\r\n\r\n        entries() {\r\n            return this.__entries__.slice();\r\n        }\r\n\r\n        keys() {\r\n            return this.__entries__.map(entry => entry[0]);\r\n        }\r\n\r\n        values() {\r\n            return this.__entries__.map(entry => entry[1]);\r\n        }\r\n\r\n        forEach(callback, ctx = null) {\r\n            for (const entry of this.__entries__) {\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nexport {Map, WeakMap};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/resize-observer-polyfill/src/shims/es6-collections.js","import throttle from './throttle';\r\n\r\n// Define whether the MutationObserver is supported.\r\nconst mutationsSupported = typeof window.MutationObserver === 'function';\r\n\r\n/**\r\n * Controller class which handles updates of ResizeObserver instances.\r\n * It decides when and for how long it's necessary to run updates by listening\r\n * to the windows \"resize\" event along with a tracking of DOM mutations\r\n * (nodes removal, changes of attributes, etc.).\r\n *\r\n * Transitions and animations are handled by running a repeatable update cycle\r\n * until the dimensions of observed elements are changing.\r\n *\r\n * Continuous update cycle will be used automatically in case MutationObserver\r\n * is not supported.\r\n */\r\nexport default class ResizeObserverController {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @param {Boolean} [continuousUpdates = false] - Whether to use a continuous\r\n     *      update cycle.\r\n     */\r\n    constructor(continuousUpdates = false) {\r\n        // Continuous updates must be enabled if MutationObserver is not supported.\r\n        this._isCycleContinuous = !mutationsSupported || continuousUpdates;\r\n\r\n        // Indicates whether DOM listeners have been added.\r\n        this._listenersEnabled = false;\r\n\r\n        // Keeps reference to the instance of MutationObserver.\r\n        this._mutationsObserver = null;\r\n\r\n        // A list of connected observers.\r\n        this._observers = [];\r\n\r\n        // Make sure that the \"refresh\" method is invoked as a RAF callback and\r\n        // that it happens only once during the period of 30 milliseconds.\r\n        this.refresh = throttle(this.refresh.bind(this), 30, true);\r\n\r\n        // Additionally postpone invocation of the continuous updates.\r\n        this._continuousUpdateHandler = throttle(this.refresh, 70);\r\n    }\r\n\r\n    /**\r\n     * Tells whether continuous updates are enabled.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    get continuousUpdates() {\r\n        return this._isCycleContinuous;\r\n    }\r\n\r\n    /**\r\n     * Enables or disables continuous updates.\r\n     *\r\n     * @param {Boolean} useContinuous - Whether to enable or disable continuous\r\n     *      updates. Note that the value won't be applied if MutationObserver is\r\n     *      not supported.\r\n     */\r\n    set continuousUpdates(useContinuous) {\r\n        // The state of continuous updates should not be modified if\r\n        // MutationObserver is not supported.\r\n        if (!mutationsSupported) {\r\n            return;\r\n        }\r\n\r\n        this._isCycleContinuous = useContinuous;\r\n\r\n        // Immediately start the update cycle in order not to wait for a possible\r\n        // event that might initiate it.\r\n        if (this._listenersEnabled && useContinuous) {\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserver} observer - Observer to be added.\r\n     */\r\n    connect(observer) {\r\n        if (!this.isConnected(observer)) {\r\n            this._observers.push(observer);\r\n        }\r\n\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this._listenersEnabled) {\r\n            this._addListeners();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserver} observer - Observer to be removed.\r\n     */\r\n    disconnect(observer) {\r\n        const observers = this._observers;\r\n        const index = observers.indexOf(observer);\r\n\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this._listenersEnabled) {\r\n            this._removeListeners();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tells whether the provided observer is connected to controller.\r\n     *\r\n     * @param {ResizeObserver} observer - Observer to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    isConnected(observer) {\r\n        return !!~this._observers.indexOf(observer);\r\n    }\r\n\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes or if continuous updates are enabled.\r\n     */\r\n    refresh() {\r\n        const hasChanges = this._updateObservers();\r\n\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (hasChanges) {\r\n            this.refresh();\r\n        } else if (this._isCycleContinuous && this._listenersEnabled) {\r\n            // Automatically repeat cycle if it's necessary.\r\n            this._continuousUpdateHandler();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {Boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of its' elements.\r\n     */\r\n    _updateObservers() {\r\n        let hasChanges = false;\r\n\r\n        for (const observer of this._observers) {\r\n            // Collect active observations.\r\n            observer.gatherActive();\r\n\r\n            // Broadcast active observations and set the flag that changes have\r\n            // been detected.\r\n            if (observer.hasActive()) {\r\n                hasChanges = true;\r\n\r\n                observer.broadcastActive();\r\n            }\r\n        }\r\n\r\n        return hasChanges;\r\n    }\r\n\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     */\r\n    _addListeners() {\r\n        // Do nothing if listeners have been already added.\r\n        if (this._listenersEnabled) {\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('resize', this.refresh);\r\n\r\n        // Subscribe to DOM mutations if it's possible as they may lead to\r\n        // changes in the dimensions of elements.\r\n        if (mutationsSupported) {\r\n            this._mutationsObserver = new MutationObserver(this.refresh);\r\n\r\n            this._mutationsObserver.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n\r\n        this._listenersEnabled = true;\r\n\r\n        // Don't wait for a possible event that might trigger the update of\r\n        // observers and manually initiate the update process.\r\n        if (this._isCycleContinuous) {\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     */\r\n    _removeListeners() {\r\n        // Do nothing if listeners have been already removed.\r\n        if (!this._listenersEnabled) {\r\n            return;\r\n        }\r\n\r\n        window.removeEventListener('resize', this.refresh);\r\n\r\n        if (this._mutationsObserver) {\r\n            this._mutationsObserver.disconnect();\r\n        }\r\n\r\n        this._mutationsObserver = null;\r\n        this._listenersEnabled = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/resize-observer-polyfill/src/ResizeObserverController.js","import reqAnimFrame from './shims/requestAnimationFrame';\r\n\r\n/**\r\n * Creates a wrapper function that ensures that provided callback will\r\n * be invoked only once during the specified delay period. It caches the last\r\n * call and re-invokes it after pending activation is resolved.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {Number} [delay = 0] - Delay after which to invoke callback.\r\n * @param {Boolean} [afterRAF = false] - Whether function needs to be invoked as\r\n *      a requestAnimationFrame callback.\r\n * @returns {Function}\r\n */\r\nexport default function (callback, delay = 0, afterRAF = false) {\r\n    let leadCall = null,\r\n        edgeCall = null;\r\n\r\n    /**\r\n     * Invokes the original callback function and schedules a new invocation if\r\n     * the wrapper was called during current request.\r\n     */\r\n    function invokeCallback() {\r\n        // Invoke original function.\r\n        callback.apply(...leadCall);\r\n\r\n        leadCall = null;\r\n\r\n        // Schedule new invocation if there was a call during delay period.\r\n        if (edgeCall) {\r\n            proxy.apply(...edgeCall);\r\n\r\n            edgeCall = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback that will be invoked after the specified delay period. It will\r\n     * delegate invocation of the original function to the requestAnimationFrame\r\n     * if \"afterRAF\" parameter is set to \"true\".\r\n     */\r\n    function timeoutCallback() {\r\n        afterRAF ? reqAnimFrame(invokeCallback) : invokeCallback();\r\n    }\r\n\r\n    /**\r\n     * Schedules invocation of the initial function.\r\n     */\r\n    function proxy(...args) {\r\n        // eslint-disable-next-line no-invalid-this\r\n        const callData = [this, args];\r\n\r\n        // Cache current call to be re-invoked later if there is already a\r\n        // pending call.\r\n        if (leadCall) {\r\n            edgeCall = callData;\r\n        } else {\r\n            leadCall = callData;\r\n\r\n            // Schedule new invocation.\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n    }\r\n\r\n    return proxy;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/resize-observer-polyfill/src/throttle.js","/**\r\n * A shim for requestAnimationFrame which falls back\r\n * to setTimeout if the first one is not supported.\r\n *\r\n * @returns {Number} Requests' identifier.\r\n */\r\nexport default (() => {\r\n    if (typeof window.requestAnimationFrame === 'function') {\r\n        return window.requestAnimationFrame;\r\n    }\r\n\r\n    return callback => {\r\n        return setTimeout(() => callback(Date.now()), 1000 / 60);\r\n    };\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/resize-observer-polyfill/src/shims/requestAnimationFrame.js","import {Map} from './shims/es6-collections';\r\nimport ResizeObservation from './ResizeObservation';\r\nimport ResizeObserverEntry from './ResizeObserverEntry';\r\n\r\nexport default class ResizeObserver {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {Function} callback - Callback function that is invoked when one\r\n     *      of the observed elements changes it's content rectangle.\r\n     * @param {ResizeObsreverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} publicObserver - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    constructor(callback, controller, publicObserver) {\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n\r\n        // Reference to the callback function.\r\n        this._callback = callback;\r\n\r\n        // Registry of ResizeObservation instances.\r\n        this._targets = new Map();\r\n\r\n        // Collection of resize observations that have detected changes in\r\n        // dimensions of elements.\r\n        this._activeTargets = [];\r\n\r\n        // Reference to the associated ResizeObserverController.\r\n        this._controller = controller;\r\n\r\n        // Public ResizeObserver instance which will be passed to callback function.\r\n        this._publicObserver = publicObserver;\r\n    }\r\n\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    observe(target) {\r\n        //  Throw the same errors as in a native implementation.\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n\r\n        if (!(target instanceof Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n\r\n        const targets = this._targets;\r\n\r\n        // Do nothing if element is already being observed.\r\n        if (targets.has(target)) {\r\n            return;\r\n        }\r\n\r\n        // Register new ResizeObservation instance.\r\n        targets.set(target, new ResizeObservation(target));\r\n\r\n        // Add observer to controller if it hasn't been connected yet.\r\n        if (!this._controller.isConnected(this)) {\r\n            this._controller.connect(this);\r\n        }\r\n\r\n        // Update observations.\r\n        this._controller.refresh();\r\n    }\r\n\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     */\r\n    unobserve(target) {\r\n        //  Throw the same errors as in a native implementation.\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n\r\n        if (!(target instanceof Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n\r\n        const targets = this._targets;\r\n\r\n        // Do nothing if element is not being observed.\r\n        if (!targets.has(target)) {\r\n            return;\r\n        }\r\n\r\n        // Remove element and associated with it ResizeObsrvation instance from\r\n        // registry.\r\n        targets.delete(target);\r\n\r\n        // Set back the initial state if there is nothing to observe.\r\n        if (!targets.size) {\r\n            this.disconnect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops observing all elements and clears the observations list.\r\n     */\r\n    disconnect() {\r\n        this.clearActive();\r\n        this._targets.clear();\r\n        this._controller.disconnect(this);\r\n    }\r\n\r\n    /**\r\n     * Clears an array of previously collected active observations and collects\r\n     * observation instances which associated element has changed its' content\r\n     * rectangle.\r\n     */\r\n    gatherActive() {\r\n        this.clearActive();\r\n\r\n        const activeTargets = this._activeTargets;\r\n\r\n        this._targets.forEach(observation => {\r\n            if (observation.isActive()) {\r\n                activeTargets.push(observation);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     */\r\n    broadcastActive() {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n\r\n        const observer = this._publicObserver;\r\n\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        const entries = this._activeTargets.map(observation => {\r\n            return new ResizeObserverEntry(\r\n                observation.target,\r\n                observation.broadcastRect()\r\n            );\r\n        });\r\n\r\n        this.clearActive();\r\n        this._callback.call(observer, entries, observer);\r\n    }\r\n\r\n    /**\r\n     * Clears the collection of pending/active observations.\r\n     */\r\n    clearActive() {\r\n        this._activeTargets.splice(0);\r\n    }\r\n\r\n    /**\r\n     * Tells whether observer has pending observations.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    hasActive() {\r\n        return !!this._activeTargets.length;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/resize-observer-polyfill/src/_ResizeObserver.js","// Placeholder of an empty content rectangle.\r\nconst emptyRect = createContentRect(0, 0, 0, 0);\r\n\r\n/**\r\n * Extracts computed styles of provided element.\r\n *\r\n * @param {Element} target\r\n * @returns {CSSStyleDeclaration}\r\n */\r\nfunction getStyles(target) {\r\n    return window.getComputedStyle(target);\r\n}\r\n\r\n/**\r\n * Converts provided string defined in q form of '{{value}}px' to number.\r\n *\r\n * @param {String} value\r\n * @returns {Number}\r\n */\r\nfunction pixelsToNumber(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...String} positions - Borders positions (top, right, ...)\r\n * @returns {Number}\r\n */\r\nfunction getBordersSize(styles, ...positions) {\r\n    return positions.reduce((size, pos) => {\r\n        const value = styles['border-' + pos + '-width'];\r\n\r\n        return size + pixelsToNumber(value);\r\n    }, 0);\r\n}\r\n\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    const boxKeys = ['top', 'right', 'bottom', 'left'];\r\n    const paddings = {};\r\n\r\n    for (const key of boxKeys) {\r\n        const value = styles['padding-' + key];\r\n\r\n        paddings[key] = pixelsToNumber(value);\r\n    }\r\n\r\n    return paddings;\r\n}\r\n\r\n/**\r\n * Creates content rectangle based on the provided dimensions\r\n * and the top/left positions.\r\n *\r\n * @param {Number} width - Width of rectangle.\r\n * @param {Number} height - Height of rectangle.\r\n * @param {Number} top - Top position.\r\n * @param {Number} left - Left position.\r\n * @returns {ClientRect}\r\n */\r\nfunction createContentRect(width, height, top, left) {\r\n    return {\r\n        width, height, top,\r\n        right: width + left,\r\n        bottom: height + top,\r\n        left\r\n    };\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGElement} target - Element whose content\r\n *      rectangle needs to be calculated.\r\n * @returns {ClientRect}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    const bbox = target.getBBox();\r\n\r\n    return createContentRect(bbox.width, bbox.height, 0, 0);\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of a root element.\r\n *\r\n * @returns {ClientRect}\r\n */\r\nfunction getDocElementRect() {\r\n    // Neither scroll[Width/Height] nor offset[Width/Height] can be used to\r\n    // define content dimensions as they give inconsistent results across\r\n    // different browsers. E.g. in the Internet Explorer 10 and lower value of\r\n    // these properties can't be less than the client dimensions (same thing\r\n    // with the \"getBoundingClientRect\" method). And Firefox has the same\r\n    // behavior with its \"scroll\" properties.\r\n    const styles = getStyles(document.documentElement);\r\n\r\n    const width = pixelsToNumber(styles.width);\r\n    const height = pixelsToNumber(styles.height);\r\n\r\n    return createContentRect(width, height, 0, 0);\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element whose content\r\n *      rectangle needs to be calculated.\r\n * @returns {ClientRect}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    const clientWidth = target.clientWidth;\r\n    const clientHeight = target.clientHeight;\r\n\r\n    // By this condition we can catch all non-replaced inline, hidden and detached\r\n    // elements. Though elements with width & height properties less than 0.5 will\r\n    // be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuerys' ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n\r\n    const styles = getStyles(target);\r\n    const paddings = getPaddings(styles);\r\n    const horizPad = paddings.left + paddings.right;\r\n    const vertPad = paddings.top + paddings.bottom;\r\n\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize getBoundingClientRect if only its' data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    let width = pixelsToNumber(styles.width),\r\n        height = pixelsToNumber(styles.height);\r\n\r\n    // Width & height include paddings and borders\r\n    // when 'border-box' box model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n\r\n    // In some browsers (only in Firefox, actually) CSS width & height\r\n    // include scroll bars size which can be removed at this step as scroll bars\r\n    // are the only difference between rounded dimensions + paddings and \"client\"\r\n    // properties, though that is not always true in Chrome.\r\n    const vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n    const horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n\r\n    // Chrome has a rather weird rounding of \"client\" properties.\r\n    // E.g. for an element with content width of 314.2px it sometimes gives the\r\n    // client width of 315px and for the width of 314.7px it may give 314px.\r\n    // And it doesn't happen all the time. Such difference needs to be ignored.\r\n    if (Math.abs(vertScrollbar) !== 1) {\r\n        width -= vertScrollbar;\r\n    }\r\n\r\n    if (Math.abs(horizScrollbar) !== 1) {\r\n        height -= horizScrollbar;\r\n    }\r\n\r\n    return createContentRect(width, height, paddings.top, paddings.left);\r\n}\r\n\r\n/**\r\n * Checks whether provided element is an instance of SVGElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {Boolean}\r\n */\r\nfunction isSVGElement(target) {\r\n    return target instanceof window.SVGElement;\r\n}\r\n\r\n/**\r\n * Checks whether provided element is a document element (root element of a document).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {Boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === document.documentElement;\r\n}\r\n\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element whose content rectangle\r\n *      needs to be calculated.\r\n * @returns {ClientRect}\r\n */\r\nfunction getContentRect(target) {\r\n    if (isSVGElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n\r\n    if (isDocumentElement(target)) {\r\n        return getDocElementRect();\r\n    }\r\n\r\n    return getHTMLElementContentRect(target);\r\n}\r\n\r\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of its' changes.\r\n */\r\nexport default class ResizeObservation {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    constructor(target) {\r\n        this.target = target;\r\n\r\n        // Keeps reference to the last observed content rectangle.\r\n        this._contentRect = emptyRect;\r\n\r\n        // Broadcasted width of content rectangle.\r\n        this.broadcastWidth = 0;\r\n\r\n        // Broadcasted height of content rectangle.\r\n        this.broadcastHeight = 0;\r\n    }\r\n\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {ClientRect} Last observed content rectangle.\r\n     */\r\n    broadcastRect() {\r\n        const rect = this._contentRect;\r\n\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n\r\n        return rect;\r\n    }\r\n\r\n    /**\r\n     * Updates content rectangle and tells whether its' width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    isActive() {\r\n        const rect = getContentRect(this.target);\r\n\r\n        this._contentRect = rect;\r\n\r\n        return (\r\n            rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/resize-observer-polyfill/src/ResizeObservation.js","/**\r\n * Defines properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @param {Object} [descr = {}] - Properties descriptor.\r\n * @returns {Object} Target object.\r\n */\r\nfunction defineProperties(target, props, descr = {}) {\r\n    const descriptor = {\r\n        configurable: descr.configurable || false,\r\n        writable: descr.writable || false,\r\n        enumerable: descr.enumerable || false\r\n    };\r\n\r\n    for (const key of Object.keys(props)) {\r\n        descriptor.value = props[key];\r\n\r\n        Object.defineProperty(target, key, descriptor);\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\nexport default class ResizeObserverEntry {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {ClientRect} rectData - Data of the elements' content rectangle.\r\n     */\r\n    constructor(target, rectData) {\r\n        // Content rectangle needs to be an instance of ClientRect if it's\r\n        // available.\r\n        const rectInterface = window.ClientRect || Object;\r\n        const contentRect = Object.create(rectInterface.prototype);\r\n\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineProperties(contentRect, rectData, {configurable: true});\r\n\r\n        defineProperties(this, {\r\n            target, contentRect\r\n        }, {configurable: true});\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/resize-observer-polyfill/src/ResizeObserverEntry.js","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support AMD\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support CommonJS\n  } else if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + Math.random() + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        return 'rgba(' + rgbColor.join(', ') + ', ' + Math.random() + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n\n\n\n// WEBPACK FOOTER //\n// ./~/randomcolor/randomColor.js"],"sourceRoot":""}