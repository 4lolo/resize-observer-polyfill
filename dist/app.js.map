{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///app.js","webpack:///webpack/bootstrap 7ba79c97372a3e94ef68","webpack:///./demo/app.js","webpack:///./~/resize-observer-polyfill/src/ResizeObserver.js","webpack:///./~/resize-observer-polyfill/src/shims/es6-collections.js","webpack:///./~/resize-observer-polyfill/src/ResizeObserverController.js","webpack:///./~/resize-observer-polyfill/src/shims/performance.now.js","webpack:///./~/resize-observer-polyfill/src/shims/requestAnimationFrame.js","webpack:///./~/resize-observer-polyfill/src/_ResizeObserver.js","webpack:///./~/resize-observer-polyfill/src/ResizeObservation.js","webpack:///./~/resize-observer-polyfill/src/ResizeObserverEntry.js","webpack:///./~/randomcolor/randomColor.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","getRandomInt","min","max","Math","floor","random","updateColorData","colorData","hue","hues","generateColor","_randomcolor2","toArray","collection","Array","prototype","slice","generateElements","container","levels","items","arguments","length","undefined","index","className","block","document","createElement","innerHTML","style","backgroundColor","appendChild","populateQueue","queue","querySelectorAll","requestAnimationFrame","resolveNextItem","shift","maxWidth","minHeight","indexOf","setTimeout","_ResizeObserver","_ResizeObserver2","_randomcolor","luminosity","observer","entries","_iterator","_isArray","isArray","_i","Symbol","iterator","_ref","next","done","value","entry","rect","contentRect","dimensionsStr","width","toFixed","height","target","firstElementChild","textContent","getElementById","_iterator2","_isArray2","_i2","_ref2","leaf","observe","_classCallCheck","instance","Constructor","TypeError","_typeof","constructor","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","_es6Collections","_ResizeObserverController","_ResizeObserverController2","_ResizeObserver3","controller","observers","WeakMap","ResizeObserver","callback","set","get","idleTimeout","continuousUpdates","forEach","method","_observers$get","apply","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","hasNativeCollections","window","Map","getIndex","arr","result","some","matches","_class","__entries__","push","splice","has","_WeakMap","_class2","clear","keys","map","values","ctx","debounce","delay","timeoutID","_this","_len","args","_key","clearTimeout","_performance","_performance2","_requestAnimationFrame","_requestAnimationFrame2","mutationsSupported","MutationObserver","ResizeObserverController","_idleTimeout","_isCycleContinuous","_cycleStartTime","_isCycleActive","_isUpdateScheduled","_listenersEnabled","_mutationsObserver","_observers","runUpdates","bind","_onMutation","_resolveScheduled","_continuousCycleHandler","connect","isConnected","_addListeners","disconnect","_removeListeners","_updateObservers","hasChanges","gatherActive","hasActive","broadcastActive","scheduleUpdate","_hasRemainingTime","_endUpdates","timePassed","addEventListener","attributes","childList","characterData","subtree","removeEventListener","attrsChanged","type","enable","performance","now","Date","_ResizeObservation","_ResizeObservation2","_ResizeObserverEntry","_ResizeObserverEntry2","publicObserver","_callback","_targets","_activeTargets","_controller","_publicObserver","Element","targets","unobserve","size","clearActive","observation","broadcastRect","activeTargets","isActive","getStyles","getComputedStyle","pixelsToNumber","parseFloat","getBordersSize","styles","positions","reduce","pos","getPaddings","boxKeys","paddings","createContentRect","top","left","right","bottom","getSVGContentRect","bbox","getBBox","getDocElementRect","documentElement","getHTMLElementContentRect","clientWidth","clientHeight","emptyRect","horizPad","vertPad","boxSizing","round","vertScrollbar","horizScrollbar","abs","isSVGElement","SVGElement","isDocumentElement","getContentRect","ResizeObservation","_contentRect","broadcastWidth","broadcastHeight","ResizeObserverEntry","rectData","rectInterface","ClientRect","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","pickHue","options","hueRange","getHueRange","randomWithin","pickSaturation","saturationRange","getSaturationRange","sMin","sMax","pickBrightness","H","S","bMin","getMinimumBrightness","bMax","setFormat","hsv","format","HSVtoHSL","hsl","hslColor","HSVtoRGB","rgb","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","b","colorInput","parseInt","number","colorDictionary","color","colorName","range","seed","rnd","componentToHex","hex","toString","defineColor","name","brightnessRange","loadColorBounds","h","s","v","h_i","f","q","t","r","g","k","stringToInteger","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","randomColor","B","count","totalColors","colors"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ResizeObserver = __webpack_require__(1);\n\t\n\tvar _ResizeObserver2 = _interopRequireDefault(_ResizeObserver);\n\t\n\tvar _randomcolor = __webpack_require__(9);\n\t\n\tvar _randomcolor2 = _interopRequireDefault(_randomcolor);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// We need to use a polyfill itself here,\n\t// not its' possible native implementation.\n\tvar hues = ['red', 'pink', 'blue', 'orange', 'purple', 'monochrome'];\n\t\n\tvar colorData = {\n\t    luminosity: 'light',\n\t    hue: hues[getRandomInt(0, 5)]\n\t};\n\t\n\tvar observer = new _ResizeObserver2.default(function (entries) {\n\t    for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t        var _ref;\n\t\n\t        if (_isArray) {\n\t            if (_i >= _iterator.length) break;\n\t            _ref = _iterator[_i++];\n\t        } else {\n\t            _i = _iterator.next();\n\t            if (_i.done) break;\n\t            _ref = _i.value;\n\t        }\n\t\n\t        var entry = _ref;\n\t\n\t        var rect = entry.contentRect;\n\t        var dimensionsStr = rect.width.toFixed(2) + ' x ' + rect.height.toFixed(2);\n\t\n\t        entry.target.firstElementChild.textContent = dimensionsStr;\n\t    }\n\t});\n\t\n\tvar index = 0;\n\tvar queue = [];\n\t\n\tfunction getRandomInt(min, max) {\n\t    return Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\t\n\tfunction updateColorData() {\n\t    colorData.hue = hues[getRandomInt(0, 5)];\n\t}\n\t\n\tfunction generateColor() {\n\t    return (0, _randomcolor2.default)(colorData);\n\t}\n\t\n\tfunction toArray(collection) {\n\t    return Array.prototype.slice.call(collection);\n\t}\n\t\n\tfunction generateElements(container, levels) {\n\t    var items = arguments.length <= 2 || arguments[2] === undefined ? 4 : arguments[2];\n\t\n\t    var index = items;\n\t\n\t    levels--;\n\t\n\t    while (index--) {\n\t        var className = 'block';\n\t        var block = document.createElement('div');\n\t\n\t        if (levels) {\n\t            className += ' parent';\n\t\n\t            generateElements(block, levels, items);\n\t        } else {\n\t            className += ' leaf';\n\t\n\t            block.innerHTML = '<span class=\"dimen\"></span>';\n\t            block.style.backgroundColor = generateColor();\n\t        }\n\t\n\t        block.className = className;\n\t\n\t        container.appendChild(block);\n\t    }\n\t}\n\t\n\tgenerateElements(document.getElementById('container'), 2);\n\t\n\tfunction populateQueue() {\n\t    index = 0;\n\t    queue = toArray(document.querySelectorAll('.block'));\n\t\n\t    updateColorData();\n\t\n\t    requestAnimationFrame(resolveNextItem);\n\t}\n\t\n\tfunction resolveNextItem() {\n\t    var block = queue.shift();\n\t\n\t    if (!block) {\n\t        setTimeout(populateQueue, 2500);\n\t\n\t        return;\n\t    }\n\t\n\t    if (!index || index === 2) {\n\t        block.style.maxWidth = getRandomInt(30, 50) + '%';\n\t\n\t        if (index === 2) {\n\t            block.style.minHeight = getRandomInt(0, 80) + '%';\n\t        }\n\t    }\n\t\n\t    if (~block.className.indexOf('leaf')) {\n\t        block.style.backgroundColor = generateColor();\n\t    }\n\t\n\t    if (++index === 4) {\n\t        index = 0;\n\t    }\n\t\n\t    requestAnimationFrame(resolveNextItem);\n\t}\n\t\n\tfor (var _iterator2 = toArray(document.querySelectorAll('.leaf')), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n\t    var _ref2;\n\t\n\t    if (_isArray2) {\n\t        if (_i2 >= _iterator2.length) break;\n\t        _ref2 = _iterator2[_i2++];\n\t    } else {\n\t        _i2 = _iterator2.next();\n\t        if (_i2.done) break;\n\t        _ref2 = _i2.value;\n\t    }\n\t\n\t    var leaf = _ref2;\n\t\n\t    observer.observe(leaf);\n\t}\n\t\n\tsetTimeout(populateQueue, 2000);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _es6Collections = __webpack_require__(2);\n\t\n\tvar _ResizeObserverController = __webpack_require__(3);\n\t\n\tvar _ResizeObserverController2 = _interopRequireDefault(_ResizeObserverController);\n\t\n\tvar _ResizeObserver2 = __webpack_require__(6);\n\t\n\tvar _ResizeObserver3 = _interopRequireDefault(_ResizeObserver2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Controller which will be assigned to all instances of ResizeObserver.\n\tvar controller = new _ResizeObserverController2.default();\n\t\n\t// Registry of internal observers.\n\tvar observers = new _es6Collections.WeakMap();\n\t\n\t/**\r\n\t * ResizeObservers' \"Proxy\" class which is meant to hide private\r\n\t * properties and methods from public instances.\r\n\t *\r\n\t * Additionally it implements \"idleTimeout\" and \"continuousUpdates\" static property\r\n\t * accessors to give a control over the behavior of ResizeObserverController\r\n\t * instance. Changes made to these properties will affect all future and\r\n\t * existing observers.\r\n\t */\n\t\n\tvar ResizeObserver = function () {\n\t    /**\r\n\t     * Creates a new instance of ResizeObserver.\r\n\t     *\r\n\t     * @param {Function} callback - Callback which will\r\n\t     *      be invoked when dimensions of one of the\r\n\t     *      observed elements have been changed.\r\n\t     */\n\t    function ResizeObserver(callback) {\n\t        _classCallCheck(this, ResizeObserver);\n\t\n\t        if (!arguments.length) {\n\t            throw new TypeError('1 argument required, but only 0 present.');\n\t        }\n\t\n\t        var observer = new _ResizeObserver3.default(callback, controller, this);\n\t\n\t        // Register an internal observer.\n\t        observers.set(this, observer);\n\t    }\n\t\n\t    /**\r\n\t     * Extracts controllers' idle timeout value.\r\n\t     *\r\n\t     * @returns {Number}\r\n\t     */\n\t\n\t\n\t    _createClass(ResizeObserver, null, [{\n\t        key: 'idleTimeout',\n\t        get: function get() {\n\t            return controller.idleTimeout;\n\t        }\n\t\n\t        /**\r\n\t         * Sets up new idle timeout.\r\n\t         *\r\n\t         * @param {Number} value - New timeout value.\r\n\t         */\n\t        ,\n\t        set: function set(value) {\n\t            if (typeof value !== 'number') {\n\t                throw new TypeError('type of \"idleTimeout\" value must be a number.');\n\t            }\n\t\n\t            if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) < 0) {\n\t                throw new TypeError('\"idleTimeout\" value must be greater than 0.');\n\t            }\n\t\n\t            controller.idleTimeout = value;\n\t        }\n\t\n\t        /**\r\n\t         * Tells whether continuous updates are enabled.\r\n\t         *\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'continuousUpdates',\n\t        get: function get() {\n\t            return controller.continuousUpdates;\n\t        }\n\t\n\t        /**\r\n\t         * Enables or disables continuous updates.\r\n\t         *\r\n\t         * @param {Boolean} value - Whether to enable or disable\r\n\t         *      continuous updates.\r\n\t         */\n\t        ,\n\t        set: function set(value) {\n\t            if (typeof value !== 'boolean') {\n\t                throw new TypeError('type of \"continuousUpdates\" value must be a boolean.');\n\t            }\n\t\n\t            controller.continuousUpdates = value;\n\t        }\n\t    }]);\n\t\n\t    return ResizeObserver;\n\t}();\n\t\n\t// Expose public methods of ResizeObserver.\n\t\n\t\n\t['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n\t    ResizeObserver.prototype[method] = function () {\n\t        var _observers$get;\n\t\n\t        return (_observers$get = observers.get(this))[method].apply(_observers$get, arguments);\n\t    };\n\t});\n\t\n\texports.default = ResizeObserver;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * A collection of shims that provided minimal\r\n\t * support of WeakMap and Map classes.\r\n\t *\r\n\t * These implementations are not meant to be used outside of\r\n\t * ResizeObserver modules as they cover only a limited range\r\n\t * of use cases.\r\n\t */\n\t\n\t/* eslint-disable require-jsdoc */\n\tvar hasNativeCollections = typeof window.WeakMap === 'function' && typeof window.Map === 'function';\n\t\n\tvar WeakMap = function () {\n\t    if (hasNativeCollections) {\n\t        return window.WeakMap;\n\t    }\n\t\n\t    function getIndex(arr, key) {\n\t        var result = -1;\n\t\n\t        arr.some(function (entry, index) {\n\t            var matches = entry[0] === key;\n\t\n\t            if (matches) {\n\t                result = index;\n\t            }\n\t\n\t            return matches;\n\t        });\n\t\n\t        return result;\n\t    }\n\t\n\t    return function () {\n\t        function _class() {\n\t            _classCallCheck(this, _class);\n\t\n\t            this.__entries__ = [];\n\t        }\n\t\n\t        _class.prototype.get = function get(key) {\n\t            var index = getIndex(this.__entries__, key);\n\t\n\t            return this.__entries__[index][1];\n\t        };\n\t\n\t        _class.prototype.set = function set(key, value) {\n\t            var index = getIndex(this.__entries__, key);\n\t\n\t            if (~index) {\n\t                this.__entries__[index][1] = value;\n\t            } else {\n\t                this.__entries__.push([key, value]);\n\t            }\n\t        };\n\t\n\t        _class.prototype.delete = function _delete(key) {\n\t            var entries = this.__entries__,\n\t                index = getIndex(entries, key);\n\t\n\t            if (~index) {\n\t                entries.splice(index, 1);\n\t            }\n\t        };\n\t\n\t        _class.prototype.has = function has(key) {\n\t            return !!~getIndex(this.__entries__, key);\n\t        };\n\t\n\t        return _class;\n\t    }();\n\t}();\n\t\n\tvar Map = function () {\n\t    if (hasNativeCollections) {\n\t        return window.Map;\n\t    }\n\t\n\t    return function (_WeakMap) {\n\t        _inherits(_class2, _WeakMap);\n\t\n\t        function _class2() {\n\t            _classCallCheck(this, _class2);\n\t\n\t            return _possibleConstructorReturn(this, _WeakMap.apply(this, arguments));\n\t        }\n\t\n\t        _class2.prototype.clear = function clear() {\n\t            this.__entries__.splice(0, this.__entries__.length);\n\t        };\n\t\n\t        _class2.prototype.entries = function entries() {\n\t            return this.__entries__.slice();\n\t        };\n\t\n\t        _class2.prototype.keys = function keys() {\n\t            return this.__entries__.map(function (entry) {\n\t                return entry[0];\n\t            });\n\t        };\n\t\n\t        _class2.prototype.values = function values() {\n\t            return this.__entries__.map(function (entry) {\n\t                return entry[1];\n\t            });\n\t        };\n\t\n\t        _class2.prototype.forEach = function forEach(callback) {\n\t            var ctx = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n\t\n\t            for (var _iterator = this.__entries__, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t                var _ref;\n\t\n\t                if (_isArray) {\n\t                    if (_i >= _iterator.length) break;\n\t                    _ref = _iterator[_i++];\n\t                } else {\n\t                    _i = _iterator.next();\n\t                    if (_i.done) break;\n\t                    _ref = _i.value;\n\t                }\n\t\n\t                var entry = _ref;\n\t\n\t                callback.call(ctx, entry[1], entry[0]);\n\t            }\n\t        };\n\t\n\t        _createClass(_class2, [{\n\t            key: 'size',\n\t            get: function get() {\n\t                return this.__entries__.length;\n\t            }\n\t        }]);\n\t\n\t        return _class2;\n\t    }(WeakMap);\n\t}();\n\t\n\texports.Map = Map;\n\texports.WeakMap = WeakMap;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _performance = __webpack_require__(4);\n\t\n\tvar _performance2 = _interopRequireDefault(_performance);\n\t\n\tvar _requestAnimationFrame = __webpack_require__(5);\n\t\n\tvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar mutationsSupported = typeof window.MutationObserver === 'function';\n\t\n\t/**\r\n\t * Creates a wrapper function which ensures that\r\n\t * provided callback will be invoked only once\r\n\t * during the specified delay.\r\n\t *\r\n\t * @param {Function} callback - Function to be invoked.\r\n\t * @param {Number} [delay = 0] - Delay after which to invoke callback.\r\n\t * @returns {Function}\r\n\t */\n\tfunction debounce(callback) {\n\t    var delay = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t    var timeoutID = false;\n\t\n\t    return function () {\n\t        var _this = this;\n\t\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        if (timeoutID !== false) {\n\t            clearTimeout(timeoutID);\n\t        }\n\t\n\t        timeoutID = setTimeout(function () {\n\t            timeoutID = false;\n\t\n\t            /* eslint-disable no-invalid-this */\n\t            callback.apply(_this, args);\n\t\n\t            /* eslint-enable no-invalid-this */\n\t        }, delay);\n\t    };\n\t}\n\t\n\t/**\r\n\t * Controller class which handles updates of ResizeObserver instances.\r\n\t * It's meant to decide when and for how long it's necessary to run updates by listening to the windows\r\n\t * \"resize\" event along with a tracking of DOM mutations (nodes removal, changes of attributes, etc.).\r\n\t *\r\n\t * Transitions and animations are handled by running a repeatable update cycle either until the dimensions\r\n\t * of observed elements are changing or the timeout is reached (default timeout is 50 milliseconds).\r\n\t * Timeout value can be manually increased if transitions have a delay.\r\n\t *\r\n\t * Continuous update cycle will be used automatically in case if MutationObserver is not supported.\r\n\t */\n\t\n\tvar ResizeObserverController = function () {\n\t    /**\r\n\t     * Creates a new instance of ResizeObserverController.\r\n\t     *\r\n\t     * @param {Number} [idleTimeout = 0] - Idle timeout value.\r\n\t     * @param {Boolean} [continuousUpdates = false] - Whether to use a continuous update cycle.\r\n\t     */\n\t    function ResizeObserverController() {\n\t        var idleTimeout = arguments.length <= 0 || arguments[0] === undefined ? 50 : arguments[0];\n\t        var continuousUpdates = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\t\n\t        _classCallCheck(this, ResizeObserverController);\n\t\n\t        this._idleTimeout = idleTimeout;\n\t        this._isCycleContinuous = continuousUpdates;\n\t\n\t        this._cycleStartTime = 0;\n\t\n\t        // Indicates whether the update cycle is currently running.\n\t        this._isCycleActive = false;\n\t\n\t        // Indicates whether the update of observers is scheduled.\n\t        this._isUpdateScheduled = false;\n\t\n\t        // Indicates whether DOM listeners have been added.\n\t        this._listenersEnabled = false;\n\t\n\t        // Keeps reference to the instance of MutationObserver.\n\t        this._mutationsObserver = null;\n\t\n\t        // A list of connected observers.\n\t        this._observers = [];\n\t\n\t        // Fix value of \"this\" binding for the following methods.\n\t        this.runUpdates = this.runUpdates.bind(this);\n\t        this._onMutation = this._onMutation.bind(this);\n\t        this._resolveScheduled = this._resolveScheduled.bind(this);\n\t\n\t        // Function that will be invoked to re-run the\n\t        // update cycle if continuous cycles are enabled.\n\t        this._continuousCycleHandler = debounce(this.runUpdates, 100);\n\t    }\n\t\n\t    /**\r\n\t     * Returns current idle timeout value.\r\n\t     *\r\n\t     * @returns {Number}\r\n\t     */\n\t\n\t\n\t    /**\r\n\t     * Adds observer to observers list.\r\n\t     *\r\n\t     * @param {ResizeObserver} observer - Observer to be added.\r\n\t     */\n\t    ResizeObserverController.prototype.connect = function connect(observer) {\n\t        if (!this.isConnected(observer)) {\n\t            this._observers.push(observer);\n\t        }\n\t\n\t        // Add listeners if they haven't been added yet.\n\t        if (!this._listenersEnabled) {\n\t            this._addListeners();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Removes observer from observers list.\r\n\t     *\r\n\t     * @param {ResizeObserver} observer - Observer to be removed.\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype.disconnect = function disconnect(observer) {\n\t        var observers = this._observers,\n\t            index = observers.indexOf(observer);\n\t\n\t        if (~index) {\n\t            observers.splice(index, 1);\n\t        }\n\t\n\t        // Remove listeners if controller\n\t        // has no connected observers.\n\t        if (!observers.length && this._listenersEnabled) {\n\t            this._removeListeners();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Tells whether provided observer is connected to controller.\r\n\t     *\r\n\t     * @param {ResizeObserver} observer - Observer to be checked.\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype.isConnected = function isConnected(observer) {\n\t        return !!~this._observers.indexOf(observer);\n\t    };\n\t\n\t    /**\r\n\t     * Updates every observer from observers list and\r\n\t     * notifies them of queued entries.\r\n\t     *\r\n\t     * @private\r\n\t     * @returns {Boolean} Returns \"true\" if any observer\r\n\t     *      has detected changes in dimensions of its' elements.\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._updateObservers = function _updateObservers() {\n\t        var hasChanges = false;\n\t\n\t        for (var _iterator = this._observers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t            var _ref;\n\t\n\t            if (_isArray) {\n\t                if (_i >= _iterator.length) break;\n\t                _ref = _iterator[_i++];\n\t            } else {\n\t                _i = _iterator.next();\n\t                if (_i.done) break;\n\t                _ref = _i.value;\n\t            }\n\t\n\t            var observer = _ref;\n\t\n\t            observer.gatherActive();\n\t\n\t            if (observer.hasActive()) {\n\t                hasChanges = true;\n\t\n\t                observer.broadcastActive();\n\t            }\n\t        }\n\t\n\t        return hasChanges;\n\t    };\n\t\n\t    /**\r\n\t     * Starts the update cycle which will run either\r\n\t     * until it detects changes in the dimensions of\r\n\t     * elements or the idle timeout is reached.\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype.runUpdates = function runUpdates() {\n\t        this._cycleStartTime = (0, _performance2.default)();\n\t        this._isCycleActive = true;\n\t\n\t        this.scheduleUpdate();\n\t    };\n\t\n\t    /**\r\n\t     * Schedules the update of observers.\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype.scheduleUpdate = function scheduleUpdate() {\n\t        // Schedule new update if it\n\t        // hasn't been scheduled already.\n\t        if (!this._isUpdateScheduled) {\n\t            this._isUpdateScheduled = true;\n\t\n\t            (0, _requestAnimationFrame2.default)(this._resolveScheduled);\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Invokes the update of observers. It may re-run the\r\n\t     * cycle if changes in observers have been detected.\r\n\t     *\r\n\t     * @private\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._resolveScheduled = function _resolveScheduled() {\n\t        var hasChanges = this._updateObservers();\n\t\n\t        this._isUpdateScheduled = false;\n\t\n\t        // Do nothing if cycle wasn't started,\n\t        // i.e. a single update was requested.\n\t        if (!this._isCycleActive) {\n\t            return;\n\t        }\n\t\n\t        // Re-start cycle so that we can catch future changes,\n\t        // e.g. when there are active CSS transitions.\n\t        if (hasChanges) {\n\t            this.runUpdates();\n\t        } else if (this._hasRemainingTime()) {\n\t            // Keep running updates if idle timeout isn't reached yet.\n\t            // This way we make it possible to adjust to delayed transitions.\n\t            this.scheduleUpdate();\n\t        } else {\n\t            // Finish update cycle.\n\t            this._endUpdates();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Tells whether the update cycle has time remaining.\r\n\t     *\r\n\t     * @private\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._hasRemainingTime = function _hasRemainingTime() {\n\t        var timePassed = (0, _performance2.default)() - this._cycleStartTime;\n\t\n\t        return this._idleTimeout - timePassed > 0;\n\t    };\n\t\n\t    /**\r\n\t     * Callback which is invoked when update cycle\r\n\t     * is finished. It may start a new cycle if continuous\r\n\t     * updates are enabled.\r\n\t     *\r\n\t     * @private\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._endUpdates = function _endUpdates() {\n\t        this._isCycleActive = false;\n\t\n\t        if (this._isCycleContinuous && this._listenersEnabled) {\n\t            this._continuousCycleHandler();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Initializes DOM listeners.\r\n\t     *\r\n\t     * @private\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._addListeners = function _addListeners() {\n\t        // Do nothing if listeners have been already added.\n\t        if (this._listenersEnabled) {\n\t            return;\n\t        }\n\t\n\t        this._listenersEnabled = true;\n\t\n\t        // Repeatable cycle is used here because the resize event may\n\t        // lead to continuous changes, e.g. when width or height of an element\n\t        // are controlled by CSS transitions.\n\t        window.addEventListener('resize', this.runUpdates);\n\t\n\t        // Fall back to an infinite cycle.\n\t        if (!mutationsSupported) {\n\t            this._isCycleContinuous = true;\n\t        } else {\n\t            // Subscribe to DOM mutations as they may lead to\n\t            // changes in dimensions of elements.\n\t            this._mutationsObserver = new MutationObserver(this._onMutation);\n\t\n\t            this._mutationsObserver.observe(document, {\n\t                attributes: true,\n\t                childList: true,\n\t                characterData: true,\n\t                subtree: true\n\t            });\n\t        }\n\t\n\t        // Don't wait for possible event that might trigger the\n\t        // update of observers and manually initiate update cycle.\n\t        if (this._isCycleContinuous) {\n\t            this.runUpdates();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Removes DOM listeners.\r\n\t     *\r\n\t     * @private\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._removeListeners = function _removeListeners() {\n\t        // Do nothing if listeners have been already removed.\n\t        if (!this._listenersEnabled) {\n\t            return;\n\t        }\n\t\n\t        window.removeEventListener('resize', this.runUpdates);\n\t\n\t        if (this._mutationsObserver) {\n\t            this._mutationsObserver.disconnect();\n\t        }\n\t\n\t        this._mutationsObserver = null;\n\t        this._listenersEnabled = false;\n\t    };\n\t\n\t    /**\r\n\t     * DOM mutations handler.\r\n\t     *\r\n\t     * @private\r\n\t     * @param {Array<MutationRecord>} entries - An array of mutation records.\r\n\t     */\n\t\n\t\n\t    ResizeObserverController.prototype._onMutation = function _onMutation(entries) {\n\t        // Check if at least one entry\n\t        // contains attributes changes.\n\t        var attrsChanged = entries.some(function (entry) {\n\t            return entry.type === 'attributes';\n\t        });\n\t\n\t        // It's expected that animations may start only\n\t        // after some attribute changes its' value.\n\t        attrsChanged ? this.runUpdates() : this.scheduleUpdate();\n\t    };\n\t\n\t    _createClass(ResizeObserverController, [{\n\t        key: 'idleTimeout',\n\t        get: function get() {\n\t            return this._idleTimeout;\n\t        }\n\t\n\t        /**\r\n\t         * Sets up new idle timeout value.\r\n\t         *\r\n\t         * @param {Number} value - New timeout value.\r\n\t         */\n\t        ,\n\t        set: function set(value) {\n\t            this._idleTimeout = value;\n\t        }\n\t\n\t        /**\r\n\t         * Tells whether continuous updates are enabled.\r\n\t         *\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'continuousUpdates',\n\t        get: function get() {\n\t            return this._isCycleContinuous;\n\t        }\n\t\n\t        /**\r\n\t         * Enables or disables continuous updates.\r\n\t         *\r\n\t         * @param {Boolean} enable - Whether to enable or disable\r\n\t         *      continuous updates. Note that the value won't be applied\r\n\t         *      if MutationObserver is not supported.\r\n\t         */\n\t        ,\n\t        set: function set(enable) {\n\t            // The state of continuous updates should not be modified\n\t            // if MutationObserver is not supported.\n\t            if (!mutationsSupported) {\n\t                return;\n\t            }\n\t\n\t            this._isCycleContinuous = enable;\n\t\n\t            // Immediately start the update cycle in order not to\n\t            // wait for a possible event that will initiate it.\n\t            if (this._listenersEnabled && enable) {\n\t                this.runUpdates();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return ResizeObserverController;\n\t}();\n\t\n\texports.default = ResizeObserverController;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\t/**\r\n\t * A shim for performance.now method which falls back\r\n\t * to Date.now if the first one is not supported.\r\n\t *\r\n\t * @returns {Timestamp}\r\n\t */\n\texports.default = function () {\n\t    if (window.performance && typeof window.performance.now === 'function') {\n\t        return function () {\n\t            return window.performance.now();\n\t        };\n\t    }\n\t\n\t    return function () {\n\t        return Date.now();\n\t    };\n\t}();\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\t/**\r\n\t * A shim for requestAnimationFrame which falls back\r\n\t * to setTimeout if the first one is not supported.\r\n\t *\r\n\t * @returns {Number} Requests' identifier.\r\n\t */\n\texports.default = function () {\n\t    if (window.requestAnimationFrame && typeof window.requestAnimationFrame === 'function') {\n\t        return window.requestAnimationFrame;\n\t    }\n\t\n\t    return function (callback) {\n\t        return setTimeout(function () {\n\t            return callback(Date.now());\n\t        }, 1000 / 60);\n\t    };\n\t}();\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _es6Collections = __webpack_require__(2);\n\t\n\tvar _ResizeObservation = __webpack_require__(7);\n\t\n\tvar _ResizeObservation2 = _interopRequireDefault(_ResizeObservation);\n\t\n\tvar _ResizeObserverEntry = __webpack_require__(8);\n\t\n\tvar _ResizeObserverEntry2 = _interopRequireDefault(_ResizeObserverEntry);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ResizeObserver = function () {\n\t    /**\r\n\t     * Creates a new instance of ResizeObserver.\r\n\t     *\r\n\t     * @param {Function} callback - Callback function which will be invoked\r\n\t     *      when one of the observed elements changes its' content rectangle.\r\n\t     * @param {ResizeObsreverController} controller - Controller instance\r\n\t     *      which is responsible for the updates of observer.\r\n\t     * @param {ResizeObserver} publicObserver - Reference\r\n\t     *      to the public ResizeObserver instance which will be passed\r\n\t     *      to callback function.\r\n\t     */\n\t    function ResizeObserver(callback, controller, publicObserver) {\n\t        _classCallCheck(this, ResizeObserver);\n\t\n\t        if (typeof callback !== 'function') {\n\t            throw new TypeError('The callback provided as parameter 1 is not a function.');\n\t        }\n\t\n\t        // Reference to the callback function.\n\t        this._callback = callback;\n\t\n\t        // A registry of ResizeObservation instances.\n\t        this._targets = new _es6Collections.Map();\n\t\n\t        // A collection of resize observations that have detected\n\t        // changes in dimensions of elements.\n\t        this._activeTargets = [];\n\t\n\t        // Reference to associated ResizeObserverController.\n\t        this._controller = controller;\n\t\n\t        // Public ResizeObserver instance which will be passed\n\t        // to callback function.\n\t        this._publicObserver = publicObserver;\n\t    }\n\t\n\t    /**\r\n\t     * Starts observing provided element.\r\n\t     *\r\n\t     * @param {Element} target - Element to be observed.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.observe = function observe(target) {\n\t        //  Throw the same errors as in a native implementation.\n\t        if (!arguments.length) {\n\t            throw new TypeError('1 argument required, but only 0 present.');\n\t        }\n\t\n\t        if (!(target instanceof Element)) {\n\t            throw new TypeError('parameter 1 is not of type \"Element\".');\n\t        }\n\t\n\t        var targets = this._targets;\n\t\n\t        // Do nothing if element is already being observed.\n\t        if (targets.has(target)) {\n\t            return;\n\t        }\n\t\n\t        targets.set(target, new _ResizeObservation2.default(target));\n\t\n\t        // Add observer to controller if\n\t        // it hasn't been connected yet.\n\t        if (!this._controller.isConnected(this)) {\n\t            this._controller.connect(this);\n\t        }\n\t\n\t        // Update observations.\n\t        this._controller.runUpdates();\n\t    };\n\t\n\t    /**\r\n\t     * Stops observing provided element.\r\n\t     *\r\n\t     * @param {Element} target - Element to stop observing.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.unobserve = function unobserve(target) {\n\t        //  Throw the same errors as in a native implementation.\n\t        if (!arguments.length) {\n\t            throw new TypeError('1 argument required, but only 0 present.');\n\t        }\n\t\n\t        if (!(target instanceof Element)) {\n\t            throw new TypeError('parameter 1 is not of type \"Element\".');\n\t        }\n\t\n\t        var targets = this._targets;\n\t\n\t        // Do nothing if element is not being observed.\n\t        if (!targets.has(target)) {\n\t            return;\n\t        }\n\t\n\t        // Remove element and associated with\n\t        // it ResizeObsrvation instance from registry.\n\t        targets.delete(target);\n\t\n\t        // Set back the initial state if\n\t        // there is nothing to observe.\n\t        if (!targets.size) {\n\t            this.disconnect();\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Stops observing all elements and\r\n\t     * clears the observations list.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.disconnect = function disconnect() {\n\t        this.clearActive();\n\t        this._targets.clear();\n\t        this._controller.disconnect(this);\n\t    };\n\t\n\t    /**\r\n\t     * Invokes initial callback function with a list\r\n\t     * of ResizeObserverEntry instances collected from\r\n\t     * active resize observations.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.broadcastActive = function broadcastActive() {\n\t        // Do nothing if observer doesn't\n\t        // have active observations.\n\t        if (!this.hasActive()) {\n\t            return;\n\t        }\n\t\n\t        var publicObserver = this._publicObserver;\n\t\n\t        // Create ResizeObserverEntry instance\n\t        // for every active observation.\n\t        var entries = this._activeTargets.map(function (observation) {\n\t            return new _ResizeObserverEntry2.default(observation.target, observation.broadcastRect());\n\t        });\n\t\n\t        this.clearActive();\n\t\n\t        this._callback.call(publicObserver, entries, publicObserver);\n\t    };\n\t\n\t    /**\r\n\t     * Clears the collection of pending/active observations.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.clearActive = function clearActive() {\n\t        this._activeTargets.splice(0);\n\t    };\n\t\n\t    /**\r\n\t     * Tells whether the observer has\r\n\t     * pending observations.\r\n\t     *\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.hasActive = function hasActive() {\n\t        return !!this._activeTargets.length;\n\t    };\n\t\n\t    /**\r\n\t     * Clears an array of previously collected active observations\r\n\t     * and collects observation instances whose associated element\r\n\t     * has changes in its' content rectangle.\r\n\t     */\n\t\n\t\n\t    ResizeObserver.prototype.gatherActive = function gatherActive() {\n\t        this.clearActive();\n\t\n\t        var activeTargets = this._activeTargets;\n\t\n\t        this._targets.forEach(function (observation) {\n\t            if (observation.isActive()) {\n\t                activeTargets.push(observation);\n\t            }\n\t        });\n\t    };\n\t\n\t    return ResizeObserver;\n\t}();\n\t\n\texports.default = ResizeObserver;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Placeholder of a content rectangle.\n\tvar emptyRect = createContentRect(0, 0, 0, 0);\n\t\n\t/**\r\n\t * Extracts computed styles of provided element.\r\n\t *\r\n\t * @param {Element} target\r\n\t * @returns {CSSStyleDeclaration}\r\n\t */\n\tfunction getStyles(target) {\n\t    return window.getComputedStyle(target);\n\t}\n\t\n\t/**\r\n\t * Converts provided string defined\r\n\t * in q form of '{{value}}px' to number.\r\n\t *\r\n\t * @param {String} value\r\n\t * @returns {Number}\r\n\t */\n\tfunction pixelsToNumber(value) {\n\t    return parseFloat(value) || 0;\n\t}\n\t\n\t/**\r\n\t * Extracts borders size from provided styles.\r\n\t *\r\n\t * @param {CSSStyleDeclaration} styles\r\n\t * @param {...String} positions - Borders positions (top, right, ...)\r\n\t * @returns {Number}\r\n\t */\n\tfunction getBordersSize(styles) {\n\t    for (var _len = arguments.length, positions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        positions[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    return positions.reduce(function (size, pos) {\n\t        var value = styles['border-' + pos + '-width'];\n\t\n\t        return size + pixelsToNumber(value);\n\t    }, 0);\n\t}\n\t\n\t/**\r\n\t *  Extracts paddings sizes from provided styles.\r\n\t *\r\n\t * @param {CSSStyleDeclaration} styles\r\n\t * @returns {Object} Paddings box.\r\n\t */\n\tfunction getPaddings(styles) {\n\t    var boxKeys = ['top', 'right', 'bottom', 'left'];\n\t    var paddings = {};\n\t\n\t    for (var _iterator = boxKeys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t        var _ref;\n\t\n\t        if (_isArray) {\n\t            if (_i >= _iterator.length) break;\n\t            _ref = _iterator[_i++];\n\t        } else {\n\t            _i = _iterator.next();\n\t            if (_i.done) break;\n\t            _ref = _i.value;\n\t        }\n\t\n\t        var key = _ref;\n\t\n\t        var value = styles['padding-' + key];\n\t\n\t        paddings[key] = pixelsToNumber(value);\n\t    }\n\t\n\t    return paddings;\n\t}\n\t\n\t/**\r\n\t * Creates content rectangle based on the provided dimensions\r\n\t * and the top/left positions.\r\n\t *\r\n\t * @param {Number} width - Width of rectangle.\r\n\t * @param {Number} height - Height of rectangle.\r\n\t * @param {Number} top - Top position.\r\n\t * @param {Number} left - Left position.\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction createContentRect(width, height, top, left) {\n\t    return {\n\t        width: width, height: height, top: top,\n\t        right: width + left,\n\t        bottom: height + top,\n\t        left: left\n\t    };\n\t}\n\t\n\t/**\r\n\t * Calculates content rectangle of provided SVG element.\r\n\t *\r\n\t * @param {SVGElement} target - Element whose content\r\n\t *      rectangle needs to be calculated.\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction getSVGContentRect(target) {\n\t    var bbox = target.getBBox();\n\t\n\t    return createContentRect(bbox.width, bbox.height, 0, 0);\n\t}\n\t\n\t/**\r\n\t * Calculates content rectangle of a root element.\r\n\t *\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction getDocElementRect() {\n\t    // Neither scroll[Width/Height] nor offset[Width/Height] can be used to define\n\t    // content dimensions as they give inconsistent results across different browser.\n\t    // E.g. in Internet Explorer 10 and lower these properties can't be less than\n\t    // client dimensions (same thing with the \"getBoundingClientRect\" method).\n\t    // And Firefox has the same behavior with its \"scroll\" properties.\n\t    var styles = getStyles(document.documentElement);\n\t\n\t    var width = pixelsToNumber(styles.width);\n\t    var height = pixelsToNumber(styles.height);\n\t\n\t    return createContentRect(width, height, 0, 0);\n\t}\n\t\n\t/**\r\n\t * Calculates content rectangle of provided HTMLElement.\r\n\t *\r\n\t * @param {HTMLElement} target - Element whose content\r\n\t *      rectangle needs to be calculated.\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction getHTMLElementContentRect(target) {\n\t    // Client width & height properties can't be\n\t    // used exclusively as they provide rounded values.\n\t    var clientWidth = target.clientWidth;\n\t    var clientHeight = target.clientHeight;\n\t\n\t    // By this condition we can catch all non-replaced inline, hidden and detached\n\t    // elements. Though elements whose width & height are less than 0.5 will\n\t    // be discarded as well.\n\t    //\n\t    // Without it we would need to implement separate methods for each of\n\t    // those cases and it's not possible to perform a precise and performance\n\t    // effective test for hidden elements. E.g. even jQuerys' ':visible' filter\n\t    // gives wrong results for elements whose width & height are less\n\t    // than 0.5.\n\t    if (!clientWidth && !clientHeight) {\n\t        return emptyRect;\n\t    }\n\t\n\t    var styles = getStyles(target);\n\t    var paddings = getPaddings(styles);\n\t    var horizPad = paddings.left + paddings.right;\n\t    var vertPad = paddings.top + paddings.bottom;\n\t\n\t    // Computed styles of width & height are being used because they\n\t    // are the only dimensions available to JS that contain non-rounded values. It could\n\t    // have been possible to utilize getBoundingClientRect if only its' data wasn't\n\t    // affected by CSS transformations let alone paddings, borders and scroll bars.\n\t    var width = pixelsToNumber(styles.width),\n\t        height = pixelsToNumber(styles.height);\n\t\n\t    // Width & height include paddings and borders\n\t    // when 'border-box' box model is applied (except for IE).\n\t    if (styles.boxSizing === 'border-box') {\n\t        // Following conditions are required to handle Internet Explorer which\n\t        // doesn't include paddings and borders to computed CSS dimensions.\n\t        //\n\t        // We can say that if CSS dimensions + paddings are equal to the \"client\" properties\n\t        // then it's either IE, and thus we don't need to subtract anything, or\n\t        // an element merely doesn't have paddings/borders styles.\n\t        if (Math.round(width + horizPad) !== clientWidth) {\n\t            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n\t        }\n\t\n\t        if (Math.round(height + vertPad) !== clientHeight) {\n\t            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n\t        }\n\t    }\n\t\n\t    // In some browsers (only in Firefox, actually) CSS width & height\n\t    // include scroll bars size which can be removed at this step as scroll bars\n\t    // are the only difference between rounded dimensions + paddings\n\t    // and \"client\" properties, though that is not always true in Chrome.\n\t    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n\t    var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\t\n\t    // Chrome has a rather weird rounding of \"client\" properties.\n\t    // E.g. for an element whose content width is 314.2px it sometimes\n\t    // gives the client width of 315px and for the width of 314.7px\n\t    // it may give 314px. And it doesn't happen all the time.\n\t    // This kind of difference needs to be ignored.\n\t    if (Math.abs(vertScrollbar) !== 1) {\n\t        width -= vertScrollbar;\n\t    }\n\t\n\t    if (Math.abs(horizScrollbar) !== 1) {\n\t        height -= horizScrollbar;\n\t    }\n\t\n\t    return createContentRect(width, height, paddings.top, paddings.left);\n\t}\n\t\n\t/**\r\n\t * Checks whether provided element\r\n\t * is an instance of SVGElement.\r\n\t *\r\n\t * @param {Element} target - Element to be checked.\r\n\t * @returns {Boolean}\r\n\t */\n\tfunction isSVGElement(target) {\n\t    return target instanceof window.SVGElement;\n\t}\n\t\n\t/**\r\n\t * Checks whether provided element is\r\n\t * a document element (root element of a document).\r\n\t *\r\n\t * @param {Element} target - Element to be checked.\r\n\t * @returns {Boolean}\r\n\t */\n\tfunction isDocumentElement(target) {\n\t    return target === document.documentElement;\n\t}\n\t\n\t/**\r\n\t * Calculates an appropriate content rectangle\r\n\t * for provided html or svg element.\r\n\t *\r\n\t * @param {Element} target - Element whose content rectangle\r\n\t *      needs to be calculated.\r\n\t * @returns {ClientRect}\r\n\t */\n\tfunction getContentRect(target) {\n\t    if (isSVGElement(target)) {\n\t        return getSVGContentRect(target);\n\t    }\n\t\n\t    if (isDocumentElement(target)) {\n\t        return getDocElementRect();\n\t    }\n\t\n\t    return getHTMLElementContentRect(target);\n\t}\n\t\n\t/**\r\n\t * Class that is responsible for computations of the\r\n\t * content rectangle of provided DOM element and\r\n\t * for keeping track of its' changes.\r\n\t */\n\t\n\tvar ResizeObservation = function () {\n\t    /**\r\n\t     * Creates an instance of ResizeObservation.\r\n\t     *\r\n\t     * @param {Element} target - Element whose content\r\n\t     *      rectangle needs to be observed.\r\n\t     */\n\t    function ResizeObservation(target) {\n\t        _classCallCheck(this, ResizeObservation);\n\t\n\t        this.target = target;\n\t\n\t        // Keeps reference to the last observed content rectangle.\n\t        this._contentRect = emptyRect;\n\t\n\t        // Broadcasted width of content rectangle.\n\t        this.broadcastWidth = 0;\n\t\n\t        // Broadcasted height of content rectangle.\n\t        this.broadcastHeight = 0;\n\t    }\n\t\n\t    /**\r\n\t     * Updates 'broadcastWidth' and 'broadcastHeight'\r\n\t     * properties with a data from the corresponding\r\n\t     * properties of the last observed content rectangle.\r\n\t     *\r\n\t     * @returns {ClientRect} Last observed content rectangle.\r\n\t     */\n\t\n\t\n\t    ResizeObservation.prototype.broadcastRect = function broadcastRect() {\n\t        var rect = this._contentRect;\n\t\n\t        this.broadcastWidth = rect.width;\n\t        this.broadcastHeight = rect.height;\n\t\n\t        return rect;\n\t    };\n\t\n\t    /**\r\n\t     * Updates content rectangle and tells whether its'\r\n\t     * width or height properties have changed since\r\n\t     * the last broadcast.\r\n\t     *\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    ResizeObservation.prototype.isActive = function isActive() {\n\t        var rect = getContentRect(this.target);\n\t\n\t        this._contentRect = rect;\n\t\n\t        return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n\t    };\n\t\n\t    return ResizeObservation;\n\t}();\n\t\n\texports.default = ResizeObservation;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ResizeObserverEntry =\n\t/**\r\n\t * Creates an instance of ResizeObserverEntry.\r\n\t *\r\n\t * @param {Element} target - Element that is being observed.\r\n\t * @param {ClientRect} rectData - Data of the elements' content rectangle.\r\n\t */\n\tfunction ResizeObserverEntry(target, rectData) {\n\t    _classCallCheck(this, ResizeObserverEntry);\n\t\n\t    // Content rectangle needs to be an instance\n\t    // of ClientRect if it's available.\n\t    var rectInterface = window.ClientRect ? ClientRect.prototype : Object.prototype;\n\t\n\t    // According to the specification following properties\n\t    // are not writable and in native implementation\n\t    // they are also not enumerable.\n\t    var contentRect = Object.create(rectInterface, {\n\t        width: { value: rectData.width },\n\t        height: { value: rectData.height },\n\t        top: { value: rectData.top },\n\t        right: { value: rectData.right },\n\t        bottom: { value: rectData.bottom },\n\t        left: { value: rectData.left }\n\t    });\n\t\n\t    Object.defineProperties(this, {\n\t        target: { value: target },\n\t        contentRect: { value: contentRect }\n\t    });\n\t};\n\t\n\texports.default = ResizeObserverEntry;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t// randomColor by David Merfield under the CC0 license\n\t// https://github.com/davidmerfield/randomColor/\n\t\n\t;(function (root, factory) {\n\t\n\t  // Support AMD\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t    // Support CommonJS\n\t  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n\t    var randomColor = factory();\n\t\n\t    // Support NodeJS & Component, which allow module.exports to be a function\n\t    if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module && module.exports) {\n\t      exports = module.exports = randomColor;\n\t    }\n\t\n\t    // Support CommonJS 1.1.1 spec\n\t    exports.randomColor = randomColor;\n\t\n\t    // Support vanilla script loading\n\t  } else {\n\t    root.randomColor = factory();\n\t  }\n\t})(undefined, function () {\n\t\n\t  // Seed to get repeatable colors\n\t  var seed = null;\n\t\n\t  // Shared color dictionary\n\t  var colorDictionary = {};\n\t\n\t  // Populate the color dictionary\n\t  loadColorBounds();\n\t\n\t  var randomColor = function randomColor(options) {\n\t\n\t    options = options || {};\n\t\n\t    // Check if there is a seed and ensure it's an\n\t    // integer. Otherwise, reset the seed value.\n\t    if (options.seed && options.seed === parseInt(options.seed, 10)) {\n\t      seed = options.seed;\n\t\n\t      // A string was passed as a seed\n\t    } else if (typeof options.seed === 'string') {\n\t      seed = stringToInteger(options.seed);\n\t\n\t      // Something was passed as a seed but it wasn't an integer or string\n\t    } else if (options.seed !== undefined && options.seed !== null) {\n\t      throw new TypeError('The seed value must be an integer or string');\n\t\n\t      // No seed, reset the value outside.\n\t    } else {\n\t      seed = null;\n\t    }\n\t\n\t    var H, S, B;\n\t\n\t    // Check if we need to generate multiple colors\n\t    if (options.count !== null && options.count !== undefined) {\n\t\n\t      var totalColors = options.count,\n\t          colors = [];\n\t\n\t      options.count = null;\n\t\n\t      while (totalColors > colors.length) {\n\t\n\t        // Since we're generating multiple colors,\n\t        // incremement the seed. Otherwise we'd just\n\t        // generate the same color each time...\n\t        if (seed && options.seed) options.seed += 1;\n\t\n\t        colors.push(randomColor(options));\n\t      }\n\t\n\t      options.count = totalColors;\n\t\n\t      return colors;\n\t    }\n\t\n\t    // First we pick a hue (H)\n\t    H = pickHue(options);\n\t\n\t    // Then use H to determine saturation (S)\n\t    S = pickSaturation(H, options);\n\t\n\t    // Then use S and H to determine brightness (B).\n\t    B = pickBrightness(H, S, options);\n\t\n\t    // Then we return the HSB color in the desired format\n\t    return setFormat([H, S, B], options);\n\t  };\n\t\n\t  function pickHue(options) {\n\t\n\t    var hueRange = getHueRange(options.hue),\n\t        hue = randomWithin(hueRange);\n\t\n\t    // Instead of storing red as two seperate ranges,\n\t    // we group them, using negative numbers\n\t    if (hue < 0) {\n\t      hue = 360 + hue;\n\t    }\n\t\n\t    return hue;\n\t  }\n\t\n\t  function pickSaturation(hue, options) {\n\t\n\t    if (options.luminosity === 'random') {\n\t      return randomWithin([0, 100]);\n\t    }\n\t\n\t    if (options.hue === 'monochrome') {\n\t      return 0;\n\t    }\n\t\n\t    var saturationRange = getSaturationRange(hue);\n\t\n\t    var sMin = saturationRange[0],\n\t        sMax = saturationRange[1];\n\t\n\t    switch (options.luminosity) {\n\t\n\t      case 'bright':\n\t        sMin = 55;\n\t        break;\n\t\n\t      case 'dark':\n\t        sMin = sMax - 10;\n\t        break;\n\t\n\t      case 'light':\n\t        sMax = 55;\n\t        break;\n\t    }\n\t\n\t    return randomWithin([sMin, sMax]);\n\t  }\n\t\n\t  function pickBrightness(H, S, options) {\n\t\n\t    var bMin = getMinimumBrightness(H, S),\n\t        bMax = 100;\n\t\n\t    switch (options.luminosity) {\n\t\n\t      case 'dark':\n\t        bMax = bMin + 20;\n\t        break;\n\t\n\t      case 'light':\n\t        bMin = (bMax + bMin) / 2;\n\t        break;\n\t\n\t      case 'random':\n\t        bMin = 0;\n\t        bMax = 100;\n\t        break;\n\t    }\n\t\n\t    return randomWithin([bMin, bMax]);\n\t  }\n\t\n\t  function setFormat(hsv, options) {\n\t\n\t    switch (options.format) {\n\t\n\t      case 'hsvArray':\n\t        return hsv;\n\t\n\t      case 'hslArray':\n\t        return HSVtoHSL(hsv);\n\t\n\t      case 'hsl':\n\t        var hsl = HSVtoHSL(hsv);\n\t        return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\n\t\n\t      case 'hsla':\n\t        var hslColor = HSVtoHSL(hsv);\n\t        return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + Math.random() + ')';\n\t\n\t      case 'rgbArray':\n\t        return HSVtoRGB(hsv);\n\t\n\t      case 'rgb':\n\t        var rgb = HSVtoRGB(hsv);\n\t        return 'rgb(' + rgb.join(', ') + ')';\n\t\n\t      case 'rgba':\n\t        var rgbColor = HSVtoRGB(hsv);\n\t        return 'rgba(' + rgbColor.join(', ') + ', ' + Math.random() + ')';\n\t\n\t      default:\n\t        return HSVtoHex(hsv);\n\t    }\n\t  }\n\t\n\t  function getMinimumBrightness(H, S) {\n\t\n\t    var lowerBounds = getColorInfo(H).lowerBounds;\n\t\n\t    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\t\n\t      var s1 = lowerBounds[i][0],\n\t          v1 = lowerBounds[i][1];\n\t\n\t      var s2 = lowerBounds[i + 1][0],\n\t          v2 = lowerBounds[i + 1][1];\n\t\n\t      if (S >= s1 && S <= s2) {\n\t\n\t        var m = (v2 - v1) / (s2 - s1),\n\t            b = v1 - m * s1;\n\t\n\t        return m * S + b;\n\t      }\n\t    }\n\t\n\t    return 0;\n\t  }\n\t\n\t  function getHueRange(colorInput) {\n\t\n\t    if (typeof parseInt(colorInput) === 'number') {\n\t\n\t      var number = parseInt(colorInput);\n\t\n\t      if (number < 360 && number > 0) {\n\t        return [number, number];\n\t      }\n\t    }\n\t\n\t    if (typeof colorInput === 'string') {\n\t\n\t      if (colorDictionary[colorInput]) {\n\t        var color = colorDictionary[colorInput];\n\t        if (color.hueRange) {\n\t          return color.hueRange;\n\t        }\n\t      }\n\t    }\n\t\n\t    return [0, 360];\n\t  }\n\t\n\t  function getSaturationRange(hue) {\n\t    return getColorInfo(hue).saturationRange;\n\t  }\n\t\n\t  function getColorInfo(hue) {\n\t\n\t    // Maps red colors to make picking hue easier\n\t    if (hue >= 334 && hue <= 360) {\n\t      hue -= 360;\n\t    }\n\t\n\t    for (var colorName in colorDictionary) {\n\t      var color = colorDictionary[colorName];\n\t      if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n\t        return colorDictionary[colorName];\n\t      }\n\t    }return 'Color not found';\n\t  }\n\t\n\t  function randomWithin(range) {\n\t    if (seed === null) {\n\t      return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\n\t    } else {\n\t      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n\t      var max = range[1] || 1;\n\t      var min = range[0] || 0;\n\t      seed = (seed * 9301 + 49297) % 233280;\n\t      var rnd = seed / 233280.0;\n\t      return Math.floor(min + rnd * (max - min));\n\t    }\n\t  }\n\t\n\t  function HSVtoHex(hsv) {\n\t\n\t    var rgb = HSVtoRGB(hsv);\n\t\n\t    function componentToHex(c) {\n\t      var hex = c.toString(16);\n\t      return hex.length == 1 ? '0' + hex : hex;\n\t    }\n\t\n\t    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\t\n\t    return hex;\n\t  }\n\t\n\t  function defineColor(name, hueRange, lowerBounds) {\n\t\n\t    var sMin = lowerBounds[0][0],\n\t        sMax = lowerBounds[lowerBounds.length - 1][0],\n\t        bMin = lowerBounds[lowerBounds.length - 1][1],\n\t        bMax = lowerBounds[0][1];\n\t\n\t    colorDictionary[name] = {\n\t      hueRange: hueRange,\n\t      lowerBounds: lowerBounds,\n\t      saturationRange: [sMin, sMax],\n\t      brightnessRange: [bMin, bMax]\n\t    };\n\t  }\n\t\n\t  function loadColorBounds() {\n\t\n\t    defineColor('monochrome', null, [[0, 0], [100, 0]]);\n\t\n\t    defineColor('red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\n\t\n\t    defineColor('orange', [19, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\n\t\n\t    defineColor('yellow', [47, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\n\t\n\t    defineColor('green', [63, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\n\t\n\t    defineColor('blue', [179, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\n\t\n\t    defineColor('purple', [258, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\n\t\n\t    defineColor('pink', [283, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\n\t  }\n\t\n\t  function HSVtoRGB(hsv) {\n\t\n\t    // this doesn't work for the values of 0 and 360\n\t    // here's the hacky fix\n\t    var h = hsv[0];\n\t    if (h === 0) {\n\t      h = 1;\n\t    }\n\t    if (h === 360) {\n\t      h = 359;\n\t    }\n\t\n\t    // Rebase the h,s,v values\n\t    h = h / 360;\n\t    var s = hsv[1] / 100,\n\t        v = hsv[2] / 100;\n\t\n\t    var h_i = Math.floor(h * 6),\n\t        f = h * 6 - h_i,\n\t        p = v * (1 - s),\n\t        q = v * (1 - f * s),\n\t        t = v * (1 - (1 - f) * s),\n\t        r = 256,\n\t        g = 256,\n\t        b = 256;\n\t\n\t    switch (h_i) {\n\t      case 0:\n\t        r = v;g = t;b = p;break;\n\t      case 1:\n\t        r = q;g = v;b = p;break;\n\t      case 2:\n\t        r = p;g = v;b = t;break;\n\t      case 3:\n\t        r = p;g = q;b = v;break;\n\t      case 4:\n\t        r = t;g = p;b = v;break;\n\t      case 5:\n\t        r = v;g = p;b = q;break;\n\t    }\n\t\n\t    var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n\t    return result;\n\t  }\n\t\n\t  function HSVtoHSL(hsv) {\n\t    var h = hsv[0],\n\t        s = hsv[1] / 100,\n\t        v = hsv[2] / 100,\n\t        k = (2 - s) * v;\n\t\n\t    return [h, Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100, k / 2 * 100];\n\t  }\n\t\n\t  function stringToInteger(string) {\n\t    var total = 0;\n\t    for (var i = 0; i !== string.length; i++) {\n\t      if (total >= Number.MAX_SAFE_INTEGER) break;\n\t      total += string.charCodeAt(i);\n\t    }\n\t    return total;\n\t  }\n\t\n\t  return randomColor;\n\t});\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7ba79c97372a3e94ef68\n **/","// We need to use a polyfill itself here,\r\n// not its' possible native implementation.\r\nimport ResizeObserver from 'resize-observer-polyfill/src/ResizeObserver';\r\n\r\nimport randomColor from 'randomcolor';\r\n\r\nconst hues = [\r\n    'red',\r\n    'pink',\r\n    'blue',\r\n    'orange',\r\n    'purple',\r\n    'monochrome'\r\n];\r\n\r\nlet colorData = {\r\n    luminosity: 'light',\r\n    hue: hues[getRandomInt(0, 5)]\r\n};\r\n\r\nconst observer = new ResizeObserver(entries => {\r\n    for (const entry of entries) {\r\n        const rect = entry.contentRect;\r\n        const dimensionsStr = `${rect.width.toFixed(2)} x ${rect.height.toFixed(2)}`;\r\n\r\n        entry.target.firstElementChild.textContent = dimensionsStr;\r\n    }\r\n});\r\n\r\nlet index = 0;\r\nlet queue = [];\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction updateColorData() {\r\n    colorData.hue = hues[getRandomInt(0, 5)];\r\n}\r\n\r\nfunction generateColor() {\r\n    return randomColor(colorData);\r\n}\r\n\r\nfunction toArray(collection) {\r\n    return Array.prototype.slice.call(collection);\r\n}\r\n\r\nfunction generateElements(container, levels, items = 4) {\r\n    let index = items;\r\n\r\n    levels--;\r\n\r\n    while (index--) {\r\n        let className = 'block';\r\n        const block = document.createElement('div');\r\n\r\n        if (levels) {\r\n            className += ' parent';\r\n\r\n            generateElements(block, levels, items);\r\n        } else {\r\n            className += ' leaf';\r\n\r\n            block.innerHTML = '<span class=\"dimen\"></span>';\r\n            block.style.backgroundColor = generateColor();\r\n        }\r\n\r\n        block.className = className;\r\n\r\n        container.appendChild(block);\r\n    }\r\n}\r\n\r\ngenerateElements(document.getElementById('container'), 2);\r\n\r\nfunction populateQueue() {\r\n    index = 0;\r\n    queue = toArray(document.querySelectorAll('.block'));\r\n\r\n    updateColorData();\r\n\r\n    requestAnimationFrame(resolveNextItem);\r\n}\r\n\r\nfunction resolveNextItem() {\r\n    const block = queue.shift();\r\n\r\n    if (!block) {\r\n        setTimeout(populateQueue, 2500)\r\n\r\n        return;\r\n    }\r\n\r\n    if (!index || index === 2) {\r\n        block.style.maxWidth = getRandomInt(30, 50) + '%';\r\n\r\n        if (index === 2) {\r\n            block.style.minHeight = getRandomInt(0, 80) + '%';\r\n        }\r\n    }\r\n\r\n    if (~block.className.indexOf('leaf')) {\r\n        block.style.backgroundColor = generateColor();\r\n    }\r\n\r\n    if (++index === 4) {\r\n        index = 0;\r\n    }\r\n\r\n    requestAnimationFrame(resolveNextItem);\r\n}\r\n\r\n\r\nfor (const leaf of toArray(document.querySelectorAll('.leaf'))) {\r\n    observer.observe(leaf);\r\n}\r\n\r\nsetTimeout(populateQueue, 2000);\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/app.js\n **/","import {WeakMap} from './shims/es6-collections';\r\nimport ResizeObserverController from './ResizeObserverController';\r\nimport _ResizeObserver from './_ResizeObserver';\r\n\r\n// Controller which will be assigned to all instances of ResizeObserver.\r\nconst controller = new ResizeObserverController();\r\n\r\n// Registry of internal observers.\r\nconst observers = new WeakMap();\r\n\r\n/**\r\n * ResizeObservers' \"Proxy\" class which is meant to hide private\r\n * properties and methods from public instances.\r\n *\r\n * Additionally it implements \"idleTimeout\" and \"continuousUpdates\" static property\r\n * accessors to give a control over the behavior of ResizeObserverController\r\n * instance. Changes made to these properties will affect all future and\r\n * existing observers.\r\n */\r\nclass ResizeObserver {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {Function} callback - Callback which will\r\n     *      be invoked when dimensions of one of the\r\n     *      observed elements have been changed.\r\n     */\r\n    constructor(callback) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n\r\n        const observer = new _ResizeObserver(callback, controller, this);\r\n\r\n        // Register an internal observer.\r\n        observers.set(this, observer);\r\n    }\r\n\r\n    /**\r\n     * Extracts controllers' idle timeout value.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    static get idleTimeout() {\r\n        return controller.idleTimeout;\r\n    }\r\n\r\n    /**\r\n     * Sets up new idle timeout.\r\n     *\r\n     * @param {Number} value - New timeout value.\r\n     */\r\n    static set idleTimeout(value) {\r\n        if (typeof value !== 'number') {\r\n            throw new TypeError('type of \"idleTimeout\" value must be a number.');\r\n        }\r\n\r\n        if (typeof value < 0) {\r\n            throw new TypeError('\"idleTimeout\" value must be greater than 0.');\r\n        }\r\n\r\n        controller.idleTimeout = value;\r\n    }\r\n\r\n    /**\r\n     * Tells whether continuous updates are enabled.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    static get continuousUpdates() {\r\n        return controller.continuousUpdates;\r\n    }\r\n\r\n    /**\r\n     * Enables or disables continuous updates.\r\n     *\r\n     * @param {Boolean} value - Whether to enable or disable\r\n     *      continuous updates.\r\n     */\r\n    static set continuousUpdates(value) {\r\n        if (typeof value !== 'boolean') {\r\n            throw new TypeError('type of \"continuousUpdates\" value must be a boolean.');\r\n        }\r\n\r\n        controller.continuousUpdates = value;\r\n    }\r\n}\r\n\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(method => {\r\n    ResizeObserver.prototype[method] = function () {\r\n        return observers.get(this)[method](...arguments);\r\n    };\r\n});\r\n\r\nexport default ResizeObserver;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/resize-observer-polyfill/src/ResizeObserver.js\n **/","/**\r\n * A collection of shims that provided minimal\r\n * support of WeakMap and Map classes.\r\n *\r\n * These implementations are not meant to be used outside of\r\n * ResizeObserver modules as they cover only a limited range\r\n * of use cases.\r\n */\r\n\r\n/* eslint-disable require-jsdoc */\r\nconst hasNativeCollections =\r\n    typeof window.WeakMap === 'function' &&\r\n    typeof window.Map === 'function';\r\n\r\nconst WeakMap = (() => {\r\n    if (hasNativeCollections) {\r\n        return window.WeakMap;\r\n    }\r\n\r\n    function getIndex(arr, key) {\r\n        let result = -1;\r\n\r\n        arr.some((entry, index) => {\r\n            let matches = entry[0] === key;\r\n\r\n            if (matches) {\r\n                result = index;\r\n            }\r\n\r\n            return matches;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return class {\r\n        constructor() {\r\n            this.__entries__ = [];\r\n        }\r\n\r\n        get(key) {\r\n            let index = getIndex(this.__entries__, key);\r\n\r\n            return this.__entries__[index][1];\r\n        }\r\n\r\n        set(key, value) {\r\n            let index = getIndex(this.__entries__, key);\r\n\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            } else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        }\r\n\r\n        delete(key) {\r\n            let entries = this.__entries__,\r\n                index = getIndex(entries, key);\r\n\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        has(key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        }\r\n    };\r\n})();\r\n\r\nconst Map = (() => {\r\n    if (hasNativeCollections) {\r\n        return window.Map;\r\n    }\r\n\r\n    return class extends WeakMap {\r\n        get size() {\r\n            return this.__entries__.length;\r\n        }\r\n\r\n        clear() {\r\n            this.__entries__.splice(0, this.__entries__.length);\r\n        }\r\n\r\n        entries() {\r\n            return this.__entries__.slice();\r\n        }\r\n\r\n        keys() {\r\n            return this.__entries__.map(entry => entry[0]);\r\n        }\r\n\r\n        values() {\r\n            return this.__entries__.map(entry => entry[1]);\r\n        }\r\n\r\n        forEach(callback, ctx = null) {\r\n            for (const entry of this.__entries__) {\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nexport {Map, WeakMap};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/resize-observer-polyfill/src/shims/es6-collections.js\n **/","import now from './shims/performance.now';\r\nimport requestAnimFrame from './shims/requestAnimationFrame';\r\n\r\nconst mutationsSupported = typeof window.MutationObserver === 'function';\r\n\r\n/**\r\n * Creates a wrapper function which ensures that\r\n * provided callback will be invoked only once\r\n * during the specified delay.\r\n *\r\n * @param {Function} callback - Function to be invoked.\r\n * @param {Number} [delay = 0] - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction debounce(callback, delay = 0) {\r\n    let timeoutID = false;\r\n\r\n    return function (...args) {\r\n        if (timeoutID !== false) {\r\n            clearTimeout(timeoutID);\r\n        }\r\n\r\n        timeoutID = setTimeout(() => {\r\n            timeoutID = false;\r\n\r\n            /* eslint-disable no-invalid-this */\r\n            callback.apply(this, args);\r\n\r\n            /* eslint-enable no-invalid-this */\r\n        }, delay);\r\n    };\r\n}\r\n\r\n/**\r\n * Controller class which handles updates of ResizeObserver instances.\r\n * It's meant to decide when and for how long it's necessary to run updates by listening to the windows\r\n * \"resize\" event along with a tracking of DOM mutations (nodes removal, changes of attributes, etc.).\r\n *\r\n * Transitions and animations are handled by running a repeatable update cycle either until the dimensions\r\n * of observed elements are changing or the timeout is reached (default timeout is 50 milliseconds).\r\n * Timeout value can be manually increased if transitions have a delay.\r\n *\r\n * Continuous update cycle will be used automatically in case if MutationObserver is not supported.\r\n */\r\nexport default class ResizeObserverController {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @param {Number} [idleTimeout = 0] - Idle timeout value.\r\n     * @param {Boolean} [continuousUpdates = false] - Whether to use a continuous update cycle.\r\n     */\r\n    constructor(idleTimeout = 50, continuousUpdates = false) {\r\n        this._idleTimeout = idleTimeout;\r\n        this._isCycleContinuous = continuousUpdates;\r\n\r\n        this._cycleStartTime = 0;\r\n\r\n        // Indicates whether the update cycle is currently running.\r\n        this._isCycleActive = false;\r\n\r\n        // Indicates whether the update of observers is scheduled.\r\n        this._isUpdateScheduled = false;\r\n\r\n        // Indicates whether DOM listeners have been added.\r\n        this._listenersEnabled = false;\r\n\r\n        // Keeps reference to the instance of MutationObserver.\r\n        this._mutationsObserver = null;\r\n\r\n        // A list of connected observers.\r\n        this._observers = [];\r\n\r\n        // Fix value of \"this\" binding for the following methods.\r\n        this.runUpdates = this.runUpdates.bind(this);\r\n        this._onMutation = this._onMutation.bind(this);\r\n        this._resolveScheduled = this._resolveScheduled.bind(this);\r\n\r\n        // Function that will be invoked to re-run the\r\n        // update cycle if continuous cycles are enabled.\r\n        this._continuousCycleHandler = debounce(this.runUpdates, 100);\r\n    }\r\n\r\n    /**\r\n     * Returns current idle timeout value.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get idleTimeout() {\r\n        return this._idleTimeout;\r\n    }\r\n\r\n    /**\r\n     * Sets up new idle timeout value.\r\n     *\r\n     * @param {Number} value - New timeout value.\r\n     */\r\n    set idleTimeout(value) {\r\n        this._idleTimeout = value;\r\n    }\r\n\r\n    /**\r\n     * Tells whether continuous updates are enabled.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    get continuousUpdates() {\r\n        return this._isCycleContinuous;\r\n    }\r\n\r\n    /**\r\n     * Enables or disables continuous updates.\r\n     *\r\n     * @param {Boolean} enable - Whether to enable or disable\r\n     *      continuous updates. Note that the value won't be applied\r\n     *      if MutationObserver is not supported.\r\n     */\r\n    set continuousUpdates(enable) {\r\n        // The state of continuous updates should not be modified\r\n        // if MutationObserver is not supported.\r\n        if (!mutationsSupported) {\r\n            return;\r\n        }\r\n\r\n        this._isCycleContinuous = enable;\r\n\r\n        // Immediately start the update cycle in order not to\r\n        // wait for a possible event that will initiate it.\r\n        if (this._listenersEnabled && enable) {\r\n            this.runUpdates();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserver} observer - Observer to be added.\r\n     */\r\n    connect(observer) {\r\n        if (!this.isConnected(observer)) {\r\n            this._observers.push(observer);\r\n        }\r\n\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this._listenersEnabled) {\r\n            this._addListeners();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserver} observer - Observer to be removed.\r\n     */\r\n    disconnect(observer) {\r\n        let observers = this._observers,\r\n            index = observers.indexOf(observer);\r\n\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n\r\n        // Remove listeners if controller\r\n        // has no connected observers.\r\n        if (!observers.length && this._listenersEnabled) {\r\n            this._removeListeners();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tells whether provided observer is connected to controller.\r\n     *\r\n     * @param {ResizeObserver} observer - Observer to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    isConnected(observer) {\r\n        return !!~this._observers.indexOf(observer);\r\n    }\r\n\r\n    /**\r\n     * Updates every observer from observers list and\r\n     * notifies them of queued entries.\r\n     *\r\n     * @private\r\n     * @returns {Boolean} Returns \"true\" if any observer\r\n     *      has detected changes in dimensions of its' elements.\r\n     */\r\n    _updateObservers() {\r\n        let hasChanges = false;\r\n\r\n        for (const observer of this._observers) {\r\n            observer.gatherActive();\r\n\r\n            if (observer.hasActive()) {\r\n                hasChanges = true;\r\n\r\n                observer.broadcastActive();\r\n            }\r\n        }\r\n\r\n        return hasChanges;\r\n    }\r\n\r\n    /**\r\n     * Starts the update cycle which will run either\r\n     * until it detects changes in the dimensions of\r\n     * elements or the idle timeout is reached.\r\n     */\r\n    runUpdates() {\r\n        this._cycleStartTime = now();\r\n        this._isCycleActive = true;\r\n\r\n        this.scheduleUpdate();\r\n    }\r\n\r\n    /**\r\n     * Schedules the update of observers.\r\n     */\r\n    scheduleUpdate() {\r\n        // Schedule new update if it\r\n        // hasn't been scheduled already.\r\n        if (!this._isUpdateScheduled) {\r\n            this._isUpdateScheduled = true;\r\n\r\n            requestAnimFrame(this._resolveScheduled);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invokes the update of observers. It may re-run the\r\n     * cycle if changes in observers have been detected.\r\n     *\r\n     * @private\r\n     */\r\n    _resolveScheduled() {\r\n        const hasChanges = this._updateObservers();\r\n\r\n        this._isUpdateScheduled = false;\r\n\r\n        // Do nothing if cycle wasn't started,\r\n        // i.e. a single update was requested.\r\n        if (!this._isCycleActive) {\r\n            return;\r\n        }\r\n\r\n        // Re-start cycle so that we can catch future changes,\r\n        // e.g. when there are active CSS transitions.\r\n        if (hasChanges) {\r\n            this.runUpdates();\r\n        } else if (this._hasRemainingTime()) {\r\n            // Keep running updates if idle timeout isn't reached yet.\r\n            // This way we make it possible to adjust to delayed transitions.\r\n            this.scheduleUpdate();\r\n        } else {\r\n            // Finish update cycle.\r\n            this._endUpdates();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tells whether the update cycle has time remaining.\r\n     *\r\n     * @private\r\n     * @returns {Boolean}\r\n     */\r\n    _hasRemainingTime() {\r\n        const timePassed = now() - this._cycleStartTime;\r\n\r\n        return this._idleTimeout - timePassed > 0;\r\n    }\r\n\r\n    /**\r\n     * Callback which is invoked when update cycle\r\n     * is finished. It may start a new cycle if continuous\r\n     * updates are enabled.\r\n     *\r\n     * @private\r\n     */\r\n    _endUpdates() {\r\n        this._isCycleActive = false;\r\n\r\n        if (this._isCycleContinuous && this._listenersEnabled) {\r\n            this._continuousCycleHandler();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     */\r\n    _addListeners() {\r\n        // Do nothing if listeners have been already added.\r\n        if (this._listenersEnabled) {\r\n            return;\r\n        }\r\n\r\n        this._listenersEnabled = true;\r\n\r\n        // Repeatable cycle is used here because the resize event may\r\n        // lead to continuous changes, e.g. when width or height of an element\r\n        // are controlled by CSS transitions.\r\n        window.addEventListener('resize', this.runUpdates);\r\n\r\n        // Fall back to an infinite cycle.\r\n        if (!mutationsSupported) {\r\n            this._isCycleContinuous = true;\r\n        } else {\r\n            // Subscribe to DOM mutations as they may lead to\r\n            // changes in dimensions of elements.\r\n            this._mutationsObserver = new MutationObserver(this._onMutation);\r\n\r\n            this._mutationsObserver.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n\r\n        // Don't wait for possible event that might trigger the\r\n        // update of observers and manually initiate update cycle.\r\n        if (this._isCycleContinuous) {\r\n            this.runUpdates();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     */\r\n    _removeListeners() {\r\n        // Do nothing if listeners have been already removed.\r\n        if (!this._listenersEnabled) {\r\n            return;\r\n        }\r\n\r\n        window.removeEventListener('resize', this.runUpdates);\r\n\r\n        if (this._mutationsObserver) {\r\n            this._mutationsObserver.disconnect();\r\n        }\r\n\r\n        this._mutationsObserver = null;\r\n        this._listenersEnabled = false;\r\n    }\r\n\r\n    /**\r\n     * DOM mutations handler.\r\n     *\r\n     * @private\r\n     * @param {Array<MutationRecord>} entries - An array of mutation records.\r\n     */\r\n    _onMutation(entries) {\r\n        // Check if at least one entry\r\n        // contains attributes changes.\r\n        const attrsChanged = entries.some(entry => {\r\n            return entry.type === 'attributes';\r\n        });\r\n\r\n        // It's expected that animations may start only\r\n        // after some attribute changes its' value.\r\n        attrsChanged ?\r\n            this.runUpdates() :\r\n            this.scheduleUpdate();\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/resize-observer-polyfill/src/ResizeObserverController.js\n **/","/**\r\n * A shim for performance.now method which falls back\r\n * to Date.now if the first one is not supported.\r\n *\r\n * @returns {Timestamp}\r\n */\r\nexport default (() => {\r\n    if (\r\n        window.performance &&\r\n        typeof window.performance.now === 'function'\r\n    ) {\r\n        return () => window.performance.now();\r\n    }\r\n\r\n    return () => Date.now();\r\n})();\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/resize-observer-polyfill/src/shims/performance.now.js\n **/","/**\r\n * A shim for requestAnimationFrame which falls back\r\n * to setTimeout if the first one is not supported.\r\n *\r\n * @returns {Number} Requests' identifier.\r\n */\r\nexport default (() => {\r\n    if (\r\n        window.requestAnimationFrame &&\r\n        typeof window.requestAnimationFrame === 'function'\r\n    ) {\r\n        return window.requestAnimationFrame;\r\n    }\r\n\r\n    return callback => {\r\n        return setTimeout(() => callback(Date.now()), 1000 / 60);\r\n    };\r\n})();\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/resize-observer-polyfill/src/shims/requestAnimationFrame.js\n **/","import {Map} from './shims/es6-collections';\r\nimport ResizeObservation from './ResizeObservation';\r\nimport ResizeObserverEntry from './ResizeObserverEntry';\r\n\r\nexport default class ResizeObserver {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {Function} callback - Callback function which will be invoked\r\n     *      when one of the observed elements changes its' content rectangle.\r\n     * @param {ResizeObsreverController} controller - Controller instance\r\n     *      which is responsible for the updates of observer.\r\n     * @param {ResizeObserver} publicObserver - Reference\r\n     *      to the public ResizeObserver instance which will be passed\r\n     *      to callback function.\r\n     */\r\n    constructor(callback, controller, publicObserver) {\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n\r\n        // Reference to the callback function.\r\n        this._callback = callback;\r\n\r\n        // A registry of ResizeObservation instances.\r\n        this._targets = new Map();\r\n\r\n        // A collection of resize observations that have detected\r\n        // changes in dimensions of elements.\r\n        this._activeTargets = [];\r\n\r\n        // Reference to associated ResizeObserverController.\r\n        this._controller = controller;\r\n\r\n        // Public ResizeObserver instance which will be passed\r\n        // to callback function.\r\n        this._publicObserver = publicObserver;\r\n    }\r\n\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    observe(target) {\r\n        //  Throw the same errors as in a native implementation.\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n\r\n        if (!(target instanceof Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n\r\n        const targets = this._targets;\r\n\r\n        // Do nothing if element is already being observed.\r\n        if (targets.has(target)) {\r\n            return;\r\n        }\r\n\r\n        targets.set(target, new ResizeObservation(target));\r\n\r\n        // Add observer to controller if\r\n        // it hasn't been connected yet.\r\n        if (!this._controller.isConnected(this)) {\r\n            this._controller.connect(this);\r\n        }\r\n\r\n        // Update observations.\r\n        this._controller.runUpdates();\r\n    }\r\n\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     */\r\n    unobserve(target) {\r\n        //  Throw the same errors as in a native implementation.\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n\r\n        if (!(target instanceof Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n\r\n        const targets = this._targets;\r\n\r\n        // Do nothing if element is not being observed.\r\n        if (!targets.has(target)) {\r\n            return;\r\n        }\r\n\r\n        // Remove element and associated with\r\n        // it ResizeObsrvation instance from registry.\r\n        targets.delete(target);\r\n\r\n        // Set back the initial state if\r\n        // there is nothing to observe.\r\n        if (!targets.size) {\r\n            this.disconnect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops observing all elements and\r\n     * clears the observations list.\r\n     */\r\n    disconnect() {\r\n        this.clearActive();\r\n        this._targets.clear();\r\n        this._controller.disconnect(this);\r\n    }\r\n\r\n    /**\r\n     * Invokes initial callback function with a list\r\n     * of ResizeObserverEntry instances collected from\r\n     * active resize observations.\r\n     */\r\n    broadcastActive() {\r\n        // Do nothing if observer doesn't\r\n        // have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n\r\n        const publicObserver = this._publicObserver;\r\n\r\n        // Create ResizeObserverEntry instance\r\n        // for every active observation.\r\n        const entries = this._activeTargets.map(observation => {\r\n            return new ResizeObserverEntry(\r\n                observation.target,\r\n                observation.broadcastRect()\r\n            );\r\n        });\r\n\r\n        this.clearActive();\r\n\r\n        this._callback.call(publicObserver, entries, publicObserver);\r\n    }\r\n\r\n    /**\r\n     * Clears the collection of pending/active observations.\r\n     */\r\n    clearActive() {\r\n        this._activeTargets.splice(0);\r\n    }\r\n\r\n    /**\r\n     * Tells whether the observer has\r\n     * pending observations.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    hasActive() {\r\n        return !!this._activeTargets.length;\r\n    }\r\n\r\n    /**\r\n     * Clears an array of previously collected active observations\r\n     * and collects observation instances whose associated element\r\n     * has changes in its' content rectangle.\r\n     */\r\n    gatherActive() {\r\n        this.clearActive();\r\n\r\n        const activeTargets = this._activeTargets;\r\n\r\n        this._targets.forEach(observation => {\r\n            if (observation.isActive()) {\r\n                activeTargets.push(observation);\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/resize-observer-polyfill/src/_ResizeObserver.js\n **/","// Placeholder of a content rectangle.\r\nconst emptyRect = createContentRect(0, 0, 0, 0);\r\n\r\n/**\r\n * Extracts computed styles of provided element.\r\n *\r\n * @param {Element} target\r\n * @returns {CSSStyleDeclaration}\r\n */\r\nfunction getStyles(target) {\r\n    return window.getComputedStyle(target);\r\n}\r\n\r\n/**\r\n * Converts provided string defined\r\n * in q form of '{{value}}px' to number.\r\n *\r\n * @param {String} value\r\n * @returns {Number}\r\n */\r\nfunction pixelsToNumber(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...String} positions - Borders positions (top, right, ...)\r\n * @returns {Number}\r\n */\r\nfunction getBordersSize(styles, ...positions) {\r\n    return positions.reduce((size, pos) => {\r\n        const value = styles['border-' + pos + '-width'];\r\n\r\n        return size + pixelsToNumber(value);\r\n    }, 0);\r\n}\r\n\r\n/**\r\n *  Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    const boxKeys = ['top', 'right', 'bottom', 'left'];\r\n    const paddings = {};\r\n\r\n    for (const key of boxKeys) {\r\n        const value = styles['padding-' + key];\r\n\r\n        paddings[key] = pixelsToNumber(value);\r\n    }\r\n\r\n    return paddings;\r\n}\r\n\r\n/**\r\n * Creates content rectangle based on the provided dimensions\r\n * and the top/left positions.\r\n *\r\n * @param {Number} width - Width of rectangle.\r\n * @param {Number} height - Height of rectangle.\r\n * @param {Number} top - Top position.\r\n * @param {Number} left - Left position.\r\n * @returns {ClientRect}\r\n */\r\nfunction createContentRect(width, height, top, left) {\r\n    return {\r\n        width, height, top,\r\n        right: width + left,\r\n        bottom: height + top,\r\n        left\r\n    };\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGElement} target - Element whose content\r\n *      rectangle needs to be calculated.\r\n * @returns {ClientRect}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    const bbox = target.getBBox();\r\n\r\n    return createContentRect(bbox.width, bbox.height, 0, 0);\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of a root element.\r\n *\r\n * @returns {ClientRect}\r\n */\r\nfunction getDocElementRect() {\r\n    // Neither scroll[Width/Height] nor offset[Width/Height] can be used to define\r\n    // content dimensions as they give inconsistent results across different browser.\r\n    // E.g. in Internet Explorer 10 and lower these properties can't be less than\r\n    // client dimensions (same thing with the \"getBoundingClientRect\" method).\r\n    // And Firefox has the same behavior with its \"scroll\" properties.\r\n    const styles = getStyles(document.documentElement);\r\n\r\n    const width = pixelsToNumber(styles.width);\r\n    const height = pixelsToNumber(styles.height);\r\n\r\n    return createContentRect(width, height, 0, 0);\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element whose content\r\n *      rectangle needs to be calculated.\r\n * @returns {ClientRect}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    const clientWidth = target.clientWidth;\r\n    const clientHeight = target.clientHeight;\r\n\r\n    // By this condition we can catch all non-replaced inline, hidden and detached\r\n    // elements. Though elements whose width & height are less than 0.5 will\r\n    // be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuerys' ':visible' filter\r\n    // gives wrong results for elements whose width & height are less\r\n    // than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n\r\n    const styles = getStyles(target);\r\n    const paddings = getPaddings(styles);\r\n    const horizPad = paddings.left + paddings.right;\r\n    const vertPad = paddings.top + paddings.bottom;\r\n\r\n    // Computed styles of width & height are being used because they\r\n    // are the only dimensions available to JS that contain non-rounded values. It could\r\n    // have been possible to utilize getBoundingClientRect if only its' data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    let width = pixelsToNumber(styles.width),\r\n        height = pixelsToNumber(styles.height);\r\n\r\n    // Width & height include paddings and borders\r\n    // when 'border-box' box model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\" properties\r\n        // then it's either IE, and thus we don't need to subtract anything, or\r\n        // an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n\r\n    // In some browsers (only in Firefox, actually) CSS width & height\r\n    // include scroll bars size which can be removed at this step as scroll bars\r\n    // are the only difference between rounded dimensions + paddings\r\n    // and \"client\" properties, though that is not always true in Chrome.\r\n    const vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n    const horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n\r\n    // Chrome has a rather weird rounding of \"client\" properties.\r\n    // E.g. for an element whose content width is 314.2px it sometimes\r\n    // gives the client width of 315px and for the width of 314.7px\r\n    // it may give 314px. And it doesn't happen all the time.\r\n    // This kind of difference needs to be ignored.\r\n    if (Math.abs(vertScrollbar) !== 1) {\r\n        width -= vertScrollbar;\r\n    }\r\n\r\n    if (Math.abs(horizScrollbar) !== 1) {\r\n        height -= horizScrollbar;\r\n    }\r\n\r\n    return createContentRect(width, height, paddings.top, paddings.left);\r\n}\r\n\r\n/**\r\n * Checks whether provided element\r\n * is an instance of SVGElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {Boolean}\r\n */\r\nfunction isSVGElement(target) {\r\n    return target instanceof window.SVGElement;\r\n}\r\n\r\n/**\r\n * Checks whether provided element is\r\n * a document element (root element of a document).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {Boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === document.documentElement;\r\n}\r\n\r\n/**\r\n * Calculates an appropriate content rectangle\r\n * for provided html or svg element.\r\n *\r\n * @param {Element} target - Element whose content rectangle\r\n *      needs to be calculated.\r\n * @returns {ClientRect}\r\n */\r\nfunction getContentRect(target) {\r\n    if (isSVGElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n\r\n    if (isDocumentElement(target)) {\r\n        return getDocElementRect();\r\n    }\r\n\r\n    return getHTMLElementContentRect(target);\r\n}\r\n\r\n/**\r\n * Class that is responsible for computations of the\r\n * content rectangle of provided DOM element and\r\n * for keeping track of its' changes.\r\n */\r\nexport default class ResizeObservation {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element whose content\r\n     *      rectangle needs to be observed.\r\n     */\r\n    constructor(target) {\r\n        this.target = target;\r\n\r\n        // Keeps reference to the last observed content rectangle.\r\n        this._contentRect = emptyRect;\r\n\r\n        // Broadcasted width of content rectangle.\r\n        this.broadcastWidth = 0;\r\n\r\n        // Broadcasted height of content rectangle.\r\n        this.broadcastHeight = 0;\r\n    }\r\n\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight'\r\n     * properties with a data from the corresponding\r\n     * properties of the last observed content rectangle.\r\n     *\r\n     * @returns {ClientRect} Last observed content rectangle.\r\n     */\r\n    broadcastRect() {\r\n        const rect = this._contentRect;\r\n\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n\r\n        return rect;\r\n    }\r\n\r\n    /**\r\n     * Updates content rectangle and tells whether its'\r\n     * width or height properties have changed since\r\n     * the last broadcast.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    isActive() {\r\n        const rect = getContentRect(this.target);\r\n\r\n        this._contentRect = rect;\r\n\r\n        return (\r\n            rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight\r\n        );\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/resize-observer-polyfill/src/ResizeObservation.js\n **/","export default class ResizeObserverEntry {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {ClientRect} rectData - Data of the elements' content rectangle.\r\n     */\r\n    constructor(target, rectData) {\r\n        // Content rectangle needs to be an instance\r\n        // of ClientRect if it's available.\r\n        const rectInterface = window.ClientRect ?\r\n            ClientRect.prototype :\r\n            Object.prototype;\r\n\r\n        // According to the specification following properties\r\n        // are not writable and in native implementation\r\n        // they are also not enumerable.\r\n        const contentRect = Object.create(rectInterface, {\r\n            width: {value: rectData.width},\r\n            height: {value: rectData.height},\r\n            top: {value: rectData.top},\r\n            right: {value: rectData.right},\r\n            bottom: {value: rectData.bottom},\r\n            left: {value: rectData.left}\r\n        });\r\n\r\n        Object.defineProperties(this, {\r\n            target: {value: target},\r\n            contentRect: {value: contentRect}\r\n        });\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/resize-observer-polyfill/src/ResizeObserverEntry.js\n **/","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support AMD\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support CommonJS\n  } else if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + Math.random() + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        return 'rgba(' + rgbColor.join(', ') + ', ' + Math.random() + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/randomcolor/randomColor.js\n **/"],"sourceRoot":""}